include mixins.pug

.ac-wrapper
    h1(data-i18n="DHF Protectorate Citizenship Record") DHF Protectorate Citizenship Record
    .ac-header
        .ac-header__grid
            each entry in ["Character Name", "Planet of Origin", "Age", "Sleeve Type", "Archetype", "Campaign"]
                -
                    const attr = entry.toLowerCase().replace(/ /g,"_");
                .ac-header__item
                    .ac-header__label(data-i18n=entry)=entry
                    input.ac-header__input(name=`attr_${attr}`, type="text")
            each entry in ["Stackpoints", "Influence Points", "Ego Points", "Wealth Level"]
                - const attr = entry.toLowerCase().replace(/ /g,"_");
                .ac-header__item--subitem
                    .ac-header__label(data-i18n=entry)=entry
                    input.ac-header__input(name=`attr_${attr}`, type="text")
    .ac-nav
        each link in ["Character Sheet", "Equipment"]
            label.ac-nav__item
                input.ac-nav__hide(type="radio", name="attr_nav", value=link)
                .ac-nav__label(data-i18n=link)=link
    
    input.ac-nav__hide(type="hidden", name="attr_nav")
    .ac-body
        .ac-body__stats
            each entry in [{"Strength":["Athletics", "Brawl", "Endurance", "Melee Combat", "Toughness"]},{"Perception":["Detection", "D. Energy Wpns", "Firearms", "Search", "Stealth", "Throw"]},{"Empathy":["Diplomacy", "Expression", "Read Person"]}, {"Willpower":["Composure", "Discipline", "Intimidation"]}, {"Acuity":["Data Analysis", "Data Engineering", "Digi. Networking", "Investigation", "Mechanics", "Navigation", "Pilot", "Survival"]}, {"Intelligence":["Bureaucracy", "Cultures", "Engineering", "Geography", "History", "Science", "Medicine"]}]
                -
                    const block_title = Object.keys(entry)[0];
                    const skill_array = Object.values(entry)[0];
                    const attr = block_title.toLowerCase().replace(/ /g,"_");
                .ac-stat
                    .ac-stat__header
                        .ac-stat__title(data-i18n=block_title)=block_title
                        .ac-stat__value
                            input(name=`attr_${attr}`, type="number", value=20)
                            span.ac-stat__bonus(name=`attr_${attr}_bonus`) -
                    .ac-stat__body
                        each skill in skill_array
                            -
                                const attr = skill.toLowerCase().replace(/ /g,"_");
                                const roll = [
                                    `&{template:alteredcarbon}`,
                                    `{{name=${skill}}}`,
                                    `{{character_name=@{character_name}}}`,
                                    `{{target_number=?{Target Number|5}}}`,
                                    `{{roll=[[@{${attr}}]]}}`,
                                    `{{bonus=[[?{Number of Bonus Dice|0}?{Bonus|none,0|d20,d20cs1cf20kl1|d12,d12cs1cf12kl1|d10,d10cs1cf10kl1|d8,d8cs1cf8kl1|d6,d6cs1cf6kl1|d4,d4cs1cf4kl1}]]}}`,
                                    `{{luck=[[?{Luck|none,0|d20,d20cs1cf20|d12,d12cs1cf12|d10,d10cs1cf10|d8,d8cs1cf8|d6,d6cs1cf6|d4,d4cs1cf4}]]}}`
                                ].join(" ");
                            .ac-skill
                                button.ac-skill__name(data-i18n=skill, type="roll", value=roll)=skill
                                .ac-skill__value
                                    select(name=`attr_${attr}`)
                                        +dice-select()
        .ac-body__traits
            each repeating in ["Traits", "Abilities", "Specializations"] 
                - const attr = repeating.toLowerCase().replace(/ /g,"_");
                .ac-traits
                    .ac-traits__header(data-i18n=repeating)=repeating
                    fieldset(class=`repeating_${attr}`)
                        .ac-trait
                            .ac-trait__title 
                                input.ac-trait__input(data-i18n-placeholder="Name", name=`attr_${attr}_name`, type="text")
                            .ac-trait__description
                                textarea(data-i18n-placeholder="Description", name=`attr_${attr}_description`)
        .ac-body__misc
            .ac-body__col
                .ac-networks
                    .ac-networks__header(data-i18n="Networks/Contacts") Networks/Contacts
                    fieldset(class=`repeating_networks`)
                        .ac-networks__item
                            input.ac-networks__input(name="attr_network", type="text")
                .ac-baggage
                    .ac-baggage__header(data-i18n="Baggage/Scandals") Baggage/Scandals
                    fieldset(class=`repeating_baggage`)
                        .ac-baggage__item
                            textarea.ac-baggage__input(name="attr_baggage", type="text")
            .ac-body__col
                .ac-biometrics
                    .ac-biometrics__header(data-i18n="Sleeve Biometrics") Sleeve Biometrics
                    .ac-biometrics__container
                            .ac-biometrics__row
                                .ac-biometrics__label(data-i18n="Tech Points") Tech Points
                                .ac-biometrics__input--minmax
                                    input.ac-minmax(name="attr_techpoints", type="number")
                                    | /
                                    input.ac-minmax(name="attr_techpoints_max", type="number")
                            .ac-biometrics__row
                                .ac-biometrics__label(data-i18n="Damage Threshold") Damage Threshold
                                .ac-biometrics__input
                                    input.ac-minmax(name="attr_damagethreshold", type="text")
                            .ac-biometrics__row--textarea
                                .ac-biometrics__label(data-i18n="Special") Special
                                .ac-biometrics__input
                                    textarea(name="attr_special")
                .ac-health
                    .ac-health__row
                        .ac-health__label(data-i18n="Health Points") Health Points
                        .ac-health__input--minmax
                            input.ac-minmax(name="attr_hitpoints", type="number")
                            | /
                            input.ac-minmax(name="attr_hitpoints_max", type="number")
                    .ac-health__injuries
                        .ac-health__label(data-i18n="Injuries") Injuries
                        fieldset(class=`repeating_injuries`)
                            .ac-networks__item
                                input.ac-networks__input(name="attr_injuries", type="text")
    .ac-equipment
        .ac-equipment__credits
            .ac-credits
                .ac-credits__title(data-i18n="Credits")
                each level in [1, 2, 3, 4, 5]
                    .ac-credits__item
                        .ac-credits__label(data-i18n=`Lv.${level}`) Lv.#{level}
                        input.ac-credits__input(name=`attr_credits_${level}`, type="text")
        
        .ac-equipment__equipment
            .ac-equipment__header(data-i18n="Equipment") Equipment
            fieldset(class=`repeating_equipment`)
                .ac-item
                    .ac-item__row--name
                        .ac-item__label--name(data-i18n="Name") Name
                        input(name="attr_equipment_name", type="text")
                        .ac-item__price
                            .ac-item__label(data-i18n="Price Level") Price Level
                            input(name="attr_equipment_price", type="text")
                    .ac-item__row--skillchecks
                        .ac-item__label(data-i18n="Skill Check(s)") Skill Check(s)
                        span.ac-item__wrap {
                        input.ac-item__input--wrap(name="attr_equipment_checks", type="text")
                        span.ac-item__wrap }
                        .ac-item__bonus
                            .ac-item__label--small +
                            input(name="attr_equipment_bonusdice", type="text")
                            .ac-item__label--small Ã—
                            .ac-item__label--small(data-i18n="Bonus Dice") Bonus Dice
                    .ac-item__row--checks
                        .ac-item__label(data-i18n="Tech Point Chassis") Tech Point Chassis
                        .ac-item__checkmarks
                            each index in [1,2,3,4,5,6,7,8,9,10]
                                label.ac-checkmark
                                    input(name="attr_equipment_tp_chassis", type="radio", value=index)
                                    span
                    .ac-item__row--checks
                        .ac-item__label(data-i18n="Tech Points Used") Tech Points Used
                        .ac-item__checkmarks
                            each index in [1,2,3,4,5,6,7,8,9,10]
                                label.ac-checkmark--red
                                    input(name="attr_equipment_tp_used", type="radio", value=index)
                                    span
                    .ac-item__row--special
                        .ac-item__special
                            .ac-item__label(data-i18n="Special") Special
                            textarea.ac-item__textarea(name="attr_equipment_special")
                    .ac-item__row
                        .ac-item__triggered
                            .ac-item__label(data-i18n="Triggered Effects") Triggered Effects
                            each index in [1,2,3,4,5]
                                .ac-item__checkmarks
                                    each ch_index in [1,2,3,4,5]
                                        label.ac-checkmark--cyan
                                            input(name=`attr_equipment_triggered_${index}`, type="radio", value=ch_index)
                                            span
                                .ac-item__input
                                    input(name=`attr_equipment_triggered_${index}_desc`, type="text")

        .ac-equipment__tools
            .ac-equipment__header(data-i18n="Tools") Tools
            fieldset(class=`repeating_tools`)
                .ac-tool
                    .ac-tool__row--name
                        .ac-tool__label--name(data-i18n="Name") Name
                        input(name="attr_equipment_name", type="text")
                        .ac-tool__price
                            .ac-tool__label(data-i18n="Price Level") Price Level
                            input(name="attr_equipment_price", type="text")
                    .ac-tool__row--skillchecks
                        .ac-tool__label(data-i18n="Skill Check(s)") Skill Check(s)
                        span.ac-tool__wrap {
                        input.ac-tool__input--wrap(name="attr_equipment_checks", type="text")
                        span.ac-tool__wrap }
                        .ac-tool__bonus
                            .ac-tool__label--small +
                            input(name="attr_equipment_bonusdice", type="text")
                            .ac-tool__label--small Ã—
                            .ac-tool__label--small(data-i18n="Bonus Dice") Bonus Dice
                    .ac-tool__row--skillchecks
                        .ac-tool__label(data-i18n="Skill Check(s)") Skill Check(s)
                        span.ac-tool__wrap {
                        input.ac-tool__input--wrap(name="attr_equipment_checks", type="text")
                        span.ac-tool__wrap }
                        .ac-tool__bonus
                            .ac-tool__label--small +
                            input(name="attr_equipment_bonusdice", type="text")
                            .ac-tool__label--small Ã—
                            .ac-tool__label--small(data-i18n="Bonus Dice") Bonus Dice
                    .ac-tool__row--checks
                        .ac-tool__label(data-i18n="Tech Point Chassis") Tech Point Chassis
                        .ac-tool__checkmarks
                            each index in [1,2,3,4,5]
                                label.ac-checkmark
                                    input(name="attr_equipment_tp_chassis", type="radio", value=index)
                                    span
                    .ac-tool__row--checks
                        .ac-tool__label(data-i18n="Tech Points Used") Tech Points Used
                        .ac-tool__checkmarks
                            each index in [1,2,3,4,5]
                                label.ac-checkmark--red
                                    input(name="attr_equipment_tp_used", type="radio", value=index)
                                    span
                    .ac-tool__row--special
                        .ac-tool__special
                            .ac-tool__label(data-i18n="Special") Special
                            textarea.ac-tool__textarea(name="attr_tool_special")

include rolltemplates.pug

script(type="text/worker")

    include ../js/sheetworker.js