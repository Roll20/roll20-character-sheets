
mixin tags(array)
  each tag in array
    | {{##{ tag }}}
  if block
    block
  each tag in array.reverse()
    | {{/#{ tag }}}

mixin roll-template-sentence
  .sheet-arc__sentence
    +tags(["character_name"])
      .sheet-arc__sentence--name(class=`{{type}}`) {{ character_name }}
    +tags(["verb"])
      .sheet-arc__sentence--verb(class=`{{type}}`) {{ verb }}
    +tags(["action"])
      .sheet-arc__sentence--action(class=`{{type}}`) {{ action }}

rolltemplate.sheet-rolltemplate-recover
  .sheet-arc__container
    .sheet-arc__banner(class=`{{type}}`)
    .sheet-arc__content(class=`{{type}}`)
      +roll-template-sentence
      .sheet-arc__recover(class=`{{type}}`)
        .sheet-arc__recover--arrow &#x25B6;
        .sheet-arc__recover--text
          +span({ data_i18n: "recovery_{{type}}",
                  data_i18n_vars: "{{blood}}|{{guts}}" })
    .sheet-arc__footnote
      span.sheet-arc__footnote--mark &#x203B;
      +span({ data_i18n: "update_character_sheet" }).sheet-arc__footnote--span

rolltemplate.sheet-rolltemplate-fallen
  .sheet-arc__container
    .sheet-arc__banner(class=`{{type}}`)
    .sheet-arc__content(class=`{{type}}`)
      +roll-template-sentence
      .sheet-arc__fallen(class=`{{type}}`)
        .sheet-arc__fallen--roll
          span {{ consequence }}
        each con in range(6)
          +tags([`rollTotal() consequence ${con}`])
            .sheet-arc__fallen--text
              +span({ data_i18n: `fallen_consequence_${con}` })
    .sheet-arc__footnote
      span.sheet-arc__footnote--mark &#x203B;
      +span({ data_i18n: "update_character_sheet" }).sheet-arc__footnote--span

rolltemplate.sheet-rolltemplate-skills
  .sheet-arc__container
    .sheet-arc__banner(class=`{{type}}`)
    +tags(["rollLess() roll TN"])
      span.sheet-display-control.sheet-success
    +tags(["rollTotal() roll TN"])
      span.sheet-display-control.sheet-tie
    +tags(["rollGreater() roll TN"])
      span.sheet-display-control.sheet-fail

    .sheet-arc__content(class=`{{type}}`)
      +roll-template-sentence
      .sheet-arc__approach-skill(class=`{{type}}`)
        .sheet-arc__approach-skill--arrow &#x25B6;
        .sheet-arc__approach-skill--approach(class=`{{title}}`)
        +div({ data_i18n: `{{skill}}` }).sheet-arc__approach-skill--text

      .sheet-arc__results
        //- text for success | tie | fail
        .sheet-arc__results--text
          +tags(["rollLess() roll TN"])
            .sheet-arc__success
              +span({ data_i18n: "roll_success" }).sheet-arc__success--span
          +tags(["rollTotal() roll TN"])
            .sheet-arc__tie
              +span({ data_i18n: "roll_tie" }).sheet-arc__tie--span
          +tags(["rollGreater() roll TN"])
            .sheet-arc__fail
              +span({ data_i18n: "roll_fail" }).sheet-arc__fail--span

        //- dice results
        .sheet-arc__results--values
          +div({ data_i18n: "roll" }).sheet-arc__roll--header
          +div({ data_i18n: "versus" }).sheet-arc__versus--header
          +div({ data_i18n: "tn" }).sheet-arc__tn--header

          each roll in range(6)
            +tags([`rollTotal() roll ${roll}`])
              .sheet-arc__roll--value
                img(src=`${data.assets.folder}die_${roll}.png`)
                | {{roll}}
          .sheet-arc__versus--value
            +tags(["rollLess() roll TN"])
              span.sheet-arc__versus--symbol.sheet-success="<"
            +tags(["rollTotal() roll TN"])
              span.sheet-arc__versus--symbol.sheet-tie="="
            +tags(["rollGreater() roll TN"])
              span.sheet-arc__versus--symbol.sheet-fail=">"
          .sheet-arc__tn--value {{TN}}
