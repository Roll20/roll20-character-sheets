$box-width: 11px;
$box-height: 16px;
$box-gap: 2px;
$skill-width: 228px; // comes directly from the original character sheet
$radio-size: max($box-width, $box-height);
// NOTE there is a minimum radio button size defined by the native UI
$checkbox-size: $radio-size;
$foreground: black;
$highlight-color: red;
$background: white;
$input-background: beige;
$positive-background: change-color($input-background, $hue: 120deg); // green
$negative-background: change-color($input-background, $hue: 0deg); // red
$icon-size: $box-height + 2px;
$hidden-opacity: 0.3;
$half-hidden-opacity: 0.5;
$default-font-family: 'Lato', 'Calibri', 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;
$table-cell-padding: 4px;
$block-gap: 22px;
$border-radius: 3px;
$roll-templates: '.sheet-rolltemplate-table, .sheet-rolltemplate-attack, .sheet-rolltemplate-skill';
$emDash: '—';
$narrowNoBreakSpace: ' ';
$noBreakSpace: ' ';
$fractionSlash: '⁄';
$zeroWidthSpace: '​';
$list-line-offset: 6px;
$list-header-offset: 15px;
$list-header-prefix-width: 10px; //0.85em;

//@import url('https://fonts.googleapis.com/css?family=Lato:300,400,900&display=swap&subset=latin-ext');
// The use of Lato was inspired by Kyle Willeys Libre Office Style guide for Degenesis.
/* latin-ext */
@font-face {
  font-family: 'Lato';
  font-style: normal;
  font-weight: 300;
  font-display: swap;
  src: local('Lato Light'), local('Lato-Light'), url(https://fonts.gstatic.com/s/lato/v16/S6u9w4BMUTPHh7USSwaPGR_p.woff2) format('woff2');
  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Lato';
  font-style: normal;
  font-weight: 300;
  font-display: swap;
  src: local('Lato Light'), local('Lato-Light'), url(https://fonts.gstatic.com/s/lato/v16/S6u9w4BMUTPHh7USSwiPGQ.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
/* latin-ext */
@font-face {
  font-family: 'Lato';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local('Lato Regular'), local('Lato-Regular'), url(https://fonts.gstatic.com/s/lato/v16/S6uyw4BMUTPHjxAwXjeu.woff2) format('woff2');
  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Lato';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local('Lato Regular'), local('Lato-Regular'), url(https://fonts.gstatic.com/s/lato/v16/S6uyw4BMUTPHjx4wXg.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
/* latin-ext */
@font-face {
  font-family: 'Lato';
  font-style: normal;
  font-weight: 900;
  font-display: swap;
  src: local('Lato Black'), local('Lato-Black'), url(https://fonts.gstatic.com/s/lato/v16/S6u9w4BMUTPHh50XSwaPGR_p.woff2) format('woff2');
  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Lato';
  font-style: normal;
  font-weight: 900;
  font-display: swap;
  src: local('Lato Black'), local('Lato-Black'), url(https://fonts.gstatic.com/s/lato/v16/S6u9w4BMUTPHh50XSwiPGQ.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

@mixin font-icon
{
    font-size: $icon-size;
    text-transform: none; // See .charsheet
    //vertical-align: middle;
    //text-align: center;
}

@mixin button
{
    //padding-top:    $table-cell-padding;
    //padding-bottom: $table-cell-padding;
    padding: $table-cell-padding;
    border-radius: $border-radius;
}

@mixin disabled
{
    opacity: $half-hidden-opacity;
    pointer-events: none;
    cursor: not-allowed;
}

@mixin text-ellipsis
{
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    @supports (text-overflow: '.')
    {
        text-overflow: '.';
    }
}

@mixin flex-basis-content($axis)
{
    // Emulate flex-basis: content
    flex-basis: auto;
    #{$axis}: auto;
    // See https://developer.mozilla.org/en-US/docs/Web/CSS/flex-basis#Values
    //@supports (flex-basis: content)
    //{
    //    flex-basis: content;
    //    #{$axis}: 0;
    //}
}

@mixin sticky
{
    position: -webkit-sticky;
    position: sticky;
}

@mixin light-font-weight
{
    font-weight: 300;
}

@mixin normal-font-weight
{
    font-weight: 400;
}

@mixin heavy-font-weight
{
    font-weight: 900;
}

.charsheet,
#{$roll-templates}
{
    color: $foreground;
    background: $background;
    min-width: 0; // TODO
    padding: 0;
    line-height: initial;
    font-family: $default-font-family;
    @include light-font-weight;
    text-transform: uppercase;

    @import "modal.scss";
}

.charsheet .sheet-degenesis,
#{$roll-templates}
{
    // .sheet-degenesis is used to raise the specificity of custom rules.
    // Roll20 rules tend to be quite specific and sometimes override custom
    // sheet rules otherwise.

    // Input elements:

    .sheet-user-text // e.g. for attribute-backed spans
    {
        text-transform: initial;
    }

    .sheet-user-text,
    input[type="text"],
    .sheet-textarea-wrapper
    {
        white-space: normal;
    }

    .sheet-capitalized-text
    {
        text-transform: capitalize;
    }

    button,
    .btn // not all Roll20 buttons use the button tag
    {
        // disable native button rendering:
        border: none;
        outline: none;
        background: none;
        text-align: initial;

        // disable roll20 specific properties:
        padding: 0;
        margin: 0;
        font: inherit;
        text-transform: inherit;
        text-shadow: none;
        box-shadow: none;
        &::before
        {
            content: none;
        }

        &[type="roll"]
        {
            padding: 0;
            margin: 0;
            font-size: inherit;

            &::before
            {
                content: none;
            }
        }
    }

    .btn // Adapt Roll20 button style here
    {
        color: $foreground;
    }

    button,
    .btn, // not all Roll20 buttons use the button tag
    .sheet-icon-checkbox,
    .sheet-text-checkbox
    {
        &:hover
        {
            color: $highlight-color;
        }
    }

    // Override Roll20 style:
    label,
    button,
    select
    {
        font: inherit;
        text-transform: inherit;
        line-height: inherit;
    }

    // Override Roll20 style:
    input,
    select
    {
        margin: 0;
    }

    input[type="number"],
    input[type="text"],
    select,
    textarea
    {
        background: none;
        background-color: $input-background;

        border: none;
        color: inherit;
    }

    textarea
    {
        resize: none;
    }

    input[type="checkbox"]
    {
        &:focus
        {
            outline: none;
        }

        &::-moz-focus-inner
        {
            border: none;
        }
    }

    input[type="text"]
    {
        min-width: 12ch;
    }

    input[type="number"]
    {
        min-width: 6ch;
    }

    .sheet-textarea-wrapper
    {
        min-width: 12ch;
        display: block;
        text-transform: initial;
        vertical-align: text-bottom;
        border-radius: $border-radius; // Roll20 default

        position: relative;

        $padding: 4px;

        span,
        textarea
        {
            display: block;
            width: calc(100% - #{2*$padding});
            padding: $padding;
            white-space: pre-wrap;
            margin: 0;
            background: none;
            font: inherit;
            line-height: inherit;
            text-align: inherit;
            text-align-last: auto;
            vertical-align: inherit;
        }

        span
        {
            visibility: hidden;
            &::before
            {
                content: $zeroWidthSpace;
            }
        }

        textarea
        {
            z-index: 1;
            position: absolute;
            top: 0;
            left: 0;
            height: calc(100% - #{2*$padding});
            background-color: $input-background;
        }
    }

    input,
    select,
    button,
    .sheet-textarea-wrapper,
    .sheet-user-text,
    .sheet-text-checkbox,
    .sheet-cycling-button-container
    {
        @include normal-font-weight;
    }

    .sheet-table-line button[type="roll"] // type is needed to be specific enough
    {
        @include button;

        &:hover
        {
            color: $highlight-color;
        }
    }

    // Remove spin buttons from number inputs:
    // TODO: Does nothing ?!
    input[type="number"]
    {
        -moz-appearance: textfield;

        &::-webkit-inner-spin-button,
        &::-webkit-outer-spin-button
        {
            -webkit-appearance: none;
            appearance: none;
        }

        &:hover
        {
            -moz-appearance: initial;

            &::-webkit-inner-spin-button,
            &::-webkit-outer-spin-button
            {
                -webkit-appearance: inner-spin-button;
                appearance: inner-spin-button;
            }
        }
    }

    //input.sheet-show-while-editing[type="number"] + span.sheet-hide-while-editing:empty::before // see input.html
    .sheet-placeholder-when-empty:empty::before
    {
        content: '#{$emDash}';
    }

    @import "repeating-section.scss";


    // General layout:

    .sheet-block-container,
    .sheet-table-container,
    hr
    {
        border-top-color: $foreground;
        margin-top: 0;
        margin-bottom: $block-gap;
    }

    @import "block.scss";
    @import "list.scss";
    @import "box-bar.scss";
    @import "table.scss";
    @import "checkbox.scss";
    @import "cycling-button.scss";
    @import "state.scss";
    @import "accordion.scss";

    // Disable unavailable skills:
    input[name="attr_problem_solving_approach"][value="focus"]   ~ * .sheet-skill-primal,
    input[name="attr_problem_solving_approach"][value="primal"]  ~ * .sheet-skill-focus,
    input[name="attr_mental_strength_source"][value="willpower"] ~ * .sheet-skill-faith,
    input[name="attr_mental_strength_source"][value="faith"]     ~ * .sheet-skill-willpower
    {
        @include disabled;
    }

    .sheet-tech
    {
        font-family: 'Tiers', $default-font-family;
        font-size: 1.2em;
        text-rendering: geometricPrecision;
    }

    .sheet-meter-postfix:not(:empty)::after
    {
        white-space: pre;
        text-transform: none; // See .charsheet
        content: '#{$narrowNoBreakSpace}m';
    }

    .sheet-unit
    {
        text-transform: none; // See .charsheet

        &::before
        {
            white-space: pre;
            content: '#{$narrowNoBreakSpace}';
        }
    }

    .sheet-colon::after
    {
        white-space: pre;
        content: ':#{$noBreakSpace}';
    }

    .sheet-space::before
    {
        white-space: pre;
        content: '#{$noBreakSpace}';
    }

    .sheet-placeholder::before
    {
        content: '#{$emDash}';
    }

    .sheet-fraction-slash::before
    {
        white-space: pre;
        content: '#{$fractionSlash}';
        padding-left:  .3em; // in lieu of a better solution as the fraction slash doesn't seem to take the place it needs
        padding-right: .3em;
    }

    .sheet-inline-detail
    {
        &::before
        {
            content: '(';
        }

        &::after
        {
            content: ')';
        }
    }

    //input:not([value^=\-]) + .sheet-force-number-sign:not(:empty)::before
    input[value]:not([value=""]):not([value^=\-]) + .sheet-force-number-sign::before
    {
        content: '+';
    }

    .sheet-minus-sign::before
    {
        content: '-';
    }

    input[value^=\-] ~ .sheet-highlight-negative-number,
    input:not([value="0"]) ~ .sheet-minus-sign.sheet-highlight-negative-number
    {
        color: $highlight-color;
    }

    span.sheet-positive-background
    {
        background-color: $positive-background;
    }

    span.sheet-negative-background,
    input[name="attr_stowed_is_away"][value="1"] ~ * span.sheet-stowed
    {
        background-color: $negative-background;
    }

    input[name="attr_weapon_type"][value="melee"]  ~ .sheet-attack-far,
    input[name="attr_weapon_type"][value="melee"]  ~ .sheet-attack-extreme,
    input[name="attr_weapon_type"][value="ranged"] ~ .sheet-active-defense
    {
        display: none;
    }

    // Ammunition counters should have a fixed size so they won't take
    // any space from the ammunition type element:
    .sheet-edit:not(:checked) ~ * .sheet-ammunition > input[type="number"]
    {
        flex-grow: 0;
        flex-basis: 4.2ch;
    }


    // If all ammunition values are blank: Hide ammunition span and show the
    // no-ammunition span.

    .sheet-table-line > span.sheet-no-ammunition
    {
        display: none;

        &::before
        {
            content: '#{$emDash}';
        }
    }

    input[name="attr_weapon_ammunition_type"][value=""]    ~ .sheet-no-ammunition,
    input[name="attr_weapon_ammunition_type"]:not([value]) ~ .sheet-no-ammunition
    {
        display: flex;
    }

    input[name="attr_weapon_ammunition_type"][value=""]    ~ .sheet-ammunition,
    input[name="attr_weapon_ammunition_type"]:not([value]) ~ .sheet-ammunition
    {
        display: none;
    }


    // Hide if attribute is blank:
    input[name="attr_weapon_ammunition_max"][value=""] ~ .sheet-max-ammunition
    {
        display: none;
    }

    // Fade out roll buttons if their dice pool is empty:
    // (See html/roll-button.html)
    input[type="hidden"][value="0"] + button
    {
        @include disabled;
    }

    // Hide elements specific to ranged weapons:
    input[name="attr_weapon_type"][value="melee"] ~ .sheet-hide-when-melee
    {
        display: none;
    }


    // Hide armor or shield specific elements:

    input[value="shield"] ~ .sheet-hide-when-shield
    {
        display: none;
    }

    input[value="armor"] ~ .sheet-show-when-shield
    {
        display: none;
    }

    input[name="attr_encumbrance_penalty"]:not([value="0"]) + span[name="attr_encumbrance"]
    {
        color: $highlight-color;
    }

    // Replace shown modifier:
    // TODO: This is a dirty hack :(
    .sheet-action-modifier
    {
        input[name="attr_in_motion"][value="1"] + span > span[name="attr_in_motion"]
        {
            position: relative;
            color: transparent;

            &::before
            {
                position: absolute;
                color: $highlight-color;
                content: '-2';
            }
        }
    }

    input[name="attr_mental_strength_source"]
    {
        &[value="willpower"] ~ .sheet-show-when-faith
        {
            display: none;
        }

        &[value="faith"] ~ .sheet-show-when-willpower
        {
            display: none;
        }
    }

    .sheet-table-line .sheet-highlighted-button-checkbox > span.sheet-effect-state
    {
        display: flex;
        flex-direction: column;

        > *
        {
            flex-grow: 1;
            @include flex-basis-content('height');
            width: auto;
            margin: 0;
        }

        > *[name="attr_effect_origin"]
        {
            @include heavy-font-weight;
            margin-bottom: $table-cell-padding;
        }
    }

    .sheet-effect-attribute-overview
    {
        > *
        {
            display: flex;

            //> input[type="radio"],
            //> input[type="radio"] + span
            > *
            {
                display: none;
            }

            > input[type="radio"]:checked + span
            {
                display: initial;
                padding-left: $table-cell-padding;
            }

            > input[type="radio"]:checked ~ :last-child
            {
                display: initial;
                padding-right: $table-cell-padding;
            }
        }
    }

    .sheet-effect-attribute-table
    {
        display: flex;
        flex-direction: column-reverse;

        > .sheet-table-line
        {
            display: none;
        }

        > .sheet-table-header
        {
            order: 1; // override reverse order (see flex-direction)
        }

        > .sheet-table-header,
        > .sheet-always-visible,
        > input[value]:not([value=""]) ~ .sheet-table-line
        {
            display: grid;
        }
    }

    .sheet-damage-type-postfix
    {
        display: flex;

        > *
        {
            display: none;
        }

        > input:checked + span
        {
            display: initial;
        }
    }
}

#{$roll-templates}
{
    background: none;

    .inlinerollresult
    {
        padding: 0;
        display: block;
        min-width: 1em;
        width: 1em;
        line-height: 1em;
        text-align: center;
        background-color: $foreground;
        color: $background;
    }

    .inlinerollresult,
    .inlinerollresult.fullfail,
    .inlinerollresult.fullcrit,
    .inlinerollresult.importantroll
    {
        border: none;
    }

    .inlinerollresult.fullcrit,
    .inlinerollresult.importantroll
    {
        color: lightgreen;
    }

    .sheet-hidden-rolls .inlinerollresult
    {
        display: inline;
        min-width: 0;
        width: auto;
        background: none;
        animation-name: none;
        font-weight: inherit;
        font-size: inherit;

        &,
        &.fullcrit,
        &.importantroll
        {
            color: inherit;
        }
    }

    .sheet-list
    {
        padding-bottom: 0.5em;
    }

    .sheet-list.sheet-has-image
    {
        position: relative;
        background: none;
        overflow: hidden; // This is needed as the overlay element has
                          // height: 100% *and* an offset!

        > *
        {
            z-index: 2; // so the overlay can be offset too
        }

        > .sheet-list-line.sheet-list-header-line
        {
            padding-bottom: 0;
        }
    }

    .sheet-list:not(.sheet-has-image)
    {
        > .sheet-list-line
        {
            background-color: $background;
        }
    }

    $image-height: 150px;
    $image-blend: 30px;

    .sheet-image img
    {
        z-index: 0;
        width:  100%;
        height: $image-height;
        margin-bottom: -$image-blend * 1.5; // / 2;
        object-fit: cover;
        object-position: center 25%;
        background-color: $background; // for transparent images
    }

    .sheet-image-overlay
    {
        z-index: 1;
        position: absolute;
        width: 100%;
        height: 100%;
        background: linear-gradient(to bottom,
                                    transparent #{$image-height - $image-blend},
                                    $background #{$image-height});
        pointer-events: none;
    }

    .sheet-list-has-header .sheet-image-overlay
    {
        width: calc(100% - #{$list-header-prefix-width});
    }

    .inlinerollresult
    {
        animation-name: flash;
        animation-duration: 3s;
        animation-timing-function: cubic-bezier(0,.6,.4,1);
        overflow: hidden;
    }

    @media (prefers-reduced-motion: reduce)
    {
        .inlinerollresult
        {
            animation: none;
        }
    }
}

@keyframes flash
{
    0%
    {
        color: white;
        background: white;
        text-shadow: 0 0  5px change-color(white, $alpha: 1),
                     0 0  5px change-color(white, $alpha: 1),
                     0 0  5px change-color(white, $alpha: 1),
                     0 0 10px change-color(white, $alpha: 1),
                     0 0 10px change-color(white, $alpha: 1),
                     0 0 20px change-color(white, $alpha: 1);
        box-shadow: 0 0 7px change-color(black, $alpha: 0.5);
    }
}

// Roll20 does not support this:
// animation-duration: 1.5s;
// animation-timing-function: linear;
//@keyframes flash
//{
//    0%
//    {
//        color: transparent;
//        background: black;
//        text-shadow: 0 0 1px change-color(red, $alpha: 0.6),
//                     0 0 1px change-color(red, $alpha: 0.6);
//    }
//
//    4%
//    {
//        text-shadow: 0 0 1px change-color(darkorange, $alpha: 0.6),
//                     0 0 1px change-color(darkorange, $alpha: 0.6);
//    }
//
//    6%
//    {
//        color: transparent;
//        background: black;
//        text-shadow: 0 0 3px change-color(yellow, $alpha: 1),
//                     0 0 3px change-color(yellow, $alpha: 1);
//    }
//
//    7%
//    {
//        color: white;
//        background: white;
//        text-shadow: 0 0  5px change-color(white, $alpha: 1),
//                     0 0 10px change-color(white, $alpha: 1);
//        box-shadow: 0 0 5px change-color(black, $alpha: 0.5);
//    }
//
//    100%
//    {
//        background: black;
//        text-shadow: 0 0  5px change-color(white, $alpha: 0),
//                     0 0 10px change-color(white, $alpha: 0);
//        box-shadow: 0 0 5px change-color(black, $alpha: 0);
//    }
//}
