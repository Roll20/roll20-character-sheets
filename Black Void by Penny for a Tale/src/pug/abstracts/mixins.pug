- const buttonName = name => name.replace(/ /g, '-');
- const attrName = name => name.replace(/ /g, '_');
- const removeSpace = name => name.replace(/ /g, '');
- const toLowerCase = name => name.toLowerCase();

mixin textInput(name)
	label(data-i18n-title=`enter ${name}` title=`enter ${name}`)
		input(data-i18n-placeholder=name name=`attr_${attrName(name)}` title=`@{${attrName(name)}}` type='text' value='')

mixin numberInput(name)
	label(data-i18n-title=`enter ${name}` title=`enter ${name}`)
		input(name=`attr_${attrName(name)}` placeholder='0' title=`@{${attrName(name)}}` type='number' value='0')

mixin checkboxInput(name)
	label.styled-checkbox.grid(data-i18n-title=`toggle ${name}` title=`enter ${name}`)
		input(name=`attr_${attrName(name)}` title=`@{${attrName(name)}}` type='checkbox' value=name)
		span.pictos 3

mixin radioInput(name, value)
	label.styled-checkbox.grid(data-i18n-title=`${name}` title=`select ${name}`)
		input(name=`attr_${attrName(name)}` title=`@{${attrName(name)}}` type='radio' value=value)
		span.pictos 3

mixin checkboxSymbol(name, symbol)
	input.toggles.text-center(name=`attr_${attrName(name)}` title=`@{${attrName(name)}}` type='checkbox' value=name)
	span.toggles.text-center.pictos #{symbol}

mixin textarea(name)
	textarea(name=`attr_${attrName(name)}` data-i18n-placeholder=name)

- const rollTemplate = modifier => `1d12+(${modifier})+(?{Modifiers +/-|0})`;
mixin traitButton(name)
	button(data-i18n=name name=`roll_${buttonName(name)}` type='roll' value!=`&{template:rolls} {{header=^{${name}}}} {{dice=[[${rollTemplate(`@{${name}_modifier}`)}]]}}`)

mixin skillButton(name)
	button.text-left.font-weight-bold(name=`roll_${buttonName(name)}` type='roll' value!=`&{template:rolls} {{header=@{name}}} {{dice=[[${rollTemplate('@{trait_modifier}+@{rank}+@{modifier}')}]]}}`)
		span(name='attr_name')

mixin repeatingRollButton(name)
	button.text-left.font-weight-bold(name=`roll_${buttonName(name)}` type='roll' value!=`&{template:rolls} {{header=@{name}}} {{desc=@{description}}}`)
		span(name='attr_name')

mixin repeatingWeaponButton(name)
	button.text-left.font-weight-bold(name=`roll_${buttonName(name)}` type='roll' value!=`&{template:rolls} {{header=@{name}}} {{dice=[[${rollTemplate('@{attack_modifier}')}]]}} {{damage=^{damage} @{damage}}}`)
		span(name='attr_name')

mixin npcWeaponButton(name)
	button.text-left.font-weight-bold(name=`roll_${buttonName(name)}` type='roll' value!=`&{template:rolls} {{header=@{name}}} {{dice=[[${rollTemplate('@{attack_modifier}')}]]}} {{damage=^{damage} [[0+@{damage}]]}}`)
		span(name='attr_name')

mixin repeatingText(name)
	fieldset(class=`repeating_${buttonName(name)}`)
		.rowx.grid.descriptor
			button.text-left.font-weight-bold(name='roll_button' type='roll')
				span(name='attr_name')
			+checkboxSymbol('collapse', 'i')
			+checkboxSymbol('settings', 'p')
			.rowx.collapse
				span.collapse.description(name='attr_description')
			.rowx.settings
				+textInput(`name`)
				+textarea('description')

include mixins/repeatingBenefits.pug

include mixins/repeatingPowers.pug

include mixins/repeatingWithChecks.pug

include mixins/repeatingSkills.pug

include mixins/repeatingWeapons.pug

include mixins/repeatingTraits.pug

include mixins/repeatingNPCAttacks.pug

include mixins/repeatingNPCSkills.pug