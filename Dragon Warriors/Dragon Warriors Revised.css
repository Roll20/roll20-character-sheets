/* Import Google Fonts for Almendra and Almendra SC */
@import url('https://fonts.googleapis.com/css?family=Almendra+SC|Macondo|Cormorant+Unicase&display=swap');

/* Option 1: CSS Variables for consistency and easier future adjustments */
:root {
  --bg-color: #F5F5F5; /* Background color for inputs, textareas, etc. */
  --primary-bg-color: #DCDCDC; /* Primary background color for divs */
  --padding: 2px;
  --border-radius: 3px;
  --border-color: #a8a8a8;
  --hover-bg-color: #e0e0e0;
  --hover-border-color: #888;
}

/* Global styling */
* {
  box-sizing: border-box;
  font-family:  'Almendra SC', serif;
  font-size: 18px;
  padding: var(--padding);
}

/* Specifying Macondo for specific elements */
.ui-dialog .charsheet p {
  font-family: 'Cormorant Unicase', serif; 
}

.ui-dialog .charsheet h2 {
    text-align: center;
    font-size: 19px;
    margin-bottom: 10px;
}

/* Default styling for labels */
.ui-dialog .charsheet label {
  font-size: 16px;
  color: #333; /* Dark gray for better readability */
  margin-bottom: 2px; /* Space between label and input */
}

/* Ensuring inputs inherit font size */
.ui-dialog .charsheet input[type="text"],
.ui-dialog .charsheet input[type="number"],
.ui-dialog .charsheet select {
  background-color: var(--bg-color); /* Use the background color variable */
  border: 1px solid var(--border-color); /* Ensure inputs have border */
  border-radius: var(--border-radius); /* Matching border radius */
  padding: var(--padding); /* Consistent padding */
  font-size: inherit; /* Inherit font size from the root */
  box-sizing: border-box;
  font-family: 'Cormorant Unicase', serif;  
}

.sheet-auto-expand {
  position: relative;
  cursor: text;
  word-wrap: break-word;
    border: 1px solid var(--border-color); /* Ensure inputs have border */
    border-radius: var(--border-radius); /* Matching border radius */
    padding: var(--padding); /* Consistent padding */
    font-size: inherit; /* Inherit font size from the root */
    font-family: 'Cormorant Unicase', serif;
    min-height:3em;
}

.sheet-auto-expand span {
  visibility: hidden;
  white-space: pre-wrap;
  display: block;
}

.sheet-auto-expand textarea {
  position: absolute;
  z-index: 1;
  top: 0;
  left: 0;
  margin: 0;
  overflow: hidden;
  resize: none;
  height: 100%;
  width: 100%;
  display: block;
  box-sizing: border-box;
  background: transparent;
    background-color: var(--bg-color); /* Use the background color variable */
  border: none;
  border-radius: 0;
  box-shadow: none;
  color: inherit;
  font: inherit;
  letter-spacing: inherit;
  padding: inherit;
  text-align: inherit;
  text-transform: inherit;
}

/* Styling for classes */
.ui-dialog .charsheet .subtext {
  font-size: 16px;
  align-self: flex-end;
}

.ui-dialog .charsheet .larger {
  font-size: 19px;
  font-weight: bold;
}

/* Input width based on size */
.ui-dialog .charsheet .flexitextinput {
  width: 98%;
}

.ui-dialog .charsheet .fourshorttextinput {
  width: 4em;
}

.ui-dialog .charsheet .sixshorttextinput {
  width: 6em;
}

.ui-dialog .charsheet .eightmidtextinput {
  width: 8em;
}

.ui-dialog .charsheet .twelvemidlongtextinput {
  width: 12em;
}

.ui-dialog .charsheet .fourteenlongtextinput {
  width: 14em;
}

.ui-dialog .charsheet .sixteenlongtextinput {
  width: 16em;
}

/* Label text alignment */
.ui-dialog .charsheet .centerlabel {
  text-align: center;
}

.ui-dialog .charsheet .justifylabel {
  text-align: justify;
}
/* Option 2: Focus styling for accessibility  */
.ui-dialog .charsheet input:focus,
.ui-dialog .charsheet textarea:focus,
.ui-dialog .charsheet button:focus,
.ui-dialog .charsheet select:focus {
  /* outline: 2px solid var(--hover-border-color);*/
  background-color: var(--hover-bg-color);
}

/* General styling for details and summary elements */
.ui-dialog .charsheet details summary {
  font-family:  'Almendra SC', serif;
  padding: 10px 15px;
  background-color: var(--bg-color);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  cursor: pointer;
  margin: 0;
  outline: none;
  text-align: center;
  width: 98%;
  transition: background-color 0.3s, border-color 0.3s;
  font-weight: normal;
}

.ui-dialog .charsheet details summary.bigbolddetails {
  font-weight: bold;
  font-size: larger;
  background-color: var(--hover-bg-color);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  cursor: pointer;
}

/* Hover effects for details/summary */
.ui-dialog .charsheet details summary:hover,
.ui-dialog .charsheet details summary:focus,
.ui-dialog .charsheet details summary.bigbolddetails:hover {
  background-color: var(--hover-bg-color);
  border-color: var(--hover-border-color);
}

/* Button styling */
.ui-dialog .charsheet button[type=roll]::before {
  content: "" !important;
}

.ui-dialog .charsheet button.d20,
.ui-dialog .charsheet button.twod10,
.ui-dialog .charsheet button.d4,
.ui-dialog .charsheet button.d8,
.ui-dialog .charsheet button.d12,
.ui-dialog .charsheet button.d6 {
  background-size: 26px 26px;
  background-repeat: no-repeat;
  background-position: center;
  width: 26px;
  height: 26px;
  border: none;
  background-color: transparent;
  margin: 5px;
  cursor: pointer;
  transition: none !important;
  transform: none !important;
}

/* Hover reset for button images */
.ui-dialog .charsheet button.d20:hover,
.ui-dialog .charsheet button.twod10:hover,
.ui-dialog .charsheet button.d12:hover,
.ui-dialog .charsheet button.d8:hover,
.ui-dialog .charsheet button.d4:hover,
.ui-dialog .charsheet button.d6:hover {
  background-color: transparent;
  background-position: center;
  cursor: pointer;
  transition: none !important;
  transform: none !important;
}

.ui-dialog .charsheet button.d12 {
  background-image: url(https://i.imgur.com/1JXzzm7.jpeg); /* Sets the background image for the button */;
}

.ui-dialog .charsheet button.d8 {
  background-image: url(https://i.imgur.com/YcP84zl.jpeg); /* Sets the background image for the button */;
}

.ui-dialog .charsheet button.twod10 {
  background-image: url(https://i.imgur.com/pqfUDrV.jpg); /* Sets the background image for the button */;
}

.ui-dialog .charsheet button.d20 {
  background-image: url(https://i.imgur.com/JQC7jDf.jpg); /* Sets the background image for the button */;
}
.ui-dialog .charsheet button.d6 {
  background-image: url(https://i.imgur.com/f9a64YX.jpeg); /* Sets the background image for the button */;
}

.ui-dialog .charsheet button.d4 {
  background-image: url(https://i.imgur.com/0DpGQH7.jpeg); /* Sets the background image for the button */;
}

/* Option 5: Refactor Image Class Names */
.ui-dialog .charsheet img.icon {
  margin-left: auto;
  margin-right: auto;
}

/* Specific image class styles */
.ui-dialog .charsheet img.icon.backpack {
  width: 45%;
}

.ui-dialog .charsheet img.icon.chest {
  width: 98%;
  height: auto;
}

.ui-dialog .charsheet img.icon.shield {
  width: 95%;
}

.ui-dialog .charsheet img.icon.hand,
.ui-dialog .charsheet img.icon.handa {
  width: 40px;
  height: 25px;
}

.ui-dialog .charsheet img.icon.handa {
  transform: scaleX(-1); /* Flip horizontally */
}

.ui-dialog .charsheet img.icon.skull,
.ui-dialog .charsheet img.icon.rider {
  width: 90%;
}

.ui-dialog .charsheet img.icon.liftclaw {
  width: 45%;
}

/* Styling for header images */
.ui-dialog .charsheet img.headerimage {
  width: 100%;
  height: auto;
}
        
.ui-dialog .charsheet img.icon.sword {
  width: 98%;
  height: auto;
}
/* Additional image styling */
.ui-dialog .charsheet img.icon.bow {
  transform: rotate(180deg);
}

/* Configure the 'radio' button styling for health and magic point trackers. */
.ui-dialog .charsheet button.sdot {
  padding: 0;
  border: solid 1px #a8a8a8;
  margin-left: 6px;
  margin-bottom:3px;
  cursor: pointer;
  width: 21px;
  height: 21px;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.ui-dialog .charsheet button.sdot > span {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background-image: url(https://i.imgur.com/ru2VnTB.png);
  background-repeat: no-repeat;
  background-size: 80%;
  background-position: center center;
}

.ui-dialog .charsheet button.wtdot {
  padding: 0;
  border: solid 1px #a8a8a8;
  margin-left: 6px;
  margin-bottom:3px;
  cursor: pointer;
  width: 21px;
  height: 21px;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.ui-dialog .charsheet button.wtdot > span {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background-image: url(https://i.imgur.com/ERkbC3Q.png);
  background-repeat: no-repeat;
  background-size: 80%;
  background-position: center center;
}

.ui-dialog .charsheet button.mdot {
  padding: 0;
  border: solid 1px #a8a8a8;
  margin-left: 6px;
  margin-bottom:3px;
  cursor: pointer;
  width: 21px;
  height: 21px;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.ui-dialog .charsheet button.mdot > span {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background-image: url(https://i.imgur.com/yZp3cmw.png);
  background-repeat: no-repeat;
  background-size: 90%;
  background-position: center;
}

.ui-dialog .charsheet button.m2dot {
  padding: 0;
  border: solid 1px #a8a8a8;
  margin-left: 6px;
  margin-bottom:3px;
  cursor: pointer;
  width: 21px;
  height: 21px;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.ui-dialog .charsheet button.m2dot > span {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background-image: url(https://i.imgur.com/yZp3cmw.png);
  background-repeat: no-repeat;
  background-size: 90%;
  background-position: center;
}

.ui-dialog .charsheet button.m3dot {
  padding: 0;
  border: solid 1px #a8a8a8;
  margin-left: 6px;
  margin-bottom:3px;
  cursor: pointer;
  width: 21px;
  height: 21px;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.ui-dialog .charsheet button.m3dot > span {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background-image: url(https://i.imgur.com/yZp3cmw.png);
  background-repeat: no-repeat;
  background-size: 90%;
  background-position: center;
}

/* Configure the radio button arrays for health points and magic points */
  input.sdot[value="0"] ~ button.gt-0 > span.checked {
    display: none;
  }  
  input.sdot[value="1"] ~ button.gt-1 > span.checked {
    display: none;
  }
  input.sdot[value="2"] ~ button.gt-2 > span.checked {
    display: none;
  }
  input.sdot[value="3"] ~ button.gt-3 > span.checked {
    display: none;
  }
  input.sdot[value="4"] ~ button.gt-4 > span.checked {
    display: none;
  }
  input.sdot[value="5"] ~ button.gt-5 > span.checked {
    display: none;
  }
  input.sdot[value="6"] ~ button.gt-6 > span.checked {
    display: none;
  }
  input.sdot[value="7"] ~ button.gt-7 > span.checked {
    display: none;
  }
  input.sdot[value="8"] ~ button.gt-8 > span.checked {
    display: none;
  }
  input.sdot[value="9"] ~ button.gt-9 > span.checked {
    display: none;
  }
  input.sdot[value="10"] ~ button.gt-10 > span.checked {
    display: none;
  }
  input.sdot[value="11"] ~ button.gt-11 > span.checked {
    display: none;
  }
  input.sdot[value="12"] ~ button.gt-12 > span.checked {
    display: none;
  } 
  input.sdot[value="13"] ~ button.gt-13 > span.checked {
    display: none;
  } 
  input.sdot[value="14"] ~ button.gt-14 > span.checked {
    display: none;
  } 
  input.sdot[value="15"] ~ button.gt-15 > span.checked {
    display: none;
  } 
  input.sdot[value="16"] ~ button.gt-16 > span.checked {
    display: none;
  } 
  input.sdot[value="17"] ~ button.gt-17 > span.checked {
    display: none;
  } 
  input.sdot[value="18"] ~ button.gt-18 > span.checked {
    display: none;
  } 
  input.sdot[value="19"] ~ button.gt-19 > span.checked {
    display: none;
  } 
  input.sdot[value="20"] ~ button.gt-20 > span.checked {
    display: none;
  } 
  input.sdot[value="21"] ~ button.gt-21 > span.checked {
    display: none;
  }  
  input.sdot[value="22"] ~ button.gt-22 > span.checked {
    display: none;
  }  
  input.sdot[value="23"] ~ button.gt-23 > span.checked {
    display: none;
  }  
  input.sdot[value="24"] ~ button.gt-24 > span.checked {
    display: none;
  }  
  input.sdot[value="25"] ~ button.gt-25 > span.checked {
    display: none;
  }  
  input.sdot[value="26"] ~ button.gt-26 > span.checked {
    display: none;
  }  
  input.sdot[value="27"] ~ button.gt-27 > span.checked {
    display: none;
  }  
  input.sdot[value="28"] ~ button.gt-28 > span.checked {
    display: none;
  }  
  input.sdot[value="29"] ~ button.gt-29 > span.checked {
    display: none;
  }  
  input.sdot[value="30"] ~ button.gt-30 > span.checked {
    display: none;
  }
  input.sdot[value="31"] ~ button.gt-31 > span.checked {
    display: none;
  }
  input.sdot[value="32"] ~ button.gt-32 > span.checked {
    display: none;
  }
  input.sdot[value="33"] ~ button.gt-33 > span.checked {
    display: none;
  }
  input.sdot[value="34"] ~ button.gt-34 > span.checked {
    display: none;
  }
  input.sdot[value="35"] ~ button.gt-35 > span.checked {
    display: none;
  }
  input.sdot[value="36"] ~ button.gt-36 > span.checked {
    display: none;
  }
  input.sdot[value="37"] ~ button.gt-37 > span.checked {
    display: none;
  }
  input.sdot[value="38"] ~ button.gt-38 > span.checked {
    display: none;
  }
  input.sdot[value="39"] ~ button.gt-39 > span.checked {
    display: none;
  }
  input.sdot[value="40"] ~ button.gt-40 > span.checked {
    display: none;
  }
  input.sdot[value="41"] ~ button.gt-41 > span.checked {
    display: none;
  }
  input.sdot[value="42"] ~ button.gt-42 > span.checked {
    display: none;
  }
  input.sdot[value="43"] ~ button.gt-43 > span.checked {
    display: none;
  }
  input.sdot[value="44"] ~ button.gt-44 > span.checked {
    display: none;
  }
  input.sdot[value="45"] ~ button.gt-45 > span.checked {
    display: none;
  }
  input.sdot[value="46"] ~ button.gt-46 > span.checked {
    display: none;
  }
  input.sdot[value="47"] ~ button.gt-47 > span.checked {
    display: none;
  }
  input.sdot[value="48"] ~ button.gt-48 > span.checked {
    display: none;
  }
  input.sdot[value="49"] ~ button.gt-49 > span.checked {
    display: none;
  }
  input.sdot[value="50"] ~ button.gt-50 > span.checked {
    display: none;
  }
  input.wtdot[value="0"] ~ button.wt-0 > span.checked {
    display: none;
  }  
  input.wtdot[value="1"] ~ button.wt-1 > span.checked {
    display: none;
  }
  input.wtdot[value="2"] ~ button.wt-2 > span.checked {
    display: none;
  }
  input.wtdot[value="3"] ~ button.wt-3 > span.checked {
    display: none;
  }
  input.sbody[value="0"] ~ button.gt-0,
  input.sbody[value="1"] ~ button.gt-1,
  input.sbody[value="2"] ~ button.gt-2,
  input.sbody[value="3"] ~ button.gt-3,
  input.sbody[value="4"] ~ button.gt-4,
  input.sbody[value="5"] ~ button.gt-5,
  input.sbody[value="6"] ~ button.gt-6,
  input.sbody[value="7"] ~ button.gt-7,
  input.sbody[value="8"] ~ button.gt-8,
  input.sbody[value="9"] ~ button.gt-9,
  input.sbody[value="10"] ~ button.gt-10,
  input.sbody[value="11"] ~ button.gt-11,
  input.sbody[value="12"] ~ button.gt-12,
  input.sbody[value="13"] ~ button.gt-13,
  input.sbody[value="14"] ~ button.gt-14,
  input.sbody[value="15"] ~ button.gt-15,
  input.sbody[value="16"] ~ button.gt-16,
  input.sbody[value="17"] ~ button.gt-17,
  input.sbody[value="18"] ~ button.gt-18,
  input.sbody[value="19"] ~ button.gt-19,
  input.sbody[value="20"] ~ button.gt-20,
  input.sbody[value="21"] ~ button.gt-21,
  input.sbody[value="22"] ~ button.gt-22,
  input.sbody[value="23"] ~ button.gt-23,
  input.sbody[value="24"] ~ button.gt-24,
  input.sbody[value="25"] ~ button.gt-25,
  input.sbody[value="26"] ~ button.gt-26,
  input.sbody[value="27"] ~ button.gt-27,
  input.sbody[value="28"] ~ button.gt-28,
  input.sbody[value="29"] ~ button.gt-29,
  input.sbody[value="30"] ~ button.gt-30,
  input.sbody[value="31"] ~ button.gt-31,
  input.sbody[value="32"] ~ button.gt-32,
  input.sbody[value="33"] ~ button.gt-33,
  input.sbody[value="34"] ~ button.gt-34,
  input.sbody[value="35"] ~ button.gt-35,
  input.sbody[value="36"] ~ button.gt-36,
  input.sbody[value="37"] ~ button.gt-37,
  input.sbody[value="38"] ~ button.gt-38,
  input.sbody[value="39"] ~ button.gt-39,
  input.sbody[value="40"] ~ button.gt-40,
  input.sbody[value="41"] ~ button.gt-41,
  input.sbody[value="42"] ~ button.gt-42,
  input.sbody[value="43"] ~ button.gt-43,
  input.sbody[value="44"] ~ button.gt-44,
  input.sbody[value="45"] ~ button.gt-45,
  input.sbody[value="46"] ~ button.gt-46,
  input.sbody[value="47"] ~ button.gt-47,
  input.sbody[value="48"] ~ button.gt-48,
  input.sbody[value="49"] ~ button.gt-49,
  input.sbody[value="50"] ~ button.gt-50{
    display: none;
  }
  
  input.wtbody[value="0"] ~ button.wt-0,
  input.wtbody[value="1"] ~ button.wt-1,
  input.wtbody[value="2"] ~ button.wt-2,
  input.wtbody[value="3"] ~ button.wt-3{
  display: none;
  }
  
   input.mdot[value="0"] ~ button.mt-0 > span.checked {
    display: none;
  }  
  input.mdot[value="1"] ~ button.mt-1 > span.checked {
    display: none;
  }
  input.mdot[value="2"] ~ button.mt-2 > span.checked {
    display: none;
  }
  input.mdot[value="3"] ~ button.mt-3 > span.checked {
    display: none;
  }
  input.mdot[value="4"] ~ button.mt-4 > span.checked {
    display: none;
  }
  input.mdot[value="5"] ~ button.mt-5 > span.checked {
    display: none;
  }
  input.mdot[value="6"] ~ button.mt-6 > span.checked {
    display: none;
  }
  input.mdot[value="7"] ~ button.mt-7 > span.checked {
    display: none;
  }
  input.mdot[value="8"] ~ button.mt-8 > span.checked {
    display: none;
  }
  input.mdot[value="9"] ~ button.mt-9 > span.checked {
    display: none;
  }
  input.mdot[value="10"] ~ button.mt-10 > span.checked {
    display: none;
  }
  input.mdot[value="11"] ~ button.mt-11 > span.checked {
    display: none;
  }
  input.mdot[value="12"] ~ button.mt-12 > span.checked {
    display: none;
  } 
  input.mdot[value="13"] ~ button.mt-13 > span.checked {
    display: none;
  } 
  input.mdot[value="14"] ~ button.mt-14 > span.checked {
    display: none;
  } 
  input.mdot[value="15"] ~ button.mt-15 > span.checked {
    display: none;
  } 
  input.mdot[value="16"] ~ button.mt-16 > span.checked {
    display: none;
  } 
  input.mdot[value="17"] ~ button.mt-17 > span.checked {
    display: none;
  } 
  input.mdot[value="18"] ~ button.mt-18 > span.checked {
    display: none;
  } 
  input.mdot[value="19"] ~ button.mt-19 > span.checked {
    display: none;
  } 
  input.mdot[value="20"] ~ button.mt-20 > span.checked {
    display: none;
  } 
  input.mdot[value="21"] ~ button.mt-21 > span.checked {
    display: none;
  }  
  input.mdot[value="22"] ~ button.mt-22 > span.checked {
    display: none;
  }  
  input.mdot[value="23"] ~ button.mt-23 > span.checked {
    display: none;
  }  
  input.mdot[value="24"] ~ button.mt-24 > span.checked {
    display: none;
  }  
  input.mdot[value="25"] ~ button.mt-25 > span.checked {
    display: none;
  }  
  input.mdot[value="26"] ~ button.mt-26 > span.checked {
    display: none;
  }  
  input.mdot[value="27"] ~ button.mt-27 > span.checked {
    display: none;
  }  
  input.mdot[value="28"] ~ button.mt-28 > span.checked {
    display: none;
  }  
  input.mdot[value="29"] ~ button.mt-29 > span.checked {
    display: none;
  }  
  input.mdot[value="30"] ~ button.mt-30 > span.checked {
    display: none;
  }  
  input.mdot[value="31"] ~ button.mt-31 > span.checked {
    display: none;
  }
  input.mdot[value="32"] ~ button.mt-32 > span.checked {
    display: none;
  }
  input.mdot[value="33"] ~ button.mt-33 > span.checked {
    display: none;
  }
  input.mdot[value="34"] ~ button.mt-34 > span.checked {
    display: none;
  }
  input.mdot[value="35"] ~ button.mt-35 > span.checked {
    display: none;
  }
  input.mdot[value="36"] ~ button.mt-36 > span.checked {
    display: none;
  }
  input.mdot[value="37"] ~ button.mt-37 > span.checked {
    display: none;
  }
  input.mdot[value="38"] ~ button.mt-38 > span.checked {
    display: none;
  }
  input.mdot[value="39"] ~ button.mt-39 > span.checked {
    display: none;
  }
  input.mdot[value="40"] ~ button.mt-40 > span.checked {
    display: none;
  }
  input.mdot[value="41"] ~ button.mt-41 > span.checked {
    display: none;
  }
  input.mdot[value="42"] ~ button.mt-42 > span.checked {
    display: none;
  }
  input.mdot[value="43"] ~ button.mt-43 > span.checked {
    display: none;
  }
  input.mdot[value="44"] ~ button.mt-44 > span.checked {
    display: none;
  }
  input.mdot[value="45"] ~ button.mt-45 > span.checked {
    display: none;
  }
  input.mdot[value="46"] ~ button.mt-46 > span.checked {
    display: none;
  }
  input.mdot[value="47"] ~ button.mt-47 > span.checked {
    display: none;
  }
  input.mdot[value="48"] ~ button.mt-48 > span.checked {
    display: none;
  }
  input.mdot[value="49"] ~ button.mt-49 > span.checked {
    display: none;
  }
  input.mdot[value="50"] ~ button.mt-50 > span.checked {
    display: none;
  }
  
  input.mbody[value="0"] ~ button.mt-0,
  input.mbody[value="1"] ~ button.mt-1,
  input.mbody[value="2"] ~ button.mt-2,
  input.mbody[value="3"] ~ button.mt-3,
  input.mbody[value="4"] ~ button.mt-4,
  input.mbody[value="5"] ~ button.mt-5,
  input.mbody[value="6"] ~ button.mt-6,
  input.mbody[value="7"] ~ button.mt-7,
  input.mbody[value="8"] ~ button.mt-8,
  input.mbody[value="9"] ~ button.mt-9,
  input.mbody[value="10"] ~ button.mt-10,
  input.mbody[value="11"] ~ button.mt-11,
  input.mbody[value="12"] ~ button.mt-12,
  input.mbody[value="13"] ~ button.mt-13,
  input.mbody[value="14"] ~ button.mt-14,
  input.mbody[value="15"] ~ button.mt-15,
  input.mbody[value="16"] ~ button.mt-16,
  input.mbody[value="17"] ~ button.mt-17,
  input.mbody[value="18"] ~ button.mt-18,
  input.mbody[value="19"] ~ button.mt-19,
  input.mbody[value="20"] ~ button.mt-20,
  input.mbody[value="21"] ~ button.mt-21,
  input.mbody[value="22"] ~ button.mt-22,
  input.mbody[value="23"] ~ button.mt-23,
  input.mbody[value="24"] ~ button.mt-24,
  input.mbody[value="25"] ~ button.mt-25,
  input.mbody[value="26"] ~ button.mt-26,
  input.mbody[value="27"] ~ button.mt-27,
  input.mbody[value="28"] ~ button.mt-28,
  input.mbody[value="29"] ~ button.mt-29,
  input.mbody[value="30"] ~ button.mt-30,
  input.mbody[value="31"] ~ button.mt-31,
  input.mbody[value="32"] ~ button.mt-32,
  input.mbody[value="33"] ~ button.mt-33,
  input.mbody[value="34"] ~ button.mt-34,
  input.mbody[value="35"] ~ button.mt-35,
  input.mbody[value="36"] ~ button.mt-36,
  input.mbody[value="37"] ~ button.mt-37,
  input.mbody[value="38"] ~ button.mt-38,
  input.mbody[value="39"] ~ button.mt-39,
  input.mbody[value="40"] ~ button.mt-40,
  input.mbody[value="41"] ~ button.mt-41,
  input.mbody[value="42"] ~ button.mt-42,
  input.mbody[value="43"] ~ button.mt-43,
  input.mbody[value="44"] ~ button.mt-44,
  input.mbody[value="45"] ~ button.mt-45,
  input.mbody[value="46"] ~ button.mt-46,
  input.mbody[value="47"] ~ button.mt-47,
  input.mbody[value="48"] ~ button.mt-48,
  input.mbody[value="49"] ~ button.mt-49,
  input.mbody[value="50"] ~ button.mt-50{
    display: none;
  } 
  
   input.m2dot[value="0"] ~ button.mt2-0 > span.checked {
    display: none;
  }  
  input.m2dot[value="1"] ~ button.mt2-1 > span.checked {
    display: none;
  }
  input.m2dot[value="2"] ~ button.mt2-2 > span.checked {
    display: none;
  }
  input.m2dot[value="3"] ~ button.mt2-3 > span.checked {
    display: none;
  }
  input.m2dot[value="4"] ~ button.mt2-4 > span.checked {
    display: none;
  }
  input.m2dot[value="5"] ~ button.mt2-5 > span.checked {
    display: none;
  }
  input.m2dot[value="6"] ~ button.mt2-6 > span.checked {
    display: none;
  }
  input.m2dot[value="7"] ~ button.mt2-7 > span.checked {
    display: none;
  }
  input.m2dot[value="8"] ~ button.mt2-8 > span.checked {
    display: none;
  }
  input.m2dot[value="9"] ~ button.mt2-9 > span.checked {
    display: none;
  }
  input.m2dot[value="10"] ~ button.mt2-10 > span.checked {
    display: none;
  }
  input.m2dot[value="11"] ~ button.mt2-11 > span.checked {
    display: none;
  }
  input.m2dot[value="12"] ~ button.mt2-12 > span.checked {
    display: none;
  } 
  input.m2dot[value="13"] ~ button.mt2-13 > span.checked {
    display: none;
  } 
  input.m2dot[value="14"] ~ button.mt2-14 > span.checked {
    display: none;
  } 
  input.m2dot[value="15"] ~ button.mt2-15 > span.checked {
    display: none;
  } 
  input.m2dot[value="16"] ~ button.mt2-16 > span.checked {
    display: none;
  } 
  input.m2dot[value="17"] ~ button.mt2-17 > span.checked {
    display: none;
  } 
  input.m2dot[value="18"] ~ button.mt2-18 > span.checked {
    display: none;
  } 
  input.m2dot[value="19"] ~ button.mt2-19 > span.checked {
    display: none;
  } 
  input.m2dot[value="20"] ~ button.mt2-20 > span.checked {
    display: none;
  } 
  input.m2dot[value="21"] ~ button.mt2-21 > span.checked {
    display: none;
  }  
  input.m2dot[value="22"] ~ button.mt2-22 > span.checked {
    display: none;
  }  
  input.m2dot[value="23"] ~ button.mt2-23 > span.checked {
    display: none;
  }  
  input.m2dot[value="24"] ~ button.mt2-24 > span.checked {
    display: none;
  }  
  input.m2dot[value="25"] ~ button.mt2-25 > span.checked {
    display: none;
  }  
  input.m2dot[value="26"] ~ button.mt2-26 > span.checked {
    display: none;
  }  
  input.m2dot[value="27"] ~ button.mt2-27 > span.checked {
    display: none;
  }  
  input.m2dot[value="28"] ~ button.mt2-28 > span.checked {
    display: none;
  }  
  input.m2dot[value="29"] ~ button.mt2-29 > span.checked {
    display: none;
  }  
  input.m2dot[value="30"] ~ button.mt2-30 > span.checked {
    display: none;
  }  
  input.m2dot[value="31"] ~ button.mt22-31 > span.checked {
    display: none;
  }
  input.m2dot[value="32"] ~ button.mt2-32 > span.checked {
    display: none;
  }
  input.m2dot[value="33"] ~ button.mt2-33 > span.checked {
    display: none;
  }
  input.m2dot[value="34"] ~ button.mt2-34 > span.checked {
    display: none;
  }
  input.m2dot[value="35"] ~ button.mt2-35 > span.checked {
    display: none;
  }
  input.m2dot[value="36"] ~ button.mt2-36 > span.checked {
    display: none;
  }
  input.m2dot[value="37"] ~ button.mt2-37 > span.checked {
    display: none;
  }
  input.m2dot[value="38"] ~ button.mt2-38 > span.checked {
    display: none;
  }
  input.m2dot[value="39"] ~ button.mt2-39 > span.checked {
    display: none;
  }
  input.m2dot[value="40"] ~ button.mt2-40 > span.checked {
    display: none;
  }
  input.m2dot[value="41"] ~ button.mt2-41 > span.checked {
    display: none;
  }
  input.m2dot[value="42"] ~ button.mt2-42 > span.checked {
    display: none;
  }
  input.m2dot[value="43"] ~ button.mt2-43 > span.checked {
    display: none;
  }
  input.m2dot[value="44"] ~ button.mt2-44 > span.checked {
    display: none;
  }
  input.m2dot[value="45"] ~ button.mt2-45 > span.checked {
    display: none;
  }
  input.m2dot[value="46"] ~ button.mt2-46 > span.checked {
    display: none;
  }
  input.m2dot[value="47"] ~ button.mt2-47 > span.checked {
    display: none;
  }
  input.m2dot[value="48"] ~ button.mt2-48 > span.checked {
    display: none;
  }
  input.m2dot[value="49"] ~ button.mt2-49 > span.checked {
    display: none;
  }
  input.m2dot[value="50"] ~ button.mt2-50 > span.checked {
    display: none;
  }
  
  input.m2body[value="0"] ~ button.mt2-0,
  input.m2body[value="1"] ~ button.mt2-1,
  input.m2body[value="2"] ~ button.mt2-2,
  input.m2body[value="3"] ~ button.mt2-3,
  input.m2body[value="4"] ~ button.mt2-4,
  input.m2body[value="5"] ~ button.mt2-5,
  input.m2body[value="6"] ~ button.mt2-6,
  input.m2body[value="7"] ~ button.mt2-7,
  input.m2body[value="8"] ~ button.mt2-8,
  input.m2body[value="9"] ~ button.mt2-9,
  input.m2body[value="10"] ~ button.mt2-10,
  input.m2body[value="11"] ~ button.mt2-11,
  input.m2body[value="12"] ~ button.mt2-12,
  input.m2body[value="13"] ~ button.mt2-13,
  input.m2body[value="14"] ~ button.mt2-14,
  input.m2body[value="15"] ~ button.mt2-15,
  input.m2body[value="16"] ~ button.mt2-16,
  input.m2body[value="17"] ~ button.mt2-17,
  input.m2body[value="18"] ~ button.mt2-18,
  input.m2body[value="19"] ~ button.mt2-19,
  input.m2body[value="20"] ~ button.mt2-20,
  input.m2body[value="21"] ~ button.mt2-21,
  input.m2body[value="22"] ~ button.mt2-22,
  input.m2body[value="23"] ~ button.mt2-23,
  input.m2body[value="24"] ~ button.mt2-24,
  input.m2body[value="25"] ~ button.mt2-25,
  input.m2body[value="26"] ~ button.mt2-26,
  input.m2body[value="27"] ~ button.mt2-27,
  input.m2body[value="28"] ~ button.mt2-28,
  input.m2body[value="29"] ~ button.mt2-29,
  input.m2body[value="30"] ~ button.mt2-30,
  input.m2body[value="31"] ~ button.mt2-31,
  input.m2body[value="32"] ~ button.mt2-32,
  input.m2body[value="33"] ~ button.mt2-33,
  input.m2body[value="34"] ~ button.mt2-34,
  input.m2body[value="35"] ~ button.mt2-35,
  input.m2body[value="36"] ~ button.mt2-36,
  input.m2body[value="37"] ~ button.mt2-37,
  input.m2body[value="38"] ~ button.mt2-38,
  input.m2body[value="39"] ~ button.mt2-39,
  input.m2body[value="40"] ~ button.mt2-40,
  input.m2body[value="41"] ~ button.mt2-41,
  input.m2body[value="42"] ~ button.mt2-42,
  input.m2body[value="43"] ~ button.mt2-43,
  input.m2body[value="44"] ~ button.mt2-44,
  input.m2body[value="45"] ~ button.mt2-45,
  input.m2body[value="46"] ~ button.mt2-46,
  input.m2body[value="47"] ~ button.mt2-47,
  input.m2body[value="48"] ~ button.mt2-48,
  input.m2body[value="49"] ~ button.mt2-49,
  input.m2body[value="50"] ~ button.mt2-50{
    display: none;
  }  
  
   input.m3dot[value="0"] ~ button.mt3-0 > span.checked {
    display: none;
  }  
  input.m3dot[value="1"] ~ button.mt3-1 > span.checked {
    display: none;
  }
  input.m3dot[value="2"] ~ button.mt3-2 > span.checked {
    display: none;
  }
  input.m3dot[value="3"] ~ button.mt3-3 > span.checked {
    display: none;
  }
  input.m3dot[value="4"] ~ button.mt3-4 > span.checked {
    display: none;
  }
  input.m3dot[value="5"] ~ button.mt3-5 > span.checked {
    display: none;
  }
  input.m3dot[value="6"] ~ button.mt3-6 > span.checked {
    display: none;
  }
  input.m3dot[value="7"] ~ button.mt3-7 > span.checked {
    display: none;
  }
  input.m3dot[value="8"] ~ button.mt3-8 > span.checked {
    display: none;
  }
  input.m3dot[value="9"] ~ button.mt3-9 > span.checked {
    display: none;
  }
  input.m3dot[value="10"] ~ button.mt3-10 > span.checked {
    display: none;
  }
  input.m3dot[value="11"] ~ button.mt3-11 > span.checked {
    display: none;
  }
  input.m3dot[value="12"] ~ button.mt3-12 > span.checked {
    display: none;
  } 
  input.m3dot[value="13"] ~ button.mt3-13 > span.checked {
    display: none;
  } 
  input.m3dot[value="14"] ~ button.mt3-14 > span.checked {
    display: none;
  } 
  input.m3dot[value="15"] ~ button.mt3-15 > span.checked {
    display: none;
  } 
  input.m3dot[value="16"] ~ button.mt3-16 > span.checked {
    display: none;
  } 
  input.m3dot[value="17"] ~ button.mt3-17 > span.checked {
    display: none;
  } 
  input.m3dot[value="18"] ~ button.mt3-18 > span.checked {
    display: none;
  } 
  input.m3dot[value="19"] ~ button.mt3-19 > span.checked {
    display: none;
  } 
  input.m3dot[value="20"] ~ button.mt3-20 > span.checked {
    display: none;
  } 
  input.m3dot[value="21"] ~ button.mt3-21 > span.checked {
    display: none;
  }  
  input.m3dot[value="22"] ~ button.mt3-22 > span.checked {
    display: none;
  }  
  input.m3dot[value="23"] ~ button.mt3-23 > span.checked {
    display: none;
  }  
  input.m3dot[value="24"] ~ button.mt3-24 > span.checked {
    display: none;
  }  
  input.m3dot[value="25"] ~ button.mt3-25 > span.checked {
    display: none;
  }  
  input.m3dot[value="26"] ~ button.mt3-26 > span.checked {
    display: none;
  }  
  input.m3dot[value="27"] ~ button.mt3-27 > span.checked {
    display: none;
  }  
  input.m3dot[value="28"] ~ button.mt3-28 > span.checked {
    display: none;
  }  
  input.m3dot[value="29"] ~ button.mt3-29 > span.checked {
    display: none;
  }  
  input.m3dot[value="30"] ~ button.mt3-30 > span.checked {
    display: none;
  } 
  input.m3dot[value="31"] ~ button.mt32-31 > span.checked {
    display: none;
  }
  input.m3dot[value="32"] ~ button.mt3-32 > span.checked {
    display: none;
  }
  input.m3dot[value="33"] ~ button.mt3-33 > span.checked {
    display: none;
  }
  input.m3dot[value="34"] ~ button.mt3-34 > span.checked {
    display: none;
  }
  input.m3dot[value="35"] ~ button.mt3-35 > span.checked {
    display: none;
  }
  input.m3dot[value="36"] ~ button.mt3-36 > span.checked {
    display: none;
  }
  input.m3dot[value="37"] ~ button.mt3-37 > span.checked {
    display: none;
  }
  input.m3dot[value="38"] ~ button.mt3-38 > span.checked {
    display: none;
  }
  input.m3dot[value="39"] ~ button.mt3-39 > span.checked {
    display: none;
  }
  input.m3dot[value="40"] ~ button.mt3-40 > span.checked {
    display: none;
  }
  input.m3dot[value="41"] ~ button.mt3-41 > span.checked {
    display: none;
  }
  input.m3dot[value="42"] ~ button.mt3-42 > span.checked {
    display: none;
  }
  input.m3dot[value="43"] ~ button.mt3-43 > span.checked {
    display: none;
  }
  input.m3dot[value="44"] ~ button.mt3-44 > span.checked {
    display: none;
  }
  input.m3dot[value="45"] ~ button.mt3-45 > span.checked {
    display: none;
  }
  input.m3dot[value="46"] ~ button.mt3-46 > span.checked {
    display: none;
  }
  input.m3dot[value="47"] ~ button.mt3-47 > span.checked {
    display: none;
  }
  input.m3dot[value="48"] ~ button.mt3-48 > span.checked {
    display: none;
  }
  input.m3dot[value="49"] ~ button.mt3-49 > span.checked {
    display: none;
  }
  input.m3dot[value="50"] ~ button.mt3-50 > span.checked {
    display: none;
  }
  
  input.m3body[value="0"] ~ button.mt3-0,
  input.m3body[value="1"] ~ button.mt3-1,
  input.m3body[value="2"] ~ button.mt3-2,
  input.m3body[value="3"] ~ button.mt3-3,
  input.m3body[value="4"] ~ button.mt3-4,
  input.m3body[value="5"] ~ button.mt3-5,
  input.m3body[value="6"] ~ button.mt3-6,
  input.m3body[value="7"] ~ button.mt3-7,
  input.m3body[value="8"] ~ button.mt3-8,
  input.m3body[value="9"] ~ button.mt3-9,
  input.m3body[value="10"] ~ button.mt3-10,
  input.m3body[value="11"] ~ button.mt3-11,
  input.m3body[value="12"] ~ button.mt3-12,
  input.m3body[value="13"] ~ button.mt3-13,
  input.m3body[value="14"] ~ button.mt3-14,
  input.m3body[value="15"] ~ button.mt3-15,
  input.m3body[value="16"] ~ button.mt3-16,
  input.m3body[value="17"] ~ button.mt3-17,
  input.m3body[value="18"] ~ button.mt3-18,
  input.m3body[value="19"] ~ button.mt3-19,
  input.m3body[value="20"] ~ button.mt3-20,
  input.m3body[value="21"] ~ button.mt3-21,
  input.m3body[value="22"] ~ button.mt3-22,
  input.m3body[value="23"] ~ button.mt3-23,
  input.m3body[value="24"] ~ button.mt3-24,
  input.m3body[value="25"] ~ button.mt3-25,
  input.m3body[value="26"] ~ button.mt3-26,
  input.m3body[value="27"] ~ button.mt3-27,
  input.m3body[value="28"] ~ button.mt3-28,
  input.m3body[value="29"] ~ button.mt3-29,
  input.m3body[value="30"] ~ button.mt3-30,
  input.m3body[value="31"] ~ button.mt3-31,
  input.m3body[value="32"] ~ button.mt3-32,
  input.m3body[value="33"] ~ button.mt3-33,
  input.m3body[value="34"] ~ button.mt3-34,
  input.m3body[value="35"] ~ button.mt3-35,
  input.m3body[value="36"] ~ button.mt3-36,
  input.m3body[value="37"] ~ button.mt3-37,
  input.m3body[value="38"] ~ button.mt3-38,
  input.m3body[value="39"] ~ button.mt3-39,
  input.m3body[value="40"] ~ button.mt3-40,
  input.m3body[value="41"] ~ button.mt3-41,
  input.m3body[value="42"] ~ button.mt3-42,
  input.m3body[value="43"] ~ button.mt3-43,
  input.m3body[value="44"] ~ button.mt3-44,
  input.m3body[value="45"] ~ button.mt3-45,
  input.m3body[value="46"] ~ button.mt3-46,
  input.m3body[value="47"] ~ button.mt3-47,
  input.m3body[value="48"] ~ button.mt3-48,
  input.m3body[value="49"] ~ button.mt3-49,
  input.m3body[value="50"] ~ button.mt3-50{
    display: none;
  } 

/* Container for dot buttons, using flexbox for alignment */
.dots {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
}

/* Main container with border image and background color */
.main {
  min-width: 595px;
  aspect-ratio: 1.414/1;
  border: 20px solid transparent;
  padding: 1px;
  border-image: url(https://i.imgur.com/XxBv5A2.png) 30 round repeat;
  border-image-outset: 1px;
  background-color: var(--primary-bg-color);
}

    /* Button bar with flexbox layout and double border */
    .buttonbar {
      display: flex;
      flex-direction: row;
      flex-wrap: wrap;
      justify-content: space-around;
      align-items: flex-start;
      width: auto;
      border-style: double;
      border-width: 6px;
      padding: 0.75%;
      margin-bottom: 5px;
    }
    
    .character {
      grid-area: character;
      display: grid;
      grid-template-areas: 
        "common common common"
        "primaryattributes finalattackdefenceattributes afattributes"
        "finalmeleecombatattributes finalrangedcombatattributes hpattributes"
        "finalmeleecombatattributes finalrangedcombatattributes stealthperceptionattributes"
        "classcombatabilities mpattributes guardscontainer";
        /* Set all columns to equal width (1fr) */
      grid-template-columns: repeat(3, minmax(0, 1fr));
      grid-template-rows: auto; 
      gap: 10px; /* Space between grid items */
      box-sizing: border-box;
    }
    
        .common {
          grid-area: common;
          display: grid;
          grid-template-columns: 2fr 2fr 1fr 1fr; /* Adjusts column widths */
          grid-template-areas: 
            "name profession rank experience";
          gap: 5px; /* Space between the elements */
          background-color: var(--primary-bg-color); /* Match the background color of .main */
          padding: var(--padding);
          border-radius: var(--border-radius);
          border: 3px double var(--border-color); /* Double-line border */
          align-items: center; /* Vertically center the labels and inputs */
        }
            
            /* Ensure the labels and inputs are aligned correctly */
            .common .label-input-pair {
              display: flex;
              flex-direction: column; /* Arrange label and input vertically */
              align-items: start; /* Align items to the start of the container */
            }
            
            .common label {
              margin-bottom: 5px; /* Space between label and input */
              font-size: 19px;
            }
            
            .common input {
              width: 100%; /* Ensure inputs fill their grid area */
              box-sizing: border-box;
            }
            
            /* Assign areas to each pair */
            .name {
              grid-area: name;
            }
            
            .profession {
              grid-area: profession;
            }
            
            .rank {
              grid-area: rank;
            }
            
            .experience {
              grid-area: experience;
            }
            
        .primaryattributes {
          display: grid;
          grid-area: primaryattributes;
          grid-template-columns: 2fr 1fr auto; 
          grid-template-areas:
            "primaryattribheader primaryattribheader primaryattribheader"
            "name1 input1 button1"
            "name2 input2 button2"
            "name3 input3 button3"
            "name4 input4 button4"
            "name5 input5 button5";
          gap: 5px;
          background-color: var(--primary-bg-color); /* Make sure this matches your design */
          padding: var(--padding);
          border-radius: var(--border-radius);
          border: 5px double var(--border-color); /* Double-line border */
          align-content: start;
          box-sizing: border-box;
        }
        
            .primaryattributes h2 {
              grid-column: 1 / -1; /* Header spans all columns */
              text-align: center;
              font-size: 19px;
              margin-bottom: 10px;
              grid-area: primaryattribheader;
            }
            
            .primaryattributes > div:nth-of-type(1) {
              grid-area: name1;
            }
            
            .primaryattributes > div:nth-of-type(2) {
              grid-area: input1;
            }
            
            .primaryattributes > div:nth-of-type(3) {
              grid-area: button1;
            }
            
            .primaryattributes > div:nth-of-type(4) {
              grid-area: name2;
            }
            
            .primaryattributes > div:nth-of-type(5) {
              grid-area: input2;
            }
            
            .primaryattributes > div:nth-of-type(6) {
              grid-area: button2;
            }
            
            .primaryattributes > div:nth-of-type(7) {
              grid-area: name3;
            }
            
            .primaryattributes > div:nth-of-type(8) {
              grid-area: input3;
            }
            
            .primaryattributes > div:nth-of-type(9) {
              grid-area: button3;
            }
            
            .primaryattributes > div:nth-of-type(10) {
              grid-area: name4;
            }
            
            .primaryattributes > div:nth-of-type(11) {
              grid-area: input4;
            }
            
            .primaryattributes > div:nth-of-type(12) {
              grid-area: button4;
            }
            
            .primaryattributes > div:nth-of-type(13) {
              grid-area: name5;
            }
            
            .primaryattributes > div:nth-of-type(14) {
              grid-area: input5;
            }
            
            .primaryattributes > div:nth-of-type(15) {
              grid-area: button5;
            }         
            
        /* Combat Factors section styling */
        .finalattackdefenceattributes {
          display: grid;
          grid-area: finalattackdefenceattributes;
          grid-template-columns: 2fr 1fr; /* Two columns: one for labels and one for inputs */
          grid-template-areas:
            "finalattackdefenceheader finalattackdefenceheader"
            "meleeattacklabel meleeattackinput"
            "meleedefencelabel meleedefenceinput"
            "rangedattacklabel rangedattackinput"
            "rangeddefencelabel rangeddefenceinput"
            "finalevasionlabel finalevasionbox"
            "finalmagdeflabel finalmagdefbox";
          gap: 5px;
          background-color: var(--primary-bg-color); /* Make sure this matches your design */
          padding: var(--padding);
          border-radius: var(--border-radius);
          border: 5px double var(--border-color); /* Double-line border */
          box-sizing: border-box;
          align-content: start;
        }
        
            .finalattackdefenceattributes h2 {
              grid-column: 1 / -1; /* Span the header across all columns */
              text-align: center;
              font-size: 19px;
              margin-bottom: 10px;
              grid-area: finalattackdefenceheader;
            }
            
            .finalattackdefenceattributes .finalmeleelabel1 {
              grid-area: meleeattacklabel;
            }
            
            .finalattackdefenceattributes .finalrangedlabel1 {
              grid-area: rangedattacklabel;
            }
            
            .finalattackdefenceattributes .finalmeleebox1 {
              grid-area: meleeattackinput;
            }
            
            .finalattackdefenceattributes .finalrangedbox1 {
              grid-area: rangedattackinput;
            }
            
            .finalattackdefenceattributes .finalmeleelabel2 {
              grid-area: meleedefencelabel;
            }
            
            .finalattackdefenceattributes .finalrangedlabel2 {
              grid-area: rangeddefencelabel;
            }
            
            .finalattackdefenceattributes .finalmeleebox2 {
              grid-area: meleedefenceinput;
            }
            
            .finalattackdefenceattributes .finalrangedbox2 {
              grid-area: rangeddefenceinput;
            }
            
            .finalattackdefenceattributes .finalevasionlabel {
                grid-area: finalevasionlabel;
            }
            
            .finalattackdefenceattributes .finalevasionbox {
                grid-area: finalevasionbox;
            }
            
            .finalattackdefenceattributes .finalmagdeflabel {
                grid-area: finalmagdeflabel;
            }
            
             .finalattackdefenceattributes .finalmagdefbox {
                grid-area: finalmagdefbox;
            }
            
            /* Ensure inputs and labels are styled consistently */
            .finalattackdefenceattributes div {
              background-color: var(--primary-bg-color); /* Primary background color for divs */
            }
            
            .finalattackdefenceattributes input {
              background-color: var(--bg-color); /* Background color for inputs */
              border: 1px solid var(--border-color); /* Border styling for inputs */
              border-radius: var(--border-radius); /* Border radius for inputs */
              padding: var(--padding); /* Padding for inputs */
            }
                
        .guardscontainer {
            display: grid;
            grid-area: guardscontainer; 
            grid-template-columns: 1fr 1fr; /* Two columns: one for labels and one for inputs */
            grid-template-areas: 
              "nonmartialhidden"
              "martialhidden";
            gap: 5px;
            background-color: var(--primary-bg-color); /* Make sure this matches your design */
            padding: var(--padding);
            border-radius: var(--border-radius);
            border: 5px double var(--border-color); /* Double-line border */
            box-sizing: border-box;
            align-content: start;
        }
            
            .nonmartialhidden {
                grid-area: nonmartialhidden;
            }
            
            .martialhidden {
                grid-area: martialhidden;
            }


        .stealthperceptionattributes {
            display: grid;
            grid-area: stealthperceptionattributes;
            grid-template-columns: 1fr 1fr 1fr; /* Three columns: name, input, buttons */
            grid-template-areas: 
                "stealthperceptheader stealthperceptheader stealthperceptheader"
                "stealthlabel stealthinput stealthbuttons"
                "perceptionlabel perceptioninput perceptionbuttons";
            gap: 5px;
            background-color: var(--primary-bg-color);
            padding: var(--padding);
            border-radius: var(--border-radius);
            border: 5px double var(--border-color); /* Double-line border */
            box-sizing: border-box;
            align-content: space-evenly;
        }

            .stealthperceptionattributes h2 {
                grid-area: stealthperceptheader;
                text-align: center;
                font-size: 19px;
                margin-bottom: 10px;
            }
            
            /* Stealth section */
            .stealthperceptionattributes > div:nth-of-type(1) {
                grid-area: stealthlabel;
            }
            .stealthperceptionattributes > div:nth-of-type(2) {
                grid-area: stealthinput;
            }
            .stealthperceptionattributes > div:nth-of-type(3) {
                grid-area: stealthbuttons;
                display: flex;
                gap: 5px; /* Space between buttons */
            }
            .stealthperceptionattributes > div:nth-of-type(4) {
                grid-area: perceptionlabel;
            }
            .stealthperceptionattributes > div:nth-of-type(5) {
                grid-area: perceptioninput;
            }
            .stealthperceptionattributes > div:nth-of-type(6) {
                grid-area: perceptionbuttons;
                display: flex;
                gap: 5px; /* Space between buttons */
            }
            .stealthperceptionattributes button {
                margin: 0 5px;
            }

        .hpattributes {
          grid-area: hpattributes;
          display: grid;
          gap: 5px;
          background-color: var(--primary-bg-color); /* Make sure this matches your design */
          padding: var(--padding);
          border-radius: var(--border-radius);
          border: 5px double var(--border-color); /* Double-line border */
          box-sizing: border-box;
          align-content: start;
        }
        
            .hpattributes h2 {
              grid-column: 1 / -1; /* Span the header across all columns */
              text-align: center;
              font-size: 19px;
              margin-bottom: 10px;
            }

        
        .afattributes {
            display: grid;
            grid-area: afattributes;
            grid-template-columns: 1fr 2fr; /* Adjust column widths */
            grid-template-areas: 
                "afattribheader afattribheader"
                "aftype aftypeinput"
                "imgshieldcol afinput"
                "imgshieldcol shieldtogglebox"
                "imgshieldcol frontshieldhidden";
            gap: 5px;
            background-color: var(--primary-bg-color);
            padding: var(--padding);
            border-radius: var(--border-radius);
            border: 5px double var(--border-color);
            box-sizing: border-box;
            align-items: start;
        }
        
            .afattributes h2 {
                grid-area: afattribheader;
                text-align: center;
                font-size: 19px;
                margin-bottom: 10px;
            }
            
            /* Assign grid areas based on class names */
            .afattributes .imgshieldcol {
                grid-area: imgshieldcol;
                width: 98%;
            }
            
            .afattributes .aftype {
                grid-area: aftype;
            }
            
            .afattributes .aftypeinput {
                grid-area: aftypeinput;
                width: 98%;
            }
            
            .afattributes .afinput {
                grid-area: afinput;
            }
            
            .shieldtogglebox {
                grid-area: shieldtogglebox;
            }
                .shieldtogglebox select.shield {
                    width: 98%;
                }
            
            .shieldhidden {
                grid-area: frontshieldhidden;
            }

        .finalmeleecombatattributes {
          grid-area: finalmeleecombatattributes;
          display: grid;
          gap: 5px;
          background-color: var(--primary-bg-color); /* Make sure this matches your design */
          padding: var(--padding);
          border-radius: var(--border-radius);
          border: 5px double var(--border-color); /* Double-line border */
          box-sizing: border-box;
          align-content: start;
          grid-template-columns: 1fr 1fr; /* Ensures all elements stack in a single column */
          grid-template-areas: 
          "finalcombatheader finalcombatheader"
          "meleeattack1 meleeattack1"
          "equippedweaponbox equippedweaponbox"
          "abrbox abrbox"
          "damagebox damagebox"
          "meleeothereffects meleeothereffects"
          "swordimage swordimage";
        }
        
        .finalrangedcombatattributes {
            grid-area: finalrangedcombatattributes;
            display: grid;
            gap: 5px;
            background-color: var(--primary-bg-color); /* Make sure this matches your design */
            padding: var(--padding);
            border-radius: var(--border-radius);
            border: 5px double var(--border-color); /* Double-line border */
            grid-template-columns: 1fr 1fr; /* Ensures all elements stack in a single column */
            box-sizing: border-box;
            align-content: start;
            grid-template-areas: 
                "finalcombatheader finalcombatheader"
                "rangedattack1 rangedattack1"
                "equippedrangedweaponbox equippedrangedweaponbox"
                "equippedammobox equippedammobox"
                "rangedabrbox rangedabrbox"
                "rangeddamagebox rangeddamagebox"
                "bowimage rangedweaponranges";
        }
        
            .finalmeleecombatattributes h2 {
                grid-area: finalcombatheader;
                text-align: center;
                font-size: 19px;
                margin-bottom: 10px;
                grid-row: 1;
            }
            
            .finalrangedcombatattributes h2 {
                grid-area: finalcombatheader;
                text-align: center;
                font-size: 19px;
                margin-bottom: 10px;
                grid-row: 1;
            }


            .meleeattack1 {
                grid-area: meleeattack1;
            }
                    
            .equippedweaponbox {
                grid-area: equippedweaponbox;
            }
                    
            .abrbox {
                grid-area: abrbox;
            }
                    
            .damagebox {
                grid-area: damagebox;
            }
            
            .meleeothereffects {
                grid-area: meleeothereffects;
            }
                    
            .rangedattack1 {
                grid-area: rangedattack1;
            }
                    
            .equippedrangedweaponbox {
                grid-area: equippedrangedweaponbox;
            }
                      
            .equippedammobox {
                grid-area: equippedammobox;
            }
                  
            .rangedabrbox {
                grid-area: rangedabrbox;
            }
                    
            .rangeddamagebox {
                grid-area: rangeddamagebox;
            }
                    
            .rangedweaponranges {
                grid-area: rangedweaponranges;
            }

            .swordimage {
                grid-area: swordimage;
            }
            
            .bowimage {
                grid-area: bowimage;
            }

        .classcombatabilities {
          grid-area: classcombatabilities;
          display: grid;
          gap: 5px;
          background-color: var(--primary-bg-color); /* Make sure this matches your design */
          padding: var(--padding);
          border-radius: var(--border-radius);
          border: 5px double var(--border-color); /* Double-line border */
          grid-template-rows: max-content;
          grid-template-columns: 1fr; /* Ensures all elements stack in a single column */
          box-sizing: border-box;
          align-content: start;          
          grid-template-areas:
            "classcombatabilitiesheader"
            "skills_known"
            "melee"; /* Updated to ensure these appear in one column */
        }        
            
            .classcombatabilities h2 {
                grid-area: classcombatabilitiesheader;
                text-align: center;
                font-size: 19px;
                margin-bottom: 10px;
            }

            .skills_known {
                grid-area: skills_known;
            }
            
            .melee {
                display: grid;
                grid-area: melee;
                grid-template-rows: max-content;
                grid-template-columns: 1fr; /* Ensures all elements stack in a single column */
                grid-template-areas:
                    "barbarianmelee"
                    "knightmelee"
                    "supremacy"
                    "warlockmelee"
                    "assassinmelee"
                    "huntermelee"
                    "knavemelee"
                    "elementalistmelee"
                    "mysticmelee"
                    "priestmelee"
                    "demonologistmelee"
                    "nomelee";
            }
            
            .barbarianmelee {
                grid-area: barbarianmelee;
            }
            .knightmelee {
                grid-area: knightmelee;
            }
            .supremacy {
                grid-area: supremacy;
            }
            .warlockmelee {
                grid-area: warlockmelee;
            }
            .assassinmelee {
                grid-area: assassinmelee;
            }
            .huntermelee {
                grid-area: huntermelee;
            }
            .knavemelee {
                grid-area: knavemelee;
            }
            .elementalistmelee {
                grid-area: elementalistmelee;
            }
            .mysticmelee {
                grid-area: mysticmelee;
            }
            .priestmelee {
                grid-area: priestmelee;
            }
            .demonologistmelee {
                grid-area: demonologistmelee;
            }
            .nomelee {
                grid-area: nomelee;
            }

        .mpattributes {
          grid-area: mpattributes;
          display: grid;
          gap: 5px;
          background-color: var(--primary-bg-color); 
          padding: var(--padding);
          border-radius: var(--border-radius);
          border: 5px double var(--border-color); 
          grid-template-columns: 1fr; 
          box-sizing: border-box;
          align-content: start;
          grid-template-areas:
          "magicattributeshidden"
          "magicpointsattributeshidden";
        }
            .magicpointsattributeshidden {
                grid-area: magicpointsattributeshidden;
                display: grid;
            }
            
            .magicattributeshidden {
              grid-area: magicattributeshidden; /* Make sure this has a designated grid area */
              display: grid;
              grid-template-rows: auto; /* Adjust rows as needed */
              gap: 10px; 
              align-items: start; 
            }
            
            .castermp {
              grid-row: 1; /* Place this in the first row */
              display: grid;
              grid-template-rows: auto auto; /* Two rows: one for the h2 and one for the grid */
              gap: 10px; 
              align-items: start; 
            }
            
            .castermp h2 {
              grid-row: 1; /* Place the h2 in the first row */
              text-align: center;
            }
            
            .castermp-grid {
              grid-row: 2; /* Place the grid in the second row */
              display: grid;
              grid-template-columns: 2fr 1fr; 
              align-items: start; 
              gap: 5px;
            }
            
            .castermp-grid > div:nth-of-type(odd) { 
              font-weight: bold;
            }
            
            .commonspellexpiry, 
            .warlockspellexpiry {
              grid-column: 1 / span 2; /* Span across both columns */
              display: grid;
              grid-template-columns: 2fr 1fr; 
              align-items: start; 
              gap: 5px;
            }
            
            .mysticmp {
              grid-row: 2; /* Place this in the second row */
              display: grid;
              grid-template-columns: 1fr 2fr; 
              align-items: start; 
              gap: 5px;
            }            
    /* Grid layout for combat section */
    .basescores {
        grid-area: basescores;
        display: grid;
        grid-template-columns: repeat(2, 1fr); /* Three equal columns */
        grid-template-rows: auto; /* Automatically adjust row height */
        gap: 10px; /* Space between grid items */
        align-content: space-evenly;
        grid-template-areas:
        "common common"
        "basecharacteristics baseattributes"
        "basemeleeattributes baserangedattributes"
        "magicalattributes magicalattributes"
        "finalbasecombatattributes finalbasecombatattributes";
    }
        
        .basecharacteristics {
            grid-area: basecharacteristics;
            display: grid;
            grid-template-columns: 2fr 1fr 1fr; /* Adjust column widths as needed */
            grid-template-areas:
                "basecharheader basecharheader basecharheader"
                "characteristic base modifier"
                "strength base-strength modifier-strength"
                "reflexes base-reflexes modifier-reflexes"
                "intelligence base-intelligence modifier-intelligence"
                "psychic-talent base-psychic-talent modifier-psychic-talent"
                "looks base-looks modifier-looks"
                "stats-controls stats-controls stats-controls"; /* Added for roll stats container */
            gap: 5px;
            background-color: var(--primary-bg-color); /* Make sure this matches your design */
            padding: var(--padding);
            border-radius: var(--border-radius);
            border: 5px double var(--border-color); /* Double-line border */
            align-items: center; /* Vertically aligns the content */
            justify-items: center; /* Aligns items horizontally */
        }
            
            .basecharacteristics h2 {
                grid-area: basecharheader;
                text-align: center;
                margin-bottom: 10px;
            }
            
            .basecharacteristics h3.characteristic {
                grid-area: characteristic;
                text-align: center;
                font-weight: bold;
            }
            
            .basecharacteristics h3.base {
                grid-area: base;
                text-align: center;
                font-weight: bold;
            }
            
            .basecharacteristics h3.modifier {
                grid-area: modifier;
                text-align: center;
                font-weight: bold;
            }
            
            .basecharacteristics > div:nth-of-type(1) {
                grid-area: strength; /* 4th overall child */
                align-items: center;
            }
            
            .basecharacteristics > div:nth-of-type(2) {
                grid-area: base-strength; /* 5th overall child */
                align-items: center;
            }
            
            .basecharacteristics > div:nth-of-type(3) {
                grid-area: modifier-strength; /* 6th overall child */
                align-items: center;
            }
            
            .basecharacteristics > div:nth-of-type(4) {
                grid-area: reflexes; /* 7th overall child */
                align-items: center;
            }
            
            .basecharacteristics > div:nth-of-type(5) {
                grid-area: base-reflexes; /* 8th overall child */
                align-items: center;
            }
            
            .basecharacteristics > div:nth-of-type(6) {
                grid-area: modifier-reflexes; /* 9th overall child */
                align-items: center;
            }
            
            .basecharacteristics > div:nth-of-type(7) {
                grid-area: intelligence; /* 10th overall child */
                align-items: center;
            }
            
            .basecharacteristics > div:nth-of-type(8) {
                grid-area: base-intelligence; /* 11th overall child */
                align-items: center;
            }
            
            .basecharacteristics > div:nth-of-type(9) {
                grid-area: modifier-intelligence; /* 12th overall child */
                align-items: center;
            }
            
            .basecharacteristics > div:nth-of-type(10) {
                grid-area: psychic-talent; /* 13th overall child */
                align-items: center;
            }
            
            .basecharacteristics > div:nth-of-type(11) {
                grid-area: base-psychic-talent; /* 14th overall child */
                align-items: center;
            }
            
            .basecharacteristics > div:nth-of-type(12) {
                grid-area: modifier-psychic-talent; /* 15th overall child */
                align-items: center;
            }
            
            .basecharacteristics > div:nth-of-type(13) {
                grid-area: looks; /* 16th overall child */
                align-items: center;
            }
            
            .basecharacteristics > div:nth-of-type(14) {
                grid-area: base-looks; /* 17th overall child */
                align-items: center;
            }
            
            .basecharacteristics > div:nth-of-type(15) {
                grid-area: modifier-looks; /* 18th overall child */
                align-items: center;
            }
            
            .rollbasestatssetcontainer {
                grid-area: stats-controls;
                justify-content: center;
                align-items: center;
                border: none;
                gap: 10px;
                display: flex;
            }
            
            .rollbasestatsbuttoncontainer {
                grid-area: rollbasestatsbuttoncontainer;
            }

        .baseattributes {
            grid-area: baseattributes;
            display: grid;
            grid-template-columns: 1fr 1fr 1fr; /* Adjust column widths as needed */
            grid-template-areas:
                "baseattrheader baseattrheader baseattrheader"
                "attribute base modifier"
                "attack base-attack modifier-attack"
                "defence base-defence modifier-defence"
                "stealth base-stealth modifier-stealth"
                "perception base-perception modifier-perception"
                "evasion base-evasion modifier-evasion"
                "maxhp base-maxhp modifier-maxhp"
                "hp-controls hp-controls hp-controls";
          gap: 5px;
          background-color: var(--primary-bg-color); /* Make sure this matches your design */
          padding: var(--padding);
          border-radius: var(--border-radius);
          border: 5px double var(--border-color); /* Double-line border */
          align-items: center; /* Vertically aligns the content */
          justify-items: center; /* Aligns items horizontally */
        }
            
            .baseattributes h2 {
                grid-area: baseattrheader;
                text-align: center;
                margin-bottom: 10px;
            }
            
            .baseattributes h3.attribute {
                grid-area: attribute;
                text-align: center;
                font-weight: bold;
            }
            
            .baseattributes h3.base {
                grid-area: base;
                text-align: center;
                font-weight: bold;
            }
            
            .baseattributes h3.modifier {
                grid-area: modifier;
                text-align: center;
                font-weight: bold;
            }
            
            .baseattributes > div:nth-of-type(1) {
                grid-area: attack;
                align-items: center;
            }
            
            .baseattributes > div:nth-of-type(2) {
                grid-area: base-attack;
                align-items: center;
            }
            
            .baseattributes > div:nth-of-type(3) {
                grid-area: modifier-attack;
                align-items: center;
            }
            
            .baseattributes > div:nth-of-type(4) {
                grid-area: defence;
                align-items: center;
            }
            
            .baseattributes > div:nth-of-type(5) {
                grid-area: base-defence;
                align-items: center;
            }
            
            .baseattributes > div:nth-of-type(6) {
                grid-area: modifier-defence;
                align-items: center;
            }
            
            .baseattributes > div:nth-of-type(7) {
                grid-area: stealth;
                align-items: center;
            }
            
            .baseattributes > div:nth-of-type(8) {
                grid-area: base-stealth;
                align-items: center;
            }
            
            .baseattributes > div:nth-of-type(9) {
                grid-area: modifier-stealth;
                align-items: center;
            }
            
            .baseattributes > div:nth-of-type(10) {
                grid-area: perception;
                align-items: center;
            }
            
            .baseattributes > div:nth-of-type(11) {
                grid-area: base-perception;
                align-items: center;
            }
            
            .baseattributes > div:nth-of-type(12) {
                grid-area: modifier-perception;
                align-items: center;
            }
            
            .baseattributes > div:nth-of-type(13) {
                grid-area: evasion;
                align-items: center;
            }
            
            .baseattributes > div:nth-of-type(14) {
                grid-area: base-evasion;
                align-items: center;
            }
            
            .baseattributes > div:nth-of-type(15) {
                grid-area: modifier-evasion;
                align-items: center;
            }
            
            .baseattributes > div:nth-of-type(16) {
                grid-area: maxhp;
                align-items: center;
            }
            
            .baseattributes > div:nth-of-type(17) {
                grid-area: base-maxhp;
                align-items: center;
            }
            
            .baseattributes > div:nth-of-type(18) {
                grid-area: modifier-maxhp;
                align-items: center;
            }

            .rollbasehpsetcontainer {
                grid-area: hp-controls;
                justify-content: center;
                align-items: left;
                gap: 10px;
                display: flex;
                border: none;
            }
            
            .rollbasehpbuttoncontainer {
                grid-area: rollbasehpbuttoncontainer;
            }
            
        .magicalattributes {
          display: grid;
          grid-area: magicalattributes;
          grid-template-rows: auto; 
          gap: 10px;
          background-color: var(--primary-bg-color);
          padding: var(--padding);
          border-radius: var(--border-radius);
          border: 5px double var(--border-color);
          align-items: center; 
          align-content: start;
          grid-template-areas:
            "magical-grid"; 
        }
        
            .magical-grid {
              grid-area: magical-grid;
              display: grid;
              grid-template-columns: 1fr 1fr 1fr; 
              grid-template-areas:
                "title title title" 
                "attribute base modifier" 
                "magicalattack magicalattack magicalattack" 
                "magicaldefence magicaldefence magicaldefence"; 
              gap: 5px; 
            }
            
            .magical-grid h2 {
              grid-area: title; 
              text-align: center;
            }
            
            .magical-grid h3.attribute {
              grid-area: attribute;
              font-weight: bold;
            }
            
            .magical-grid h3.base {
              grid-area: base;
              font-weight: bold;
            }
            
            .magical-grid h3.modifier {
              grid-area: modifier;
              font-weight: bold;
            }
            
            .magicalattackcontainer { 
              grid-area: magicalattack;
              display: grid;
              grid-template-columns: 1fr 1fr 1fr;
            }
            
            .magicalattackcontainer > div:nth-of-type(1) { grid-column: 1; } 
            .magicalattackcontainer > div:nth-of-type(2) { grid-column: 2; } 
            .magicalattackcontainer > div:nth-of-type(3) { grid-column: 3; } 
            
            .magicaldefencecontainer { 
              grid-area: magicaldefence;
              display: grid;
              grid-template-columns: 1fr 1fr 1fr; 
            }
            
            .magicaldefencecontainer > div:nth-of-type(1) { grid-column: 1; } 
            .magicaldefencecontainer > div:nth-of-type(2) { grid-column: 2; } 
            .magicaldefencecontainer > div:nth-of-type(3) { grid-column: 3; }

        .basemeleeattributes {
            display: grid;
            grid-area: basemeleeattributes;
            grid-template-columns: 1fr 1fr; /* Two columns for Attribute and Modifier */
            align-content: space-evenly;
            grid-template-areas:
                "basemeleeheader basemeleeheader"
                "attribute modifier"
                "attack modifier-attack"
                "defence modifier-defence"
                "armour-bypass modifier-armour-bypass"
                "damage modifier-damage";
            gap: 5px;
            background-color: var(--primary-bg-color); /* Ensure this matches your design */
            padding: var(--padding);
            border-radius: var(--border-radius);
            border: 5px double var(--border-color); /* Double-line border */
            align-items: center; /* Vertically aligns the content */
            justify-items: center; /* Aligns items horizontally */
        }
        
            .basemeleeattributes h2 {
                grid-area: basemeleeheader;
                text-align: center;
                margin-bottom: 10px;
            }
            
            .basemeleeattributes h3.attribute {
                grid-area: attribute;
                text-align: center;
                font-weight: bold;
            }
            
            .basemeleeattributes h3.modifier {
                grid-area: modifier;
                text-align: center;
                font-weight: bold;
            }
            
            .basemeleeattributes > div:nth-of-type(1) {
                grid-area: attack;
                align-items: center;
            }
            
            .basemeleeattributes > div:nth-of-type(2) {
                grid-area: modifier-attack;
                align-items: center;
            }
            
            .basemeleeattributes > div:nth-of-type(3) {
                grid-area: defence;
                align-items: center;
            }
            
            .basemeleeattributes > div:nth-of-type(4) {
                grid-area: modifier-defence;
                align-items: center;
            }
            
            .basemeleeattributes > div:nth-of-type(5) {
                grid-area: armour-bypass;
                align-items: center;
            }
            
            .basemeleeattributes > div:nth-of-type(6) {
                grid-area: modifier-armour-bypass;
                align-items: center;
            }
            
            .basemeleeattributes > div:nth-of-type(7) {
                grid-area: damage;
                align-items: center;
            }
            
            .basemeleeattributes > div:nth-of-type(8) {
                grid-area: modifier-damage;
                align-items: center;
            }
                
        .baserangedattributes {
            display: grid;
            grid-area: baserangedattributes;
            grid-template-columns: 1fr 1fr; /* Two columns for Attribute and Modifier */
            grid-template-areas:
                "baserangedheader baserangedheader"
                "attribute modifier"
                "attack modifier-attack"
                "defence modifier-defence"
                "armour-bypass modifier-armour-bypass"
                "damage modifier-damage";
            gap: 5px;
            background-color: var(--primary-bg-color); /* Ensure this matches your design */
            padding: var(--padding);
            border-radius: var(--border-radius);
            border: 5px double var(--border-color); /* Double-line border */
            align-items: center; /* Vertically aligns the content */
            justify-items: center; /* Aligns items horizontally */
        }
        
            .baserangedattributes h2 {
                grid-area: baserangedheader;
                text-align: center;
                margin-bottom: 10px;
            }
            
            .baserangedattributes h3.attribute {
                grid-area: attribute;
                text-align: center;
                font-weight: bold;
            }
            
            .baserangedattributes h3.modifier {
                grid-area: modifier;
                text-align: center;
                font-weight: bold;
            }
            
            .baserangedattributes > div:nth-of-type(1) {
                grid-area: attack;
                align-items: center;
            }
            
            .baserangedattributes > div:nth-of-type(2) {
                grid-area: modifier-attack;
                align-items: center;
            }
            
            .baserangedattributes > div:nth-of-type(3) {
                grid-area: defence;
                align-items: center;
            }
            
            .baserangedattributes > div:nth-of-type(4) {
                grid-area: modifier-defence;
                align-items: center;
            }
            
            .baserangedattributes > div:nth-of-type(5) {
                grid-area: armour-bypass;
                align-items: center;
            }
            
            .baserangedattributes > div:nth-of-type(6) {
                grid-area: modifier-armour-bypass;
                align-items: center;
            }
            
            .baserangedattributes > div:nth-of-type(7) {
                grid-area: damage;
                align-items: center;
            }
            
            .baserangedattributes > div:nth-of-type(8) {
                grid-area: modifier-damage;
                align-items: center;
            }
                
        .finalbasecombatattributes {
          display: grid;
          grid-area: finalbasecombatattributes;
          grid-template-columns: 1fr 1fr 1fr 1fr; /* Four columns: melee h3, melee input, ranged h3, ranged input */
          gap: 10px;
          background-color: var(--primary-bg-color);
          padding: var(--padding);
          border-radius: var(--border-radius);
          border: 5px double var(--border-color); 
          align-items: center; 
        }
        
            .finalbasecombatattributes h2 {
              grid-column: 1 / span 4; /* Span across all four columns */
              text-align: center;
              margin-bottom: 10px;
            }
            
            .finalbasecombatattributes h3 {
              margin: 0; 
            }
            
            .finalbasecombatattributes input {
              width: 100%;
              box-sizing: border-box;
              padding: 5px;
            }            

    .magic {
      grid-area: magic;
      grid-template-columns: 1fr;
      display: grid;
      grid-template-areas:
       "manabox"
       "spellbox";
    }
    
        .manabox {
          display: grid;
          grid-area: manabox;
          gap: 10px;
          background-color: var(--primary-bg-color);
          padding: var(--padding);
          border-radius: var(--border-radius);
          border: 5px double var(--border-color);
          align-items: center; 
          align-content: center;
          grid-template-columns: 1fr 1fr; 
          grid-template-areas:
            "magicbox manacollection"
            "elementalistattributes elementalistattributes"; 
        }
        
            .magicbox {
                grid-area: magicbox;
            }
            
            .notacaster {
                grid-area: notacaster;
            }
                
            .castermana {
              grid-area: castermana; 
              display: grid;
              grid-template-rows: auto; 
              gap: 10px; 
              align-items: center;
              align-content: center;
            }
            
            .castermana h2 { 
              grid-row: 1; 
              text-align: center;
            }
            
            .castermana-grid {
              grid-row: 2; 
              display: grid;
              grid-template-columns: 1fr 1fr; 
              align-items: center;
              align-content: center;
              gap: 5px;
            }
            
            .castermana-grid > div:nth-of-type(odd) { 
              font-weight: bold;
            }
            
            .commonspellexpiry, 
            .warlockspellexpiry {
              grid-column: 1 / span 2;  /* Make these span both columns */
              display: grid;
              grid-template-columns: 1fr 1fr;
              align-items: center;
              align-content: center;
              gap: 5px;
            } 
            
            .elementalistattributes {
              grid-area: elementalistattributes;
              display: grid; 
              grid-template-columns: 1fr 1fr; 
              gap: 10px; 
              background-color: var(--primary-bg-color);
              padding: var(--padding);
              grid-template-areas:
                "elementselectscontainer elementsimage";
            }
            
                .elementselectscontainer {
                    grid-area: elementselectscontainer;
                    align-items: center; 
                    align-content: center;
                }
                
                .elementsimage {
                    grid-area: elementsimage;
                    width: 98%;
                    height: auto;
                }
            
            .manacollection {
              display: grid;
              grid-area: manacollection;
              align-items: center; 
              align-content: center;
              grid-template-areas:
                "standardmana secondaryelementmpcontainer tertiaryelementmpcontainer"
                "mysticmana mysticmana mysticmana";
            }
            
                .secondaryelementmpcontainer {
                    grid-area: secondaryelementmpcontainer;
                }
                
                .tertiaryelementmpcontainer {
                    grid-area: tertiaryelementmpcontainer;
                }
                
                .mysticmana {
                    grid-area: mysticmana;
                }

        .spellbox {
            grid-area: spellbox;
            display: grid;
            gap: 10px;
            background-color: var(--primary-bg-color);
            padding: var(--padding);
            border-radius: var(--border-radius);
            border: 5px double var(--border-color); /* Double-line border */
            grid-template-columns: 1fr;
            grid-template-areas:
                "sorcerer"
                "mystic"
                "warlock"
                "elementalist"
                "demonologist"
                "noncaster";
            }
        
                .sorcerer_spell_list {
                    grid-area: sorcerer;
                }
                .mystic_spell_list {
                    grid-area: mystic;
                }
                .warlock_spell_list {
                    grid-area: warlock;
                }
                .elementalist_spell_list {
                    grid-area: elementalist;
                }
                .demonologist_spell_list {
                    grid-area: demonologist;
                }
                 .noncaster {
                     grid-area: noncaster;
                 }
            
                  .spell-entry {
                    border: 1px solid var(--border-color);
                    border-radius: var(--border-radius);
                    padding: 10px;
                    margin-bottom: 10px; 
                    background-color: var(--primary-bg-color);
                  }
                  
                  .spell-entry > div {  /* Targets the direct children divs within .spell-entry */
                    margin-bottom: 5px; 
                  }
                  
                  .spell_name, 
                  .spell_range, 
                  .spell_duration,
                  .spell_replaces,
                  .spell_rarity,
                  .spell_origin {
                    font-weight: bold; 
                  }
                
                  .spell_name {  /* Style the spell name */
                    font-size: 22px; /* Increased font size */
                    font-weight: 700; /* Bolder font weight */
                  }
                  
                  .spell_desc p {
                    font-size: 18px; /* Reduced font size for descriptions */
                    font-family: 'Macondo', serif; 
                  }
                  
                  .spell_darkness p {
                    font-size: 18px; /* Reduced font size for darkness descriptions */
                    font-family: 'Macondo', serif;
                  }  
  
  /* Grid layout for inventory section */
    .inventory {
        grid-area: inventory;
        grid-template-rows: max-content; /* Automatically adjust row height */
        gap: 10px; /* Space between grid items */        
        grid-template-areas:
            "weapons weapons"
            "possessions armour"
            "money encumbrance";
    }
    
        /* Grid Layout for Weapons Section */
        .weapons {
            display: grid;
            grid-area: weapons;
            grid-template-columns: 1fr;
            grid-template-areas:
                "meleeweapons"
                "rangedweapons"
                "ammunition";
        }

            .meleeweapons {
                grid-area: meleeweapons;
                gap: 5px;
                background-color: var(--primary-bg-color); /* Make sure this matches your design */
                padding: var(--padding);
                border-radius: var(--border-radius);
                border: 5px double var(--border-color); /* Double-line border */
            }
            
            .rangedweapons {
                grid-area: rangedweapons;
                background-color: var(--primary-bg-color); /* Make sure this matches your design */
                padding: var(--padding);
                border-radius: var(--border-radius);
                border: 5px double var(--border-color); /* Double-line border */
            }
            
            .ammunition {
                grid-area: ammunition;
                background-color: var(--primary-bg-color); /* Make sure this matches your design */
                padding: var(--padding);
                border-radius: var(--border-radius);
                border: 5px double var(--border-color); /* Double-line border */
            }
            
                input.equip-toggle[value="1"] + div.hidden-row {
                    border: 5px double var(--hover-border-color);
                    background-color: var(--hover-bg-color); /* Make sure this matches your design */
                }
                
        /* Armour Section Layout */
        .armour {
            display: grid;
            grid-area: armour;
            gap: 5px;
            background-color: var(--primary-bg-color); /* Make sure this matches your design */
            padding: var(--padding);
            border-radius: var(--border-radius);
            border: 5px double var(--border-color); /* Double-line border */
            grid-template-areas:
                "armheader armheader"
                "armourtypelist armourtypelist"
                "basearmourdetails basearmourdetails"
                "subheader subheader"
                "armourproficiencypenalties armourproficiencypenalties"
                "skullimage shieldtogglebox"
                "inventoryshieldhidden inventoryshieldhidden" ;
        }
        
            /* Full-width headings */
            .armour h2 {
                text-align: center;
                font-size: 19px;
                grid-area: armheader;
            }
            
            .armour h3 {
                text-align: center;
                font-size: 19px;
                grid-area: subheader;
            }
            
            .armour .armourtypelist {
                grid-area: armourtypelist;
            }
            
            .armour .basearmourdetails {
                grid-area: basearmourdetails;
            }
            
            .armour .armourproficiencypenalties {
                grid-area: armourproficiencypenalties;
            }
            
            .armour .shieldtogglebox {
                grid-area: shieldtogglebox;
            }
            
            .armour .skullimage {
                grid-area: skullimage;
            }
            
            .armour .shieldhidden {
                grid-area: inventoryshieldhidden;
            }
                    
        /* General Section Styling */
        .money {
            display: grid;
            grid-template-columns: 1fr 1fr; 
            gap: 5px;
            background-color: var(--primary-bg-color); /* Make sure this matches your design */
            padding: var(--padding);
            border-radius: var(--border-radius);
            border: 5px double var(--border-color); /* Double-line border */
            grid-template-areas:
                "moneyheader moneyheader"
                "image goldcrowns"
                "image silverflorins"
                "image copperpennies"
                "otherwealth otherwealth";
        }

            /* Title Styling */
            .money h2 {
                grid-row: 1;
                grid-column: 1 / span 2;
                text-align: center;
                font-size: 19px;
                grid-area: moneyheader;
            }
            
            .money .goldcrowns {
                grid-area: goldcrowns;
            }
            
            .money .silverflorins {
                grid-area: silverflorins;
                
            }
            
            .money .copperpennies {
                grid-area: copperpennies;
            }
            /* Icon Images */
            .money .chestimage {
                grid-area: image;
                align-items: center;
                justify-content: center;
            }
            
            .money .otherwealth {
                grid-area: otherwealth;
                align-items: left;
                justify-content: center;

            }
            
        .possessions {
            display: grid;
            grid-area: possessions;
            background-color: var(--primary-bg-color); /* Make sure this matches your design */
            padding: var(--padding);
            border-radius: var(--border-radius);
            border: 5px double var(--border-color); /* Double-line border */
            grid-template-rows: max-content;
            grid-template-areas:
                "posheader"
                "inventoryitems"
                "repcontrols";
        }
        
            /* Full-width headings */
            .possessions h2 {
                grid-row: 1;
                text-align: center;
                font-size: 19px;
                grid-area: posheader;
            }

            .charsheet .repcontainer[data-groupname="repeating_inventoryitems"] {
                    grid-area: inventoryitems;
                    display: grid;
                    align-self: start;                
                }
                
                    .charsheet .repcontainer[data-groupname="repeating_inventoryitems"] > .repitem {
                        border: 1px solid var(--hover-border-color);
                        background-color: var(--hover-bg-color); /* Make sure this matches your design */
                        margin: 1px;
                    }

            .charsheet .repcontrol[data-groupname="repeating_inventoryitems"] {
                grid-area: repcontrols;
                align-self: start;
            }
            
        .encumbrance {
            display: grid;
            grid-area: encumbrance;
            grid-template-columns: repeat(2fr 1fr);
            gap: 5px;
            background-color: var(--primary-bg-color); /* Make sure this matches your design */
            padding: var(--padding);
            border-radius: var(--border-radius);
            border: 5px double var(--border-color); /* Double-line border */
            grid-template-areas:
            "encheader encheader"
            "encumbrancecontainer clawimage"
        } 
        
            /* Full-width headings */
            .encumbrance h2 {
                grid-column: span 4;
                text-align: center;
                font-size: 19px;
                grid-area: encheader;
            }
            
            .encumbrance .encumbrancecontainer {
                grid-area: encumbrancecontainer;
            }
            
            .encumbrance .clawimage  {
                grid-area: clawimage;
            }
            
    /* General Grid Layout for Skills Section */
    .skills {
      grid-area: skills;
      display: grid;
      grid-template-rows: auto; /* Automatically adjust row height */
      gap: 10px; /* Space between grid items */
      grid-template-areas:
        "professionskillscontainer"
        "pathscontainer"
        "secondaryskillscontainer";
    }

        .professionskillscontainer {
            grid-area: professionskillscontainer;
            gap: 10px;
            background-color: var(--primary-bg-color);
            padding: var(--padding);
            border-radius: var(--border-radius);
            border: 5px double var(--border-color); /* Double-line border */
            align-items: center; /* Vertically align content */
        }
        
                /* Arrange counter-boxes horizontally */
                .counter-container {
                  display: flex;
                  justify-content: space-between;
                  flex-wrap: wrap; /* Allows boxes to wrap on smaller screens */
                  gap: 20px;
                }
                
                    .counterbox {
                      display: flex;
                      flex-direction: column;
                      border: 1px solid var(--border-color);
                      padding: 10px;
                      flex: 1 1 200px; /* Flex-grow and flex-shrink for dynamic width */
                      min-width: 200px; /* Ensure counterboxes don't shrink too small */
                    }
                    
                    .counterfields {
                      display: flex;
                      flex-direction: column;
                    }

                .skillrow details {
                    width: 100%;
                    padding: 10px 0;
                }
                    
                /* Layout for checkboxes and the dice roll */
                .skillrow > details > div {
                    align-items: center;
                    justify-content: flex-start;
                }

            .pathscontainer {
                grid-area: pathscontainer;
                gap: 10px;
                background-color: var(--primary-bg-color);
                padding: var(--padding);
                border-radius: var(--border-radius);
                border: 5px double var(--border-color); /* Double-line border */
                align-items: center; /* Vertically align content */
            }
            
            .secondaryskillscontainer {
                grid-area: secondaryskillscontainer;
                gap: 10px;
                background-color: var(--primary-bg-color);
                padding: var(--padding);
                border-radius: var(--border-radius);
                border: 5px double var(--border-color); /* Double-line border */
                align-items: center; /* Vertically align content */
            }
        
/* Grid layout for languages section */
.languages {
  grid-area: languages;
            gap: 10px;
            background-color: var(--primary-bg-color);
            padding: var(--padding);
            border-radius: var(--border-radius);
            border: 5px double var(--border-color); /* Double-line border */
            align-items: center; /* Vertically align content */

}

/* Grid layout for biographical section */
.biographical {
  grid-area: biographical;
            gap: 10px;
            background-color: var(--primary-bg-color);
            padding: var(--padding);
            border-radius: var(--border-radius);
            border: 5px double var(--border-color); /* Double-line border */
            align-items: center; /* Vertically align content */

}

/* Documentation section with custom font and border style */
.documentation {
  grid-area: documentation;
            gap: 10px;
            background-color: var(--primary-bg-color);
            padding: var(--padding);
            border-radius: var(--border-radius);
            border: 5px double var(--border-color); /* Double-line border */
            align-items: center; /* Vertically align content */

}

.customskills {
    grid-area: customskills;
}

.knightskills {
    grid-area: knightskills;
}

.barbarianskills {
    grid-area: barbarianskills;
}

.assassinskills {
    grid-area: assassinskills;
}

.hunterskills {
    grid-area: hunterskills;
}

.warlockskills {
    grid-area: warlockskills;
}

.sorcererskills {
    grid-area: sorcererskills;
}

.mysticskills {
    grid-area: mysticskills;
}

.elementalistskills {
    grid-area: elementalistskills;
}
    
.knaveskills {
    grid-area: knaveskills;
}

.priestskills {
    grid-area: priestskills;
}

.demonologistskills {
    grid-area: demonologistskills;
}

.shock_attack {
    grid-area: shock_attack;
}

/* Show the specific section based on the value of the tabstoggle input */
.tabstoggle[value="character"] ~ div.character,
.tabstoggle[value="inventory"] ~ div.inventory,
.tabstoggle[value="basescores"] ~ div.basescores,
.tabstoggle[value="magic"] ~ div.magic,
.tabstoggle[value="skills"] ~ div.skills,
.tabstoggle[value="languages"] ~ div.languages,
.tabstoggle[value="biographical"] ~ div.biographical,
.tabstoggle[value="documentation"] ~ div.documentation {
  display: grid;
}

/* Display grid layout for specific profession abilities based on toggle value */
input.profession-toggle[value="Knight"] ~ div.knightmelee,
input.profession-toggle[value="Barbarian"] ~ div.barbarianmelee,
input.profession-toggle[value="Knight"] ~ div.supremacy,
input.profession-toggle[value="Barbarian"] ~ div.supremacy,
input.profession-toggle[value="Assassin"] ~ div.assassinmelee,
input.profession-toggle[value="Hunter"] ~ div.huntermelee,
input.profession-toggle[value="Knave"] ~ div.knavemelee,
input.profession-toggle[value="Priest"] ~ div.priestmelee,
input.profession-toggle[value="Sorcerer"] ~ div.nomelee,
input.profession-toggle[value="Mystic"] ~ div.mysticmelee,
input.profession-toggle[value="Elementalist"] ~ div.elementalistmelee,
input.profession-toggle[value="Demonologist"] ~ div.demonologistmelee,
input.profession-toggle[value="Warlock"] ~ div.warlockmelee,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.knightmelee,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.barbarianmelee,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.assassinmelee,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.huntermelee, 
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.warlockmelee, 
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.knavemelee, 
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.mysticmelee, 
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.priestmelee, 
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.demonologistmelee, 
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.elementalistmelee {
  display: grid; /* Displays the element as a grid layout */
}

/* Show relevant sections for predefined professions */
input.profession-toggle[value="Knight"] ~ div.martialhidden,
input.profession-toggle[value="Knight"] ~ div.nomagic,
input.profession-toggle[value="Barbarian"] ~ div.martialhidden,
input.profession-toggle[value="Barbarian"] ~ div.nomagic,
input.profession-toggle[value="Hunter"] ~ div.martialhidden,
input.profession-toggle[value="Hunter"] ~ div.nomagic,
input.profession-toggle[value="Assassin"] ~ div.nonmartialhidden,
input.profession-toggle[value="Assassin"] ~ div.nomagic,
input.profession-toggle[value="Knave"] ~ div.nonmartialhidden,
input.profession-toggle[value="Knave"] ~ div.nomagic,
input.profession-toggle[value="Priest"] ~ div.nonmartialhidden,
input.profession-toggle[value="Priest"] ~ div.nomagic,
input.profession-toggle[value="Sorcerer"] ~ div.magicattributeshidden,
input.profession-toggle[value="Sorcerer"] ~ div.nonmartialhidden,
input.profession-toggle[value="Mystic"] ~ div.magicattributeshidden,
input.profession-toggle[value="Mystic"] ~ div.nonmartialhidden,
input.profession-toggle[value="Elementalist"] ~ div.magicattributeshidden,
input.profession-toggle[value="Elementalist"] ~ div.nonmartialhidden,
input.profession-toggle[value="Warlock"] ~ div.magicattributeshidden,
input.profession-toggle[value="Warlock"] ~ div.nonmartialhidden,
input.profession-toggle[value="Demonologist"] ~ div.magicattributeshidden,
input.profession-toggle[value="Demonologist"] ~ div.nonmartialhidden,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.magicattributeshidden,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.martialhidden,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.nonmartialhidden {
  display: grid;
}

input.combat_guards_able[value="disabled"] ~ div.martialhidden,
input.combat_guards_able[value="disabled"] ~ div.nonmartialhidden {
  display: none;
}

/* Toggle visibility of magical attributes based on profession */
input.profession-toggle[value="Sorcerer"] ~ div.castermp,
input.profession-toggle[value="Mystic"] ~ div.castermp,
input.profession-toggle[value="Elementalist"] ~ div.castermp,
input.profession-toggle[value="Demonologist"] ~ div.castermp,
input.profession-toggle[value="Warlock"] ~ div.castermp,
input.profession-toggle[value="Demonologist"] ~ div.commonspellexpiry,
input.profession-toggle[value="Elementalist"] ~ div.commonspellexpiry,
input.profession-toggle[value="Mystic"] ~ div.commonspellexpiry,
input.profession-toggle[value="Sorcerer"] ~ div.commonspellexpiry,
input.profession-toggle[value="Warlock"] ~ div.warlockspellexpiry,
input.profession-toggle[value="Elementalist"] ~ div.standardmp,
input.profession-toggle[value="Elementalist"] ~ div.elementalistmp,
input.profession-toggle[value="Sorcerer"] ~ div.standardmp,
input.profession-toggle[value="Mystic"] ~ div.mysticmp,
input.profession-toggle[value="Warlock"] ~ div.standardmp,
input.profession-toggle[value="Demonologist"] ~ div.standardmp,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.warlockspellexpiry,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.commonspellexpiry,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.castermp,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.elementalistmp,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.standardmp,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.mysticmp {
  display: grid;
}

input.profession-toggle[value="Knight"] ~ div.notacaster,
input.profession-toggle[value="Barbarian"] ~ div.notacaster,
input.profession-toggle[value="Assassin"] ~ div.notacaster,
input.profession-toggle[value="Hunter"] ~ div.notacaster,
input.profession-toggle[value="Knave"] ~ div.notacaster,
input.profession-toggle[value="Priest"] ~ div.notacaster,
input.profession-toggle[value="Sorcerer"] ~ div.castermana,
input.profession-toggle[value="Mystic"] ~ div.castermana,
input.profession-toggle[value="Elementalist"] ~ div.castermana,
input.profession-toggle[value="Demonologist"] ~ div.castermana,
input.profession-toggle[value="Warlock"] ~ div.castermana,
input.profession-toggle[value="Sorcerer"] ~ div.standardmana,
input.profession-toggle[value="Mystic"] ~ div.mysticmana,
input.profession-toggle[value="Elementalist"] ~ div.elementalistattributes,
input.profession-toggle[value="Elementalist"] ~ div.standardmana,
input.profession-toggle[value="Elementalist"] ~ div.elementalistmana,
input.profession-toggle[value="Warlock"] ~ div.standardmana,
input.profession-toggle[value="Demonologist"] ~ div.standardmana,
input.profession-toggle[value="Sorcerer"] ~ div.magicalattackcontainer,
input.profession-toggle[value="Mystic"] ~ div.magicalattackcontainer,
input.profession-toggle[value="Elementalist"] ~ div.magicalattackcontainer,
input.profession-toggle[value="Demonologist"] ~ div.magicalattackcontainer,
input.profession-toggle[value="Warlock"] ~ div.magicalattackcontainer,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.castermana,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.elementalistattributes,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.standardmana,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.elementalistmana,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.mysticmana {
  display: grid;
}

/* Toggle visibility of caster list based on profession */
input.profession-toggle[value="Knight"] ~ div.noncaster,
input.profession-toggle[value="Barbarian"] ~ div.noncaster,
input.profession-toggle[value="Assassin"] ~ div.noncaster,
input.profession-toggle[value="Knave"] ~ div.noncaster,
input.profession-toggle[value="Hunter"] ~ div.noncaster,
input.profession-toggle[value="Priest"] ~ div.noncaster,
input.profession-toggle[value="Sorcerer"] ~ div.sorcerer_spell_list,
input.profession-toggle[value="Mystic"] ~ div.mystic_spell_list,
input.profession-toggle[value="Warlock"] ~ div.warlock_spell_list,
input.profession-toggle[value="Elementalist"] ~ div.elementalist_spell_list,
input.element-toggle1[value="Air"] ~ div.air_spell_list,
input.element-toggle1[value="Earth"] ~ div.earth_spell_list,
input.element-toggle1[value="Water"] ~ div.water_spell_list,
input.element-toggle1[value="Fire"] ~ div.fire_spell_list,
input.element-toggle1[value="Darkness"] ~ div.darkness_spell_list,
input.element-toggle1[value="Darkness"] ~ div.spell_darkness,
input.element-toggle2[value="Air"] ~ div.air_spell_list,
input.element-toggle2[value="Earth"] ~ div.earth_spell_list,
input.element-toggle2[value="Water"] ~ div.water_spell_list,
input.element-toggle2[value="Fire"] ~ div.fire_spell_list,
input.element-toggle2[value="Darkness"] ~ div.darkness_spell_list,
input.element-toggle3[value="Air"] ~ div.air_spell_list,
input.element-toggle3[value="Earth"] ~ div.earth_spell_list,
input.element-toggle3[value="Water"] ~ div.water_spell_list,
input.element-toggle3[value="Fire"] ~ div.fire_spell_list,
input.element-toggle3[value="Darkness"] ~ div.darkness_spell_list,
input.profession-toggle[value="Demonologist"] ~ div.demonologist_spell_list,
input.profession-toggle[value="Demonologist"] ~ div.demonologist_sorcerer_spells,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.sorcerer_spell_list,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.mystic_spell_list,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.warlock_spell_list,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.elementalist_spell_list,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.demonologist_spell_list {
  display: grid;
}

/* Display grid layout for specific profession skills based on toggle value */
input.profession-toggle[value="Knight"] ~ div.knightskills,
input.profession-toggle[value="Barbarian"] ~ div.barbarianskills,
input.profession-toggle[value="Assassin"] ~ div.assassinskills,
input.profession-toggle[value="Hunter"] ~ div.hunterskills,
input.profession-toggle[value="Warlock"] ~ div.warlockskills,
input.profession-toggle[value="Sorcerer"] ~ div.sorcererskills,
input.profession-toggle[value="Mystic"] ~ div.mysticskills,
input.profession-toggle[value="Elementalist"] ~ div.elementalistskills,
input.profession-toggle[value="Knave"] ~ div.knaveskills,
input.profession-toggle[value="Priest"] ~ div.priestskills,
input.profession-toggle[value="Demonologist"] ~ div.demonologistskills,
input.profession-toggle[value="Knight"] ~ div.customskills,
input.profession-toggle[value="Barbarian"] ~ div.customskills,
input.profession-toggle[value="Assassin"] ~ div.customskills,
input.profession-toggle[value="Hunter"] ~ div.customskills,
input.profession-toggle[value="Warlock"] ~ div.customskills,
input.profession-toggle[value="Sorcerer"] ~ div.customskills,
input.profession-toggle[value="Mystic"] ~ div.customskills,
input.profession-toggle[value="Elementalist"] ~ div.customskills,
input.profession-toggle[value="Knave"] ~ div.customskills,
input.profession-toggle[value="Priest"] ~ div.customskills,
input.profession-toggle[value="Demonologist"] ~ div.customskills,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.knight,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.barbarianskills,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.assassinskills,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.hunterskills,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.warlockskills,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.sorcererskills,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.mysticskills,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.elementalistskills,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.knaveskills,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.priestskills,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.demonologistskills,
input.profession-toggle:not([value="Knight"]):not([value="Barbarian"]):not([value="Warlock"]):not([value="Assassin"]):not([value="Knave"]):not([value="Hunter"]):not([value="Priest"]):not([value="Mystic"]):not([value="Elementalist"]):not([value="Demonologist"]):not([value="Sorcerer"]):not([value=""]) ~ div.customskills {
  display: grid; /* Displays the element as a grid layout */
}

.charsheet input.track:not([value="0"]) ~ div.track,
.charsheet input.disarm_technique:not([value="0"]) ~ div.disarm_technique,
.charsheet input.main_gauche:not([value="0"]) ~ div.main_gauche,
.charsheet input.intimidating:not([value="0"]) ~ div.intimidating,
.charsheet input.shock_attack:not([value="0"]) ~ div.shock_attack,
.charsheet input.memorize:not([value="0"]) ~ div.memorize,
.charsheet input.pilfer:not([value="0"]) ~ div.pilfer,
.charsheet input.disguise:not([value="0"]) ~ div.disguise,
.charsheet input.inner_sense:not([value="0"]) ~ div.inner_sense,
.charsheet input.pick_lock:not([value="0"]) ~ div.pick_lock,
.charsheet input.esp:not([value="0"]) ~ div.esp,
.charsheet input.premonition:not([value="0"]) ~ div.premonition,
.charsheet input.raw_power:not([value="0"]) ~ div.raw_power,
.charsheet input.raw_poweralternate:not([value="0"]) ~ div.raw_poweralternate,
.charsheet input.appraiseenemy:not([value="0"]) ~ div.appraiseenemy,
.charsheet input.distract:not([value="0"]) ~ div.distract,
.charsheet input.bodyguard:not([value="0"]) ~ div.bodyguard,
.charsheet input.presence:not([value="0"]) ~ div.presence,
.charsheet input.sense_falsehood:not([value="0"]) ~ div.sense_falsehood,
.charsheet input.hypnotic_suggestion:not([value="0"]) ~ div.hypnotic_suggestion,
.charsheet input.network:not([value="0"]) ~ div.network,
.charsheet input.gossip:not([value="0"]) ~ div.gossip,
.charsheet input.forage:not([value="0"]) ~ div.forage,
.charsheet input.favoured_terrain:not([value="0"]) ~ div.favoured_terrain,
.charsheet input.favoured_weapon:not([value="0"]) ~ div.favoured_weapon,
.charsheet input.linguist:not([value="0"]) ~ div.linguist,
.charsheet input.exorcism:not([value="0"]) ~ div.exorcism,
.charsheet input.sermon:not([value="0"]) ~ div.sermon,
.charsheet input.remove_curse:not([value="0"]) ~ div.remove_curse,
.charsheet input.remove_madness:not([value="0"]) ~ div.remove_madness,
.charsheet input.demonology:not([value="0"]) ~ div.demonology,
.charsheet input.ritual:not([value="0"]) ~ div.ritual,
.charsheet input.banish:not([value="0"]) ~ div.banish,
.charsheet input.words_are_power:not([value="0"]) ~ div.words_are_power,
.charsheet input.pact:not([value="0"]) ~ div.pact {
  display: block; 
}

.charsheet input.track_front:not([value="0"]) ~ div.track_button_front,
.charsheet input.disarm_front:not([value="0"]) ~ div.disarm_button_front,
.charsheet input.intimidating_front:not([value="0"]) ~ div.intimidating_button_front,
.charsheet input.shock_attack_front:not([value="0"]) ~ div.shock_attack_button_front,
.charsheet input.memorize_front:not([value="0"]) ~ div.memorize_button_front,
.charsheet input.pilfer_front:not([value="0"]) ~ div.pilfer_button_front,
.charsheet input.disguise_front:not([value="0"]) ~ div.disguise_button_front,
.charsheet input.inner_sense_front:not([value="0"]) ~ div.inner_sense_button_front,
.charsheet input.pick_lock_front:not([value="0"]) ~ div.pick_lock_button_front,
.charsheet input.esp_front:not([value="0"]) ~ div.esp_button_front,
.charsheet input.premonition_front:not([value="0"]) ~ div.premonition_button_front,
.charsheet input.raw_power_front:not([value="0"]) ~ div.raw_power_button_front,
.charsheet input.raw_poweralternate_front:not([value="0"]) ~ div.raw_power_button_front,
.charsheet input.appraiseenemy_front:not([value="0"]) ~ div.appraiseenemy_button_front,
.charsheet input.distract_front:not([value="0"]) ~ div.distract_button_front,
.charsheet input.bodyguard_front:not([value="0"]) ~ div.bodyguard_button_front,
.charsheet input.presence_front:not([value="0"]) ~ div.presence_button_front,
.charsheet input.sense_falsehood_front:not([value="0"]) ~ div.sense_falsehood_button_front,
.charsheet input.hypnotic_suggestion_front:not([value="0"]) ~ div.hypnotic_suggestion_button_front,
.charsheet input.network_front:not([value="0"]) ~ div.network_button_front,
.charsheet input.gossip_front:not([value="0"]) ~ div.gossip_button_front,
.charsheet input.forage_front:not([value="0"]) ~ div.forage_button_front,
.charsheet input.favoured_terrain_front:not([value="0"]) ~ div.favoured_terrain_button_front,
.charsheet input.favoured_weapon_front:not([value="0"]) ~ div.favoured_weapon_button_front,
.charsheet input.linguist_front:not([value="0"]) ~ div.linguist_button_front,
.charsheet input.exorcism_front:not([value="0"]) ~ div.exorcism_button_front,
.charsheet input.sermon_front:not([value="0"]) ~ div.sermon_button_front,
.charsheet input.remove_curse_front:not([value="0"]) ~ div.remove_curse_button_front,
.charsheet input.remove_madness_front:not([value="0"]) ~ div.remove_madness_button_front,
.charsheet input.demonology_front:not([value="0"]) ~ div.demonology_button_front,
.charsheet input.ritual_front:not([value="0"]) ~ div.ritual_button_front,
.charsheet input.banish_front:not([value="0"]) ~ div.banish_button_front,
.charsheet input.words_are_power_front:not([value="0"]) ~ div.words_are_power_button_front,
.charsheet input.pact_front:not([value="0"]) ~ div.pact_button_front,
.charsheet input.deathvow_front:not([value="0"]) ~ div.deathvow_button_front,
.charsheet input.iron_will_front:not([value="0"]) ~ div.iron_will_button_front,
.charsheet input.precise_shot_front:not([value="0"]) ~ div.precise_shot_button_front,
.charsheet input.stillness_front:not([value="0"]) ~ div.stillness_button_front,
.charsheet input.penetrating_shot_front:not([value="0"]) ~ div.penetrating_shot_button_front,
.charsheet input.hunters_mind_front:not([value="0"]) ~ div.hunters_mind_button_front,
.charsheet input.human_intuition_front:not([value="0"]) ~ div.human_intuition_button_front,
.charsheet input.elemental_resistance_front:not([value="0"]) ~ div.elemental_resistance_button_front,
.charsheet input.berserk_front:not([value="0"]) ~ div.berserk_button_front,
.charsheet input.bloodrage_front:not([value="0"]) ~ div.bloodrage_button_front,
.charsheet input.main_gauche_front:not([value="0"]) ~ div.main_gauche_button_front {
  display: block;
}

.charsheet input.rollhp-toggle:checked ~ div.rollbasehpbuttoncontainer,
.charsheet input.rollstats-toggle:checked ~ div.rollbasestatsbuttoncontainer {
  display: block;
}

.charsheet input.weaponskill1:checked ~ div.weaponskillrow1,
.charsheet input.weaponskill2:checked ~ div.weaponskillrow2,
.charsheet input.weaponskill3:checked ~ div.weaponskillrow3 {
  display: block;
}

.charsheet input.shield[value="1"] ~ div.shieldhidden {
  display: block;
}

.charsheet input.elementalist_raw_power_type[value="Core"] ~ .elementalist_core_powers, 
.charsheet input.elementalist_raw_power_type[value="PG"] ~ .elementalist_alternate_powers,
.charsheet input.elementalist_raw_power_type[value="Both"] ~ .elementalist_alternate_powers,
.charsheet input.elementalist_raw_power_type[value="Both"] ~ .elementalist_core_powers {
  display: block;
}

.charsheet input.ranged_magic_toggle[value="Enabled"] ~ div.rangedmagicallowed {
  display: block;
}

.charsheet input.steper_toggle[value="1"] ~ .steper_d20,
.charsheet input.steper_toggle[value="0"] ~ .steper_2d10 {
  display: block;
}


.charsheet input.supremacy_able[value="disabled"] ~ div.supremacy,
.charsheet input.paths_toggle[value="disabled"] ~ div.pathscontainer,
.charsheet input.secondaryskills_toggle[value="disabled"] ~ div.secondaryskillscontainer,
.charsheet input.playerspells_toggle[value="disabled"] ~ div.playerspell,
.charsheet div.supremacy,
.charsheet div.knightskills,
.charsheet div.barbarianskills,
.charsheet div.assassinskills,
.charsheet div.hunterskills,
.charsheet div.warlockskills,
.charsheet div.sorcererskills,
.charsheet div.mysticskills,
.charsheet div.elementalistskills,
.charsheet div.knaveskills,
.charsheet div.priestskills,
.charsheet div.demonologistskills,
.charsheet div.customskills,
.charsheet div.character,
.charsheet div.skills,
.charsheet div.inventory,
.charsheet div.basescores,
.charsheet div.magic,
.charsheet div.languages,
.charsheet div.biographical,
.charsheet div.documentation,
.charsheet div.barbarianmelee,
.charsheet div.knightmelee,
.charsheet div.warlockmelee,
.charsheet div.assassinmelee,
.charsheet div.huntermelee,
.charsheet div.knavemelee,
.charsheet div.elementalistmelee,
.charsheet div.mysticmelee,
.charsheet div.priestmelee,
.charsheet div.demonologistmelee,
.charsheet div.nomelee,
.charsheet div.castermana,
.charsheet div.elementalistattributes,
.charsheet div.standardmana,
.charsheet div.elementalistmana,
.charsheet div.notacaster,
.charsheet div.mysticmana,
.charsheet div.noncaster,
.charsheet div.spelllist,
.charsheet div.sorcerer_spell_list,
.charsheet div.mystic_spell_list,
.charsheet div.warlock_spell_list,
.charsheet div.elementalist_spell_list,
.charsheet div.demonologist_spell_list,
.charsheet div.air_spell_list,
.charsheet div.earth_spell_list,
.charsheet div.water_spell_list,
.charsheet div.fire_spell_list,
.charsheet div.darkness_spell_list,
.charsheet div.spell_darkness,
.charsheet div.weaponskillrow1,
.charsheet div.weaponskillrow2,
.charsheet div.weaponskillrow3,
.charsheet div.rollbasestatsbuttoncontainer,
.charsheet div.rollbasehpbuttoncontainer,
.charsheet div.castermp,
.charsheet div.commonspellexpiry,
.charsheet div.warlockspellexpiry,
.charsheet div.standardmp,
.charsheet div.elementalistmp,
.charsheet div.mysticmp,
.charsheet div.nomagic,
.charsheet div.nonmartialhidden,
.charsheet div.martialhidden,
.charsheet div.shieldhidden,
.charsheet div.disarm_technique,
.charsheet div.intimidating,
.charsheet div.main_gauche,
.charsheet div.track,
.charsheet div.shock_attack,
.charsheet div.memorize,
.charsheet div.disguise,
.charsheet div.pilfer,
.charsheet div.inner_sense,
.charsheet div.pick_lock,
.charsheet div.esp,
.charsheet div.premonition,
.charsheet div.raw_power,
.charsheet div.raw_poweralternate,
.charsheet div.appraiseenemy,
.charsheet div.distract,
.charsheet div.bodyguard,
.charsheet div.presence,
.charsheet div.sense_falsehood,
.charsheet div.hypnotic_suggestion,
.charsheet div.network,
.charsheet div.gossip,
.charsheet div.forage,
.charsheet div.favoured_terrain,
.charsheet div.favoured_weapon,
.charsheet div.linguist,
.charsheet div.exorcism,
.charsheet div.sermon,
.charsheet div.remove_curse,
.charsheet div.remove_madness,
.charsheet div.demonology,
.charsheet div.ritual,
.charsheet div.banish,
.charsheet div.pact,
.charsheet div.track_button_front,
.charsheet div.disarm_button_front,
.charsheet div.intimidating_button_front,
.charsheet div.shock_attack_button_front,
.charsheet div.memorize_button_front,
.charsheet div.pilfer_button_front,
.charsheet div.disguise_button_front,
.charsheet div.inner_sense_button_front,
.charsheet div.pick_lock_button_front,
.charsheet div.esp_button_front,
.charsheet div.premonition_button_front,
.charsheet div.raw_power_button_front,
.charsheet div.appraiseenemy_button_front,
.charsheet div.distract_button_front,
.charsheet div.bodyguard_button_front,
.charsheet div.presence_button_front,
.charsheet div.sense_falsehood_button_front,
.charsheet div.hypnotic_suggestion_button_front,
.charsheet div.network_button_front,
.charsheet div.gossip_button_front,
.charsheet div.forage_button_front,
.charsheet div.favoured_terrain_button_front,
.charsheet div.favoured_weapon_button_front,
.charsheet div.linguist_button_front,
.charsheet div.exorcism_button_front,
.charsheet div.sermon_button_front,
.charsheet div.remove_curse_button_front,
.charsheet div.remove_madness_button_front,
.charsheet div.demonology_button_front,
.charsheet div.ritual_button_front,
.charsheet div.banish_button_front,
.charsheet div.words_are_power_button_front,
.charsheet div.pact_button_front,
.charsheet div.iron_will_button_front,
.charsheet div.deathvow_button_front,
.charsheet div.precise_shot_button_front,
.charsheet div.stillness_button_front,
.charsheet div.penetrating_shot_button_front,
.charsheet div.hunters_mind_button_front,
.charsheet div.human_intuition_button_front,
.charsheet div.elemental_resistance_button_front,
.charsheet div.berserk_button_front,
.charsheet div.bloodrage_button_front,
.charsheet div.main_gauche_button_front,
.charsheet div.elementalist_alternate_powers,
.charsheet div.elementalist_core_powers,
.charsheet div.steper_d20,
.charsheet div.steper_2d10,
.charsheet div.rangedmagicallowed,
.charsheet div.magicalattackcontainer {
        display: none;
}

/* Base styles for all custom templates */
.sheet-rolltemplate-custom,
.sheet-rolltemplate-customd20,
.sheet-rolltemplate-custom2d10 {
  margin-left: -30px;
  margin-right: 20px;
  background-color: var(--primary-bg-color);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  padding: 10px;
  vertical-align: middle;
  text-align: center;
}

.sheet-rolltemplate-custom .sheet-header,
.sheet-rolltemplate-customd20 .sheet-header,
.sheet-rolltemplate-custom2d10 .sheet-header {
  background-color: rgba(112, 32, 130, 1);
  text-align: left;
  color: #FFF;
  padding: 5px;
}

.sheet-rolltemplate-custom .sheet-header .sheet-title,  
.sheet-rolltemplate-customd20 .sheet-header .sheet-title,  
.sheet-rolltemplate-custom2d10 .sheet-header .sheet-title {  
  font-family: 'Almendra SC', serif; 
  font-size: 22px;
  line-height: 1.1;
}

.sheet-rolltemplate-custom .sheet-header .sheet-subtitle,
.sheet-rolltemplate-customd20 .sheet-header .sheet-subtitle,
.sheet-rolltemplate-custom2d10 .sheet-header .sheet-subtitle {
  font-family: 'Macondo', serif; 
  font-size: 16px;
}

.sheet-rolltemplate-custom .sheet-content > div,
.sheet-rolltemplate-customd20 .sheet-content > div,
.sheet-rolltemplate-custom2d10 .sheet-content > div {
  padding: 8px;
}

.sheet-rolltemplate-custom .sheet-content,
.sheet-rolltemplate-customd20 .sheet-content,
.sheet-rolltemplate-custom2d10 .sheet-content {
  display: grid;
  grid-template-columns: auto auto;
  line-height: 1.6em;
  vertical-align: middle;
}

.sheet-rolltemplate-custom .sheet-content .sheet-key,
.sheet-rolltemplate-customd20 .sheet-content .sheet-key,
.sheet-rolltemplate-custom2d10 .sheet-content .sheet-key {
  font-family: 'Almendra SC', serif;
  font-size: 20px;
  font-weight: normal;
  padding-right: 10px;
  text-align: right;
  vertical-align: middle;
  background-color: #C0C0C0;
  color: black;
}

.sheet-rolltemplate-custom .sheet-content .sheet-value,
.sheet-rolltemplate-customd20 .sheet-content .sheet-value,
.sheet-rolltemplate-custom2d10 .sheet-content .sheet-value {
  font-family: 'Almendra SC', serif;
  font-size: 20px;
  font-weight: normal;
  padding-right: 10px;
  text-align: right;
  vertical-align: middle;
  background-color: #767676;
  color: white;
}

.sheet-rolltemplate-custom .sheet-desc,
.sheet-rolltemplate-customd20 .sheet-desc,
.sheet-rolltemplate-custom2d10 .sheet-desc {
  grid-column: span 2;
  padding: 5px;
  font-family: 'Macondo', serif; 
  font-size: 16px;
  font-weight: normal;
  padding-right: 10px;
  vertical-align: middle;
  background-color: #767676;
  color: white;
  text-align: center;
  vertical-align: middle;
}

.sheet-rolltemplate-customd20 span.sheet-fumble,
.sheet-rolltemplate-custom2d10 span.sheet-fumble {
  color: red;
  vertical-align: middle;
  padding: 5px;
  text-align: center;
}

.sheet-rolltemplate-customd20 div.sheet-fumble,
.sheet-rolltemplate-custom2d10 div.sheet-fumble {
  grid-column: span 2;
}

.sheet-rolltemplate-customd20 span.sheet-crit,
.sheet-rolltemplate-custom2d10 span.sheet-crit {
  color: green;
  vertical-align: middle;
  padding: 5px;
  text-align: center;
}

.sheet-rolltemplate-customd20 div.sheet-crit,
.sheet-rolltemplate-custom2d10 div.sheet-crit {
  grid-column: span 2;
}

.sheet-rolltemplate-customd20 span.inlinerollresult,
.sheet-rolltemplate-customd20 span.inlinerollresult.fullfail,
.sheet-rolltemplate-customd20 span.inlinerollresult.fullcrit,
.sheet-rolltemplate-customd20 span.inlinerollresult.importantroll,
.sheet-rolltemplate-custom2d10 span.inlinerollresult,
.sheet-rolltemplate-custom2d10 span.inlinerollresult.fullfail,
.sheet-rolltemplate-custom2d10 span.inlinerollresult.fullcrit,
.sheet-rolltemplate-custom2d10 span.inlinerollresult.importantroll,
.sheet-rolltemplate-custom span.inlinerollresult,
.sheet-rolltemplate-custom span.inlinerollresult.fullfail,
.sheet-rolltemplate-custom span.inlinerollresult.fullcrit,
.sheet-rolltemplate-custom span.inlinerollresult.importantroll {
  background-color: rgba(112, 32, 130, 1);
  border: none;
}

.maingauchesummary .repcontrol {
    display: none;
}

@media print {
  /* Set A4 size */
  @page {
    size: A4 portrait;
    margin: 10mm; /* Adjust margin as needed */
  }

  /* Hide documentation or unwanted sections */
  .documentation {
    display: none;
  }

  /* General print styles */
  body {
    font-size: 12pt; /* Adjust font size */
    line-height: 1.5;
    color: black;
  }

  /* Format main sections */
  .character,
  .base-scores,
  .magic,
  .inventory,
  .paths-skills,
  .languages,
  .biography {
    page-break-inside: avoid; /* Avoid breaking these sections */
    margin-bottom: 15mm; /* Spacing between sections */
  }

  /* Optional: Adjust table styles for print */
  table {
    width: 100%;
    border-collapse: collapse;
    margin-bottom: 10mm;
  }

  th, td {
    border: 1px solid #000;
    padding: 5px;
  }
}