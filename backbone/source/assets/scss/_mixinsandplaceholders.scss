//- This file will store all mixins and placeholders that have generic use
@use 'placeholders/materialIcons';

@use 'placeholders/pictos';

@use 'placeholders/hidden';

@use 'placeholders/textLevel';
@use 'placeholders/button';
@use 'placeholders/inputBase';
@use 'placeholders/inputlabel';
@use 'placeholders/collapse';
@use 'placeholders/adaptiveInputs';
@use 'placeholders/headedText';

@use 'placeholders/borderPlaceholders';
@use 'placeholders/fieldsetStyling';
@use 'placeholders/sizingAndRatio';
@use 'placeholders/fillLeft';
@use 'placeholders/layout';
//- Default styles. This Placeholder gets a little complicated. We're going to define several CSS variables in the first lines that will allow us to easily use the same layout principles across the sheet. Additionally, this placeholder is going to apply several styles to various elements. The reason we do this as a placeholder instead of directly in a class' CSS declaration is so that we can easily apply the same styling to our sheet as a whole and to the rolltemplate (note that many of these class specifications have versions prefixed and unprefixed with `.sheet-`
%defaultStyles{
  @extend %textElements;
  @extend %materialIcons;
  @extend %hideBase;
  @extend %textStyles;
  @extend %headerElements;
  @extend %inputBase;
  @extend %button;
  @extend %r20FontClasses;
  @extend %input-label;
  @extend %headed-textarea;
  @extend %borderStyles;
  @extend %adaptiveText;
  @extend %sizesAndRatios;
  @extend %collapsible;
  @extend %fieldsetStyling;
  @extend %fillLeft;
  @extend %layout;
}