@import url("https://fonts.googleapis.com/css2?family=Walter+Turncoat&family=Roboto+Condensed:ital,wght@0,100..900;1,100..900&family=Road+Rage&family=Material+Symbols+Outlined&display=swap");
:root, .sheet-rolltemplate-pcroll {
	--dryh-fg: #000000;
	--dryh-bg: #ffffff;
	--dryh-red: #910530;
	--dryh-shade: rgba(102, 0, 0, 0.1);
	--dryh-strike: rgba(153, 0, 0, 0.75);
	--dryh-intensered: #aa0530;
	font-family: Roboto Condensed, sans-serif;
}

.sheet-darkmode, .sheet-rolltemplate-pcroll.sheet-rolltemplate-darkmode {
	--dryh-fg: #ffffff;
	--dryh-bg: #1f1f1f;
	--dryh-red: #aa0530;
	--dryh-shade: rgba(255, 0, 0, 0.1);
	--dryh-strike: rgba(204, 0, 0, 0.75);
	--dryh-intensered: #ff0000;
}

.ui-dialog .charsheet {
	border: 1px solid var(--dryh-red);
	margin-top: -15px;
}

.wrapper p,
.ui-dialog .charsheet {
	font-family: Roboto Condensed, sans-serif;
	font-size: 18px;
	font-weight: 400;
	color: var(--dryh-fg) !important;
	background-color: var(--dryh-bg);
	line-height: unset;
}

.ui-dialog .charsheet input, .ui-dialog .charsheet select, .ui-dialog .charsheet textarea {
	font-family: Roboto Condensed, sans-serif;
	font-size: 18px;
	line-height: 1;
	color: var(--dryh-fg);
	background-color: var(--dryh-bg);
	border: none;
	padding-top: 0px;
	padding-bottom: 0px;
}

.ui-dialog .nav-tabs {
	border-bottom: 1px solid var(--dryh-red);
	margin-bottom: 14px;
}
.ui-dialog .nav-tabs > li.active > a, .ui-dialog .nav-tabs > li.active > a:hover, .ui-dialog .nav-tabs > li.active > a:focus {
	border-color: var(--dryh-red);
	border-bottom-color: transparent;
}
.ui-dialog .nav-tabs > li a:hover {
	color: white;
	background-color: var(--dryh-red);
	border-color: var(--dryh-red);
}

.sheet-darkmode .ui-dialog .nav-tabs > li a:hover {
	color: white;
	background-color: var(--dryh-red);
	border-color: var(--dryh-red);
}
.sheet-darkmode .ui-dialog .nav-tabs > li.active > a, .sheet-darkmode .ui-dialog .nav-tabs > li.active > a:hover, .sheet-darkmode .ui-dialog .nav-tabs > li.active > a:focus {
	color: var(--dryh-fg);
	text-decoration: none;
	background-color: var(--dryh-bg);
	border-color: var(--dryh-red);
	border-bottom-color: transparent;
}

* {
	scrollbar-width: auto;
	scrollbar-color: var(--dryh-red) var(--dryh-bg);
}

.sheet-darkmode * {
	scrollbar-width: auto;
	scrollbar-color: var(--dryh-red) var(--dryh-bg);
}

.btn, button {
	background-color: var(--dryh-bg);
	color: var(--dryh-fg);
	border: 1px solid var(--dryh-red);
	text-shadow: none;
	-webkit-box-shadow: none;
	        box-shadow: none;
	background-image: unset;
	font-family: "Roboto Condensed";
}
.btn.repcontrol_move, button.repcontrol_move {
	font-size: 16px;
}
.btn:hover, button:hover {
	background-color: var(--dryh-red);
	color: white;
}
.btn.pictos, button.pictos {
	font-family: "Pictos";
}

.c2 {
	width: 100%;
	display: -ms-grid;
	display: grid;
	-ms-grid-columns: 50% 50%;
	grid-template-columns: 50% 50%;
}

.span2 {
	-ms-grid-column-span: 2;
	grid-column: span 2;
}

.ui-dialog .charsheet input.tshower[value="1"] + *, .ui-dialog .charsheet input.tshower[value="2"] + *, .ui-dialog .charsheet input.shower:not([value=""]) + * {
	display: none;
}
.ui-dialog .charsheet input.thider[value="0"] + *, .ui-dialog .charsheet input.thider[value="2"] + *, .ui-dialog .charsheet input.hider[value=""] + *, .ui-dialog .charsheet input.mhider[value=""] + *, .ui-dialog .charsheet input.mhider[value=character] + *, .ui-dialog .charsheet input.mhider[value=nightmare] + * {
	display: none;
}
.ui-dialog .charsheet .wrapper .pc .rolling .choices .choice input.hider[value=""] + * {
	display: none;
}
.ui-dialog .charsheet input.tdimmer[value="0"] + * {
	opacity: 0.25;
}
.ui-dialog .charsheet input.mhider[value=character] + .pc, .ui-dialog .charsheet input.mhider[value=nightmare] + .gm {
	display: initial;
}
.ui-dialog .charsheet .hideif-0[value=""] + * {
	opacity: 0;
}
.ui-dialog .charsheet .hideif-0[value="0"] + * {
	opacity: 0;
}
.ui-dialog .charsheet .hideif-1[value="1"] + * {
	opacity: 0;
}
.ui-dialog .charsheet .hideif-2[value="2"] + * {
	opacity: 0;
}
.ui-dialog .charsheet .hideif-3[value="3"] + * {
	opacity: 0;
}
.ui-dialog .charsheet .hideif-4[value="4"] + * {
	opacity: 0;
}
.ui-dialog .charsheet .hideif-5[value="5"] + * {
	opacity: 0;
}
.ui-dialog .charsheet .hideif-6[value="6"] + * {
	opacity: 0;
}
.ui-dialog .charsheet .hideif-7[value="7"] + * {
	opacity: 0;
}
.ui-dialog .charsheet .hideif-8[value="8"] + * {
	opacity: 0;
}
.ui-dialog .charsheet .hideif-9[value="9"] + * {
	opacity: 0;
}
.ui-dialog .charsheet .hideif-10[value="10"] + * {
	opacity: 0;
}
.ui-dialog .charsheet .hideif-11[value="11"] + * {
	opacity: 0;
}
.ui-dialog .charsheet .hideif-12[value="12"] + * {
	opacity: 0;
}
.ui-dialog .charsheet .hideif-13[value="13"] + * {
	opacity: 0;
}
.ui-dialog .charsheet .hideif-14[value="14"] + * {
	opacity: 0;
}
.ui-dialog .charsheet .hideif-15[value="15"] + * {
	opacity: 0;
}
.ui-dialog .charsheet .hideif-16[value="16"] + * {
	opacity: 0;
}
.ui-dialog .charsheet .hideif-17[value="17"] + * {
	opacity: 0;
}
.ui-dialog .charsheet .hideif-18[value="18"] + * {
	opacity: 0;
}
.ui-dialog .charsheet .hideif-19[value="19"] + * {
	opacity: 0;
}
.ui-dialog .charsheet .hideif-20[value="20"] + * {
	opacity: 0;
}
.ui-dialog .charsheet input.tstriker[value="0"] + *, .ui-dialog .charsheet input.tstriker[value="1"] + * {
	display: none;
}
.ui-dialog .charsheet input.strike-if[value="2"] ~ .strikeout {
	text-decoration: line-through;
	text-decoration-color: var(--dryh-strike);
	text-decoration-thickness: 5px;
	text-decoration-style: solid;
}

.cbox {
	background: none;
	color: none;
	border: none;
	padding: 0px;
	margin-left: 0px;
	width: 22px;
	line-height: 1;
}
.cbox:hover {
	background: none;
}
.cbox:hover::before {
	color: var(--dryh-fg);
}
.cbox::before {
	font-family: "Material Symbols Outlined";
	font-weight: normal;
	font-style: normal;
	font-size: 26px;
	width: 22px;
	color: var(--dryh-red);
	display: inline-block;
	line-height: 1;
	text-transform: none;
	margin-left: -8px;
	padding-left: 0px;
	word-wrap: normal;
	white-space: nowrap;
	direction: ltr;
	padding: 0px;
	margin-left: 0px;
	margin-right: 0px;
}

.cbox::before {
	content: "check_box_outline_blank";
}

.cbox.marked::before {
	content: "dialogs";
}

.cbox.struck::before {
	content: "nfc_off";
}

.cbox.info::before {
	content: "info";
}

.cbox.info.marked::before {
	content: "cancel";
}

.ui-dialog .charsheet .wrapper .pc input[type=text], .ui-dialog .charsheet .wrapper .gm input[type=text] {
	border-bottom: 1px solid var(--dryh-red);
}
.ui-dialog .charsheet .wrapper .pc input[type=text]:hover, .ui-dialog .charsheet .wrapper .gm input[type=text]:hover {
	border-color: var(--dryh-fg);
}
.ui-dialog .charsheet .wrapper .pc textarea, .ui-dialog .charsheet .wrapper .gm textarea {
	border: 1px solid var(--dryh-red);
	width: calc(100% - 30px);
	margin-top: 6px;
}
.ui-dialog .charsheet .wrapper .pc textarea:hover, .ui-dialog .charsheet .wrapper .gm textarea:hover {
	border-color: var(--dryh-fg);
}
.ui-dialog .charsheet .wrapper .pc input[type=text], .ui-dialog .charsheet .wrapper .pc textarea, .ui-dialog .charsheet .wrapper .gm input[type=text], .ui-dialog .charsheet .wrapper .gm textarea {
	font-family: Walter Turncoat, serif;
}
.ui-dialog .charsheet .wrapper .pc .header, .ui-dialog .charsheet .wrapper .gm .header {
	font-size: 36px;
	font-family: Road Rage, sans-serif;
	font-weight: 400;
	font-style: normal;
	line-height: 1;
	margin-top: 0px;
}
.ui-dialog .charsheet .wrapper .pc .header.with-info, .ui-dialog .charsheet .wrapper .gm .header.with-info {
	display: -ms-grid;
	display: grid;
	-ms-grid-columns: auto 1fr;
	grid-template-columns: auto 1fr;
}
.ui-dialog .charsheet .wrapper .pc .header.with-info .outer, .ui-dialog .charsheet .wrapper .gm .header.with-info .outer {
	text-align: right;
	vertical-align: bottom;
	line-height: 1;
	-webkit-box-flex: 1;
	    -ms-flex-positive: 1;
	        flex-grow: 1;
	-ms-flex-negative: 0;
	    flex-shrink: 0;
}
.ui-dialog .charsheet .wrapper .pc .header.with-info .info, .ui-dialog .charsheet .wrapper .gm .header.with-info .info {
	margin-top: 4px;
}
.ui-dialog .charsheet .wrapper .pc .header.with-info .info::before, .ui-dialog .charsheet .wrapper .gm .header.with-info .info::before {
	font-size: 20px;
}
.ui-dialog .charsheet .wrapper .pc .smallnote, .ui-dialog .charsheet .wrapper .gm .smallnote {
	font-size: 18px;
	font-family: Roboto Condensed, sans-serif;
	line-height: 1;
}
.ui-dialog .charsheet .wrapper .pc .advisory, .ui-dialog .charsheet .wrapper .gm .advisory {
	font-family: Roboto Condensed, sans-serif;
	font-size: 15px;
	line-height: 1.2;
	padding: 6px;
	margin-left: 0px;
	margin-bottom: 3px;
	max-width: 100%;
	border: 1px solid var(--dryh-fg);
	color: white;
	background: var(--dryh-red);
	-webkit-box-shadow: 0px 0px 6px var(--dryh-red);
	        box-shadow: 0px 0px 6px var(--dryh-red);
	border-radius: 5px;
	-ms-grid-column-span: 2;
	grid-column: span 2;
}
.ui-dialog .charsheet .wrapper .dice .discipline, .ui-dialog .charsheet .wrapper .dice .header.discipline, .ui-dialog .charsheet .wrapper .dice .exhaustion, .ui-dialog .charsheet .wrapper .dice .header.exhaustion {
	background: var(--dryh-shade);
	padding: 6px;
	margin: -6px;
}
.ui-dialog .charsheet .wrapper .dice .header.discipline, .ui-dialog .charsheet .wrapper .dice .header.exhaustion {
	margin-right: 0px;
}
.ui-dialog .charsheet .wrapper .dice .header.exhaustion, .ui-dialog .charsheet .wrapper .dice .data.exhaustion {
	margin-top: 0px;
	height: 60px;
}
.ui-dialog .charsheet .wrapper .dice .header.madness {
	height: 60px;
}
.ui-dialog .charsheet .wrapper .dice .header.with-info {
	-ms-grid-columns: auto 3px 1fr;
	grid-template-columns: auto 1fr;
	grid-column-gap: 3px;
	line-height: 1;
}
.ui-dialog .charsheet .wrapper .dice .header.with-info > span {
	-ms-grid-column: 2;
	grid-column: 2;
	-ms-grid-row: 1;
	grid-row: 1;
}
.ui-dialog .charsheet .wrapper .dice .header.with-info .smallnote {
	-ms-grid-row: 2;
	grid-row: 2;
	-ms-grid-column: 2;
	grid-column: 2;
}
.ui-dialog .charsheet .wrapper .dice .header.with-info .outer {
	-ms-grid-column: 1;
	grid-column: 1;
	-ms-grid-row-span: 2;
	grid-row: span 2;
}
.ui-dialog .charsheet .wrapper .dice .header.with-info .info {
	margin-top: 4px;
}
.ui-dialog .charsheet .wrapper .dice {
	border: 1px solid var(--dryh-red);
	padding: 6px;
	margin-right: 18px;
	display: -ms-grid;
	display: grid;
	-ms-grid-columns: auto 6px 1fr;
	grid-template-columns: auto 1fr;
	gap: 6px;
	grid-gap-row: 0px;
}
.ui-dialog .charsheet .wrapper .dice .data {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-orient: horizontal;
	-webkit-box-direction: normal;
	    -ms-flex-direction: row;
	        flex-direction: row;
	-webkit-box-align: center;
	    -ms-flex-align: center;
	        align-items: center;
	height: 100%;
}
.ui-dialog .charsheet .wrapper .dice .data select {
	width: auto;
	padding: 0px;
	border: 1px solid var(--dryh-red);
	font-size: 14px;
	line-height: 1;
}
.ui-dialog .charsheet .wrapper .dice .data input.selert + select {
	color: var(--dryh-red);
}
.ui-dialog .charsheet .wrapper .dice .data input.selert[value="1"] + select, .ui-dialog .charsheet .wrapper .dice .data input.selert[value="2"] + select {
	border: 1px solid var(--dryh-fg);
	background: var(--dryh-bg);
	color: var(--dryh-fg);
}
.ui-dialog .charsheet .wrapper .dice .data select:hover, .ui-dialog .charsheet .wrapper .dice .data input.selert + select:hover {
	border: 1px solid var(--dryh-fg);
	background: var(--dryh-red);
	color: white;
}
.ui-dialog .charsheet .wrapper .dice .data .micro {
	margin-top: 0px;
	margin-bottom: 0px;
	line-height: 14px;
}
.ui-dialog .charsheet .wrapper .dice .data .micro select {
	margin-bottom: 0px;
}
.ui-dialog .charsheet .wrapper .dice .madness .d6 {
	color: var(--dryh-red);
}
.ui-dialog .charsheet .wrapper .dice .header {
	margin: 0px;
	text-align: right;
}
.ui-dialog .charsheet .wrapper .dice .die {
	font-size: 36px;
	line-height: 1;
}
.ui-dialog .charsheet .wrapper .dice .number {
	font-family: Walter Turncoat, serif;
	font-size: 24px;
	margin-left: 4px;
	margin-right: -2px;
	width: 16px;
	text-align: center;
}
.ui-dialog .charsheet .wrapper .dice .number.pain {
	width: 32px;
}
.ui-dialog .charsheet .wrapper .dice .controls {
	height: 100%;
	padding-right: 6px;
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-orient: horizontal;
	-webkit-box-direction: normal;
	    -ms-flex-direction: row;
	        flex-direction: row;
	-ms-flex-wrap: nowrap;
	    flex-wrap: nowrap;
	-webkit-box-align: center;
	    -ms-flex-align: center;
	        align-items: center;
	-webkit-column-gap: 0px;
	   -moz-column-gap: 0px;
	        column-gap: 0px;
}
.ui-dialog .charsheet .wrapper .dice .controls button {
	font-size: 20px;
	line-height: 1;
	height: 24px;
	width: 18px;
	border: none;
	color: var(--dryh-red);
	background: transparent;
	font-family: "Material Symbols Outlined";
	padding: 0px;
	margin-left: 6px;
}
.ui-dialog .charsheet .wrapper .dice .controls button:hover {
	color: var(--dryh-fg);
}
.ui-dialog .charsheet .wrapper .dice .additional {
	height: 100%;
}
.ui-dialog .charsheet .wrapper .dice .additional button[name=act_pcroll] {
	margin-left: 6px;
}
.ui-dialog .charsheet .wrapper .dice .data.additional .madness {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-orient: horizontal;
	-webkit-box-direction: normal;
	    -ms-flex-direction: row;
	        flex-direction: row;
	-webkit-box-align: center;
	    -ms-flex-align: center;
	        align-items: center;
}
.ui-dialog .charsheet .wrapper .dice .data.additional .madness .controls {
	height: 100%;
}
.ui-dialog .charsheet .wrapper .dice .data.additional .madness .die {
	font-size: 24px;
	line-height: 1;
}
.ui-dialog .charsheet .wrapper .dice .roller {
	text-align: right;
	-webkit-box-pack: end;
	    -ms-flex-pack: end;
	        justify-content: flex-end;
}
.ui-dialog .charsheet .wrapper .dice .d6 {
	font-family: dicefontd6;
}
.ui-dialog .charsheet .wrapper input.d6display ~ .d6 {
	display: none;
}
.ui-dialog .charsheet .wrapper input.d6display[value="1"] + .d6 {
	display: initial;
	/* when the value is 1 and 1 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="2"] + .d6 {
	display: initial;
	/* when the value is 2 and 1 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="2"] + .d6 + .d6 {
	display: initial;
	/* when the value is 2 and 2 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="3"] + .d6 {
	display: initial;
	/* when the value is 3 and 1 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="3"] + .d6 + .d6 {
	display: initial;
	/* when the value is 3 and 2 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="3"] + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 3 and 3 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="4"] + .d6 {
	display: initial;
	/* when the value is 4 and 1 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="4"] + .d6 + .d6 {
	display: initial;
	/* when the value is 4 and 2 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="4"] + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 4 and 3 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="4"] + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 4 and 4 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="5"] + .d6 {
	display: initial;
	/* when the value is 5 and 1 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="5"] + .d6 + .d6 {
	display: initial;
	/* when the value is 5 and 2 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="5"] + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 5 and 3 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="5"] + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 5 and 4 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="5"] + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 5 and 5 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="6"] + .d6 {
	display: initial;
	/* when the value is 6 and 1 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="6"] + .d6 + .d6 {
	display: initial;
	/* when the value is 6 and 2 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="6"] + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 6 and 3 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="6"] + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 6 and 4 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="6"] + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 6 and 5 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="6"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 6 and 6 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="7"] + .d6 {
	display: initial;
	/* when the value is 7 and 1 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="7"] + .d6 + .d6 {
	display: initial;
	/* when the value is 7 and 2 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="7"] + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 7 and 3 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="7"] + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 7 and 4 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="7"] + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 7 and 5 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="7"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 7 and 6 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="7"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 7 and 7 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="8"] + .d6 {
	display: initial;
	/* when the value is 8 and 1 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="8"] + .d6 + .d6 {
	display: initial;
	/* when the value is 8 and 2 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="8"] + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 8 and 3 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="8"] + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 8 and 4 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="8"] + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 8 and 5 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="8"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 8 and 6 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="8"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 8 and 7 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="8"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 8 and 8 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="9"] + .d6 {
	display: initial;
	/* when the value is 9 and 1 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="9"] + .d6 + .d6 {
	display: initial;
	/* when the value is 9 and 2 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="9"] + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 9 and 3 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="9"] + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 9 and 4 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="9"] + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 9 and 5 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="9"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 9 and 6 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="9"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 9 and 7 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="9"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 9 and 8 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="9"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 9 and 9 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="10"] + .d6 {
	display: initial;
	/* when the value is 10 and 1 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="10"] + .d6 + .d6 {
	display: initial;
	/* when the value is 10 and 2 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="10"] + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 10 and 3 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="10"] + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 10 and 4 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="10"] + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 10 and 5 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="10"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 10 and 6 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="10"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 10 and 7 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="10"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 10 and 8 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="10"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 10 and 9 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="10"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 10 and 10 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="11"] + .d6 {
	display: initial;
	/* when the value is 11 and 1 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="11"] + .d6 + .d6 {
	display: initial;
	/* when the value is 11 and 2 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="11"] + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 11 and 3 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="11"] + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 11 and 4 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="11"] + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 11 and 5 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="11"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 11 and 6 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="11"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 11 and 7 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="11"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 11 and 8 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="11"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 11 and 9 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="11"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 11 and 10 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="11"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 11 and 11 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="12"] + .d6 {
	display: initial;
	/* when the value is 12 and 1 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="12"] + .d6 + .d6 {
	display: initial;
	/* when the value is 12 and 2 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="12"] + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 12 and 3 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="12"] + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 12 and 4 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="12"] + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 12 and 5 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="12"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 12 and 6 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="12"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 12 and 7 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="12"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 12 and 8 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="12"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 12 and 9 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="12"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 12 and 10 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="12"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 12 and 11 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="12"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 12 and 12 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="13"] + .d6 {
	display: initial;
	/* when the value is 13 and 1 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="13"] + .d6 + .d6 {
	display: initial;
	/* when the value is 13 and 2 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="13"] + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 13 and 3 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="13"] + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 13 and 4 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="13"] + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 13 and 5 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="13"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 13 and 6 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="13"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 13 and 7 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="13"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 13 and 8 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="13"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 13 and 9 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="13"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 13 and 10 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="13"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 13 and 11 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="13"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 13 and 12 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="13"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 13 and 13 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="14"] + .d6 {
	display: initial;
	/* when the value is 14 and 1 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="14"] + .d6 + .d6 {
	display: initial;
	/* when the value is 14 and 2 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="14"] + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 14 and 3 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="14"] + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 14 and 4 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="14"] + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 14 and 5 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="14"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 14 and 6 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="14"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 14 and 7 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="14"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 14 and 8 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="14"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 14 and 9 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="14"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 14 and 10 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="14"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 14 and 11 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="14"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 14 and 12 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="14"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 14 and 13 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="14"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 14 and 14 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="15"] + .d6 {
	display: initial;
	/* when the value is 15 and 1 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="15"] + .d6 + .d6 {
	display: initial;
	/* when the value is 15 and 2 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="15"] + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 15 and 3 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="15"] + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 15 and 4 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="15"] + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 15 and 5 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="15"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 15 and 6 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="15"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 15 and 7 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="15"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 15 and 8 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="15"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 15 and 9 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="15"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 15 and 10 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="15"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 15 and 11 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="15"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 15 and 12 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="15"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 15 and 13 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="15"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 15 and 14 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="15"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 15 and 15 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="16"] + .d6 {
	display: initial;
	/* when the value is 16 and 1 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="16"] + .d6 + .d6 {
	display: initial;
	/* when the value is 16 and 2 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="16"] + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 16 and 3 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="16"] + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 16 and 4 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="16"] + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 16 and 5 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="16"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 16 and 6 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="16"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 16 and 7 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="16"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 16 and 8 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="16"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 16 and 9 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="16"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 16 and 10 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="16"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 16 and 11 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="16"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 16 and 12 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="16"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 16 and 13 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="16"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 16 and 14 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="16"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 16 and 15 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="16"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 16 and 16 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="17"] + .d6 {
	display: initial;
	/* when the value is 17 and 1 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="17"] + .d6 + .d6 {
	display: initial;
	/* when the value is 17 and 2 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="17"] + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 17 and 3 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="17"] + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 17 and 4 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="17"] + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 17 and 5 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="17"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 17 and 6 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="17"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 17 and 7 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="17"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 17 and 8 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="17"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 17 and 9 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="17"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 17 and 10 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="17"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 17 and 11 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="17"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 17 and 12 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="17"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 17 and 13 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="17"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 17 and 14 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="17"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 17 and 15 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="17"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 17 and 16 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="17"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 17 and 17 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="18"] + .d6 {
	display: initial;
	/* when the value is 18 and 1 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="18"] + .d6 + .d6 {
	display: initial;
	/* when the value is 18 and 2 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="18"] + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 18 and 3 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="18"] + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 18 and 4 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="18"] + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 18 and 5 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="18"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 18 and 6 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="18"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 18 and 7 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="18"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 18 and 8 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="18"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 18 and 9 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="18"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 18 and 10 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="18"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 18 and 11 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="18"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 18 and 12 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="18"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 18 and 13 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="18"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 18 and 14 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="18"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 18 and 15 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="18"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 18 and 16 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="18"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 18 and 17 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="18"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 18 and 18 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="19"] + .d6 {
	display: initial;
	/* when the value is 19 and 1 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="19"] + .d6 + .d6 {
	display: initial;
	/* when the value is 19 and 2 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="19"] + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 19 and 3 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="19"] + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 19 and 4 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="19"] + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 19 and 5 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="19"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 19 and 6 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="19"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 19 and 7 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="19"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 19 and 8 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="19"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 19 and 9 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="19"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 19 and 10 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="19"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 19 and 11 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="19"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 19 and 12 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="19"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 19 and 13 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="19"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 19 and 14 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="19"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 19 and 15 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="19"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 19 and 16 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="19"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 19 and 17 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="19"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 19 and 18 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="19"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 19 and 19 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="20"] + .d6 {
	display: initial;
	/* when the value is 20 and 1 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="20"] + .d6 + .d6 {
	display: initial;
	/* when the value is 20 and 2 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="20"] + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 20 and 3 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="20"] + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 20 and 4 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="20"] + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 20 and 5 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="20"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 20 and 6 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="20"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 20 and 7 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="20"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 20 and 8 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="20"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 20 and 9 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="20"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 20 and 10 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="20"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 20 and 11 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="20"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 20 and 12 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="20"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 20 and 13 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="20"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 20 and 14 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="20"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 20 and 15 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="20"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 20 and 16 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="20"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 20 and 17 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="20"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 20 and 18 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="20"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 20 and 19 */
}
.ui-dialog .charsheet .wrapper input.d6display[value="20"] + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 + .d6 {
	display: initial;
	/* when the value is 20 and 20 */
}

.ui-dialog .charsheet .wrapper .gm .buttonbox {
	padding: 6px;
	text-align: center;
}
.ui-dialog .charsheet .wrapper .gm .coins {
	display: -ms-grid;
	display: grid;
	-ms-grid-columns: 1fr 12px auto 12px auto;
	grid-template-columns: 1fr auto auto;
	grid-column-gap: 12px;
}
.ui-dialog .charsheet .wrapper .gm .coins .coin {
	text-align: center;
}
.ui-dialog .charsheet .wrapper .gm .coins .coin input[type=number] {
	font-family: Walter Turncoat, serif;
	font-size: 48px;
	width: auto;
	text-align: center;
	margin-left: 18px;
}
.ui-dialog .charsheet .wrapper .gm .nightmare-grid {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-orient: vertical;
	-webkit-box-direction: reverse;
	    -ms-flex-flow: column-reverse;
	        flex-flow: column-reverse;
}
.ui-dialog .charsheet .wrapper .gm .nightmare-entry {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-orient: vertical;
	-webkit-box-direction: normal;
	    -ms-flex-flow: column;
	        flex-flow: column;
	height: 100%;
}
.ui-dialog .charsheet .wrapper .gm .nightmare-entry textarea {
	-ms-flex-negative: 0;
	    flex-shrink: 0;
	-webkit-box-flex: 1;
	    -ms-flex-positive: 1;
	        flex-grow: 1;
	margin-bottom: 0px;
}
.ui-dialog .charsheet .wrapper .gm .nightmare-grid .repcontainer {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-orient: horizontal;
	-webkit-box-direction: reverse;
	    -ms-flex-flow: row-reverse;
	        flex-flow: row-reverse;
	-ms-flex-wrap: wrap-reverse;
	    flex-wrap: wrap-reverse;
	width: 100%;
	gap: 12px;
	margin-top: 6px;
	-webkit-box-pack: center;
	    -ms-flex-pack: center;
	        justify-content: center;
}
.ui-dialog .charsheet .wrapper .gm .nightmare-grid .repcontainer .repitem {
	border: 1px solid var(--dryh-red);
	-webkit-box-flex: 0;
	    -ms-flex-positive: 0;
	        flex-grow: 0;
	-ms-flex-negative: 0;
	    flex-shrink: 0;
	width: calc(33% - 6px);
	padding: 6px;
	background: var(--dryh-bg);
	-webkit-box-shadow: 1px 1px 4px var(--dryh-red);
	        box-shadow: 1px 1px 4px var(--dryh-red);
}
.ui-dialog .charsheet .wrapper .gm .nightmare-grid .repcontainer textarea {
	font-family: Roboto Condensed, sans-serif;
	border-color: var(--dryh-shade);
	line-height: 1.2;
	width: calc(100% - 12px);
}
.ui-dialog .charsheet .wrapper .gm .nightmare-grid .repcontainer input[type=text] {
	font-family: Roboto Condensed, sans-serif;
	font-weight: 900;
	width: calc(100% - 6px);
}
.ui-dialog .charsheet .wrapper .gm .dice.pain .d6 {
	color: var(--dryh-intensered);
	font-size: 30px;
}
.ui-dialog .charsheet .wrapper .gm .dice {
	width: calc(100% - 16px);
	margin-top: 3px;
	border: unset;
}
.ui-dialog .charsheet .wrapper .gm .alldice {
	display: -ms-grid;
	display: grid;
	-ms-grid-columns: 1fr 1fr 1fr 1fr 1fr 1fr;
	grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;
}
.ui-dialog .charsheet .wrapper .gm .alldice button {
	-ms-grid-column-span: 3;
	grid-column: span 3;
	height: 17px;
	margin-top: 5.5px;
	margin-right: 3px;
	margin-left: 1px;
	border-radius: 2px;
}
.ui-dialog .charsheet .wrapper .gm .controls {
	height: auto;
}
.ui-dialog .charsheet .wrapper .gm .conhead {
	text-align: center;
	font-family: Road Rage, sans-serif;
	font-size: 30px;
	line-height: 1;
	height: 24px;
}

.ui-dialog .charsheet .wrapper .pc > .name {
	font-size: 48px;
	line-height: 48px;
	height: 54px;
	font-family: Road Rage, sans-serif;
	font-weight: 400;
	font-style: normal;
	margin-bottom: -6px;
}
.ui-dialog .charsheet .wrapper .pc .description {
	margin-bottom: 6px;
}
.ui-dialog .charsheet .wrapper .pc .description input[type=text] {
	width: 100%;
	padding: 0px;
	margin-bottom: 0px;
}
.ui-dialog .charsheet .wrapper .pc .talents > .header {
	margin-top: 12px;
}
.ui-dialog .charsheet .wrapper .pc .talent .header {
	margin-top: 0px;
	font-size: 27px;
	line-height: 30px;
}
.ui-dialog .charsheet .wrapper .pc .talent .header.with-info {
	margin-right: 18px;
}
.ui-dialog .charsheet .wrapper .pc .talent textarea {
	line-height: 1.2;
	height: 90px;
}
.ui-dialog .charsheet .wrapper .pc .response {
	min-height: 36px;
	margin-bottom: 6px;
	line-height: 1;
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-orient: horizontal;
	-webkit-box-direction: normal;
	    -ms-flex-direction: row;
	        flex-direction: row;
	gap: 6px;
	-webkit-box-align: center;
	    -ms-flex-align: center;
	        align-items: center;
}
.ui-dialog .charsheet .wrapper .pc .response select {
	height: 28px;
	margin-bottom: 0px;
	padding: 0px;
	width: auto;
	font-family: Walter Turncoat, serif;
	border: 1px solid var(--dryh-red);
}
.ui-dialog .charsheet .wrapper .pc .response select:hover {
	border-color: var(--dryh-fg);
	background-color: var(--dryh-red);
	color: white;
}
.ui-dialog .charsheet .wrapper .pc .response .flight {
	font-family: Walter Turncoat, serif;
	font-size: 16px;
}
.ui-dialog .charsheet .wrapper .pc .response .rindicate ~ .flight {
	display: none;
}
.ui-dialog .charsheet .wrapper .pc .response .rindicate[value=flight] ~ .flight {
	display: initial;
}
.ui-dialog .charsheet .wrapper .pc .response .ractivate ~ .flight {
	color: var(--dryh-red);
}
.ui-dialog .charsheet .wrapper .pc .response .ractivate[value="1"] ~ .flight b {
	color: var(--dryh-fg);
}
.ui-dialog .charsheet .wrapper .pc .response .fight {
	font-family: Walter Turncoat, serif;
	font-size: 16px;
}
.ui-dialog .charsheet .wrapper .pc .response .rindicate ~ .fight {
	display: none;
}
.ui-dialog .charsheet .wrapper .pc .response .rindicate[value=fight] ~ .fight {
	display: initial;
}
.ui-dialog .charsheet .wrapper .pc .response .ractivate ~ .fight {
	color: var(--dryh-red);
}
.ui-dialog .charsheet .wrapper .pc .response .ractivate[value="1"] ~ .fight b {
	color: var(--dryh-fg);
}
.ui-dialog .charsheet .wrapper .pc .response .freeze {
	font-family: Walter Turncoat, serif;
	font-size: 16px;
}
.ui-dialog .charsheet .wrapper .pc .response .rindicate ~ .freeze {
	display: none;
}
.ui-dialog .charsheet .wrapper .pc .response .rindicate[value=freeze] ~ .freeze {
	display: initial;
}
.ui-dialog .charsheet .wrapper .pc .response .ractivate ~ .freeze {
	color: var(--dryh-red);
}
.ui-dialog .charsheet .wrapper .pc .response .ractivate[value="1"] ~ .freeze b {
	color: var(--dryh-fg);
}
.ui-dialog .charsheet .wrapper .pc .response .fawn {
	font-family: Walter Turncoat, serif;
	font-size: 16px;
}
.ui-dialog .charsheet .wrapper .pc .response .rindicate ~ .fawn {
	display: none;
}
.ui-dialog .charsheet .wrapper .pc .response .rindicate[value=fawn] ~ .fawn {
	display: initial;
}
.ui-dialog .charsheet .wrapper .pc .response .ractivate ~ .fawn {
	color: var(--dryh-red);
}
.ui-dialog .charsheet .wrapper .pc .response .ractivate[value="1"] ~ .fawn b {
	color: var(--dryh-fg);
}
.ui-dialog .charsheet .wrapper .pc .response .feast {
	font-family: Walter Turncoat, serif;
	font-size: 16px;
}
.ui-dialog .charsheet .wrapper .pc .response .rindicate ~ .feast {
	display: none;
}
.ui-dialog .charsheet .wrapper .pc .response .rindicate[value=feast] ~ .feast {
	display: initial;
}
.ui-dialog .charsheet .wrapper .pc .response .ractivate ~ .feast {
	color: var(--dryh-red);
}
.ui-dialog .charsheet .wrapper .pc .response .ractivate[value="1"] ~ .feast b {
	color: var(--dryh-fg);
}
.ui-dialog .charsheet .wrapper .pc .scar {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-orient: horizontal;
	-webkit-box-direction: normal;
	    -ms-flex-direction: row;
	        flex-direction: row;
	gap: 6px;
	margin-bottom: 6px;
	-webkit-box-align: start;
	    -ms-flex-align: start;
	        align-items: flex-start;
}
.ui-dialog .charsheet .wrapper .pc .scar input[type=text] {
	-webkit-box-flex: 1;
	    -ms-flex-positive: 1;
	        flex-grow: 1;
	padding-top: 0px;
	height: 28px;
	line-height: 1;
	margin-top: 0px;
	margin-bottom: 0px;
}
.ui-dialog .charsheet .wrapper .pc .scar .cbox::before {
	padding: 0px;
	margin: 0px;
	margin-bottom: -6px;
	line-height: 1;
}
.ui-dialog .charsheet .wrapper .pc .question input[type=text] {
	width: 100%;
	font-family: Roboto Condensed, sans-serif;
}
.ui-dialog .charsheet .wrapper .pc .question textarea {
	width: calc(100% - 6px);
	height: 60px;
}

.sheet-rolltemplate-pcroll .sheet-rollbox {
	margin-bottom: 6px;
	font-family: Walter Turncoat, serif;
	font-size: 16px;
	line-height: 1.2;
	background: var(--dryh-bg);
	color: var(--dryh-fg);
	border: 1px solid var(--dryh-red);
	padding: 6px;
	-webkit-box-shadow: 2px 2px 2px black, -1px -1px 2px white;
	        box-shadow: 2px 2px 2px black, -1px -1px 2px white;
}
.sheet-rolltemplate-pcroll .sheet-pained + .sheet-rollbox {
	border: 1px solid var(--dryh-fg);
}
.sheet-rolltemplate-pcroll .sheet-pained + .sheet-rollbox .sheet-nameblock {
	background: black;
	margin-left: -6px;
	margin-right: -6px;
}
.sheet-rolltemplate-pcroll .sheet-pained + .sheet-rollbox .sheet-dominated + .sheet-result, .sheet-rolltemplate-pcroll .sheet-pained + .sheet-rollbox .sheet-effect {
	border-color: var(--dryh-fg);
}
.sheet-rolltemplate-pcroll .sheet-tag {
	padding-right: 6px;
}
.sheet-rolltemplate-pcroll .sheet-nameblock {
	font-family: Roboto Condensed, sans-serif;
	line-height: 1.2;
	font-size: 24px;
	font-weight: 900;
	background: var(--dryh-red);
	color: white;
	margin-left: -7px;
	padding-left: 6px;
	margin-right: -7px;
	padding-right: 6px;
	margin-top: -6px;
}
.sheet-rolltemplate-pcroll .sheet-dominated + .sheet-result, .sheet-rolltemplate-pcroll .sheet-effect {
	background: var(--dryh-bg);
	-webkit-box-shadow: 2px 2px 2px black, -1px -1px 2px white;
	        box-shadow: 2px 2px 2px black, -1px -1px 2px white;
	border: 1px solid var(--dryh-red);
	margin-right: -14px;
	padding-right: 13px;
	margin-left: -14px;
	padding-left: 13px;
	padding-bottom: 3px;
	padding-top: 3px;
}
.sheet-rolltemplate-pcroll .sheet-result {
	display: -ms-grid;
	display: grid;
	-ms-grid-columns: 110px 1fr;
	grid-template-columns: 110px 1fr;
	min-height: 24px;
	margin-top: 6px;
}
.sheet-rolltemplate-pcroll .sheet-success {
	font-size: 200%;
}
.sheet-rolltemplate-pcroll .sheet-success-result {
	display: -ms-grid;
	display: grid;
	-ms-grid-columns: auto 6px auto;
	grid-template-columns: auto auto;
	grid-column-gap: 6px;
	line-height: 1;
}
.sheet-rolltemplate-pcroll .sheet-data {
	display: -ms-grid;
	display: grid;
	-ms-grid-columns: 1fr 1fr 1fr 1fr 1fr;
	grid-template-columns: 1fr 1fr 1fr 1fr 1fr;
}
.sheet-rolltemplate-pcroll .sheet-d6 {
	font-family: dicefontd6;
	font-size: 30px;
	line-height: 1;
}
.sheet-rolltemplate-pcroll .sheet-d6.sheet-madness {
	color: var(--dryh-red);
}
.sheet-rolltemplate-pcroll .sheet-d6.sheet-pain {
	color: var(--dryh-intensered);
}
.sheet-rolltemplate-pcroll .sheet-effect {
	margin-top: 6px;
	font-family: Roboto Condensed, sans-serif;
	font-size: 13.5px;
}
.sheet-rolltemplate-pcroll .sheet-effect .sheet-preamble {
	font-weight: 900;
}
.sheet-rolltemplate-pcroll .sheet-effect .sheet-attention {
	font-weight: 900;
	font-style: italic;
}
.sheet-rolltemplate-pcroll .sheet-effect .sheet-action {
	font-weight: 400;
}
.sheet-rolltemplate-pcroll .sheet-effect .sheet-advisory {
	margin-left: -13px;
	padding-left: 12px;
	margin-right: -13px;
	padding-right: 12px;
}
.sheet-rolltemplate-pcroll .sheet-handwritten, .sheet-rolltemplate-pcroll .sheet-advisory.sheet-handwritten {
	font-family: Walter Turncoat, serif;
}
.sheet-rolltemplate-pcroll div.sheet-handwritten {
	padding-top: 6px;
}
.sheet-rolltemplate-pcroll .sheet-advisory {
	text-indent: -1em;
	margin-top: 3px;
	padding-top: 9px;
	margin-bottom: -6px;
	padding-bottom: 6px;
	font-family: Roboto Condensed, sans-serif;
	font-size: 13.5px;
	background: var(--dryh-shade);
	margin-left: -7px;
	padding-left: calc(6px + 1em);
	margin-right: -7px;
	padding-right: 6px;
}
.sheet-rolltemplate-pcroll .sheet-degree {
	margin-top: -6px;
	padding-top: 6px;
	padding-bottom: 6px;
	background: var(--dryh-shade);
	margin-left: -7px;
	padding-left: 6px;
	margin-right: -7px;
	padding-right: 6px;
}