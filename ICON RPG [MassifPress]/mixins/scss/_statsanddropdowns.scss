@use 'mixins/scss/_mixinsandplaceholders';

.input-label {
  width: auto;
}

label.input-label .numb-label {
  width: 80px;
}

input.action-label {
  width: 50% !important;
}

input.burden {
  width: 98% !important;
  text-align: center;
  align-items: center;
}

div.chapter-select {
  width: 90px !important;
  // position: relative;
  // top: 2px;
}

select.chapter-select {
  background-color: var(--backColor);
  font-family: var(--serifFont);
  position: relative;
  top: 3px;
  height: 26px;
}

input.burden-penalty {
  position: relative;
  left: -22%;
  min-width: 66px !important;
  text-align: left;
  align-items: left;
}

p.burden-penalty {
  position:relative;
  left: -5%;
  top: 8px;
}

input[type="text"].power {
  width: 120% !important;
  min-width: 120px;
}

span.dust {
  color: var(--orange) !important;
  padding: 5px !important;
}

input.dust {
  height: 40px !important;
  width: 100% !important;
  font-size: 1.4rem !important;
  color: var(--fontColor) !important;
  text-shadow: 0 0 2px var(--orange);
  &.ability-info {
    height: 26px !important;
    font-size: 1rem !important;
  }
}

span.xp {
  color: var(--purple) !important;
  padding: 5px !important;
}

input.xp {
  height: 40px !important;
  width: 100% !important;
  font-size: 1.4rem !important;
  color: var(--fontColor) !important;
  text-shadow: 0 0 2px var(--purple);
}

.color-receiver {
  background-color: var(--magenta);
  // fallback color, for if the hidden 'color-control' input is not placed before the selector
}

select.color-receiver {
  color: var(--white) !important;
  border-radius: 0px !important;
}

.color-control[value=general], .color-control[value=unique], .color-control[value=custom] {
  &~ .color-receiver {
  background-color: var(--purple) !important;
  }
}
.color-control[value=stalwart], .color-control[value=heavy] {
  &~ .color-receiver {
  background-color: var(--red) !important;
  }
}
.color-control[value=vagabond], .color-control[value=skirmisher] {
  &~ .color-receiver {
  background-color: var(--yellow) !important;
  }
}
.color-control[value=mendicant], .color-control[value=leader] {
  &~ .color-receiver {
  background-color: var(--green) !important;
  }
}
.color-control[value=wright], .color-control[value=artillery] {
  &~ .color-receiver {
  background-color: var(--blue) !important;
  }
}
.color-control[value=npc], .color-control[value=mob], .color-control[value=inactive], .color-control[value=unequipped] {
  &~ .color-receiver {
    background-color: var(--grey) !important;
  }
}

input.bloodied-receiver {
  color: var(--green-dk);
}

.bloodied-control[value='1'] ~ input.bloodied-receiver {
  color: var(--red-dk);
  text-shadow: 0 0 1px var(--red), 0 0 1px var(--red);
  &.bloodied-receiver[value='0'] {
    background-color: var(--grey-dk) !important;
  }
}

select.damage-die, select.type  {
  width: 50%;
}

.job-h1-receiver {
  height:39px !important;
  width:100% !important;
  border-radius:0% !important;
  color:white !important;
  &::placeholder {
    text-shadow: 0 0 2px white, 0 0 2px white;
  }
}

div.wealth {
  height: auto;
  & > input.wealth {
    height: 30px;
    // min-width: 200px !important;
    width: 100% !important;
    text-overflow: ellipsis;
  }
}

input.ability-info {
  width: 32% !important;
  text-overflow: ellipsis;
}

select.type {
  margin-bottom: 0px;
  font-size: 1.1rem;
}