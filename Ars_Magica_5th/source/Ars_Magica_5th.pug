include k-scaffold
//- Object used to store the whole system, must be defined first
//- To clarify difference between sheet code and pug code, we use the
//- arm5.pug namespace for code that runs during sheet generation, and
//- arm5.sheet namespace for code that runs during sheet loading in the VTT
- const arm5 = {};


include helpers/_helpers.pug
include elements/_elements.pug

- k.version = "2.0";

//- We are now ready to create the sheet
include updates/_updates.pug
//- include legacy/_alerts.pug

//- +alert({name: "test-info"})
//-     | This is a test alert with level info

//- +alert({name: "test-warning", level: "warning"})
//-     | This is a test alert with level warning

//- include tabs/tabs.pug


.kscaffold-compatible.global-alerts
    +alerts({name:"global-alerts", closeTrigger: {triggeredFuncs: ["onAlertRemoved"]}})

.arm5-sheet
    include header/_header.pug
    include legacy/_legacy.pug

<!-- Sheet Worker Scripts -->
+kscript
    | k.debugMode = true;
    | k.sheetName = "ArM5";
    | k.version = "2.0";
    | 
    | // k-scaffold fix ?
    | const persistentTabs = [];
    //- object used to store the whole system, must be defined first
    //- To clarify difference between sheet code and pug code, we use the
    //- arm5.pug namespace for code that runs during sheet generation, and
    //- arm5.sheet namespace for code that runs during sheet loading in the VTT
    |
    | // Top-level object for the sheetworkers
    | const arm5 = {sheet: {}};
    |
    //- Legacy sheetworkers
    | // Legacy sheetworkers
    | 
    include legacy/legacy.js
    |
