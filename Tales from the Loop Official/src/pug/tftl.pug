each number in [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]
    - 
        const reroll = [
            `&{template:tftl}`,
            `{{name=Reroll}}`,
            `{{character_name=@{character_name}}}`,
            `{{reroll_dice=${number}}}`,
            `{{pool_size=[[${number}+0]]}}`,
            `{{roll=[[${number}d6>6]]}}`,
            ].join(" ");
    button.sheet-hidden(name=`roll_reroll${number}`, type="roll", value=reroll)
- 
    const reroll1 = [
        `&{template:tftl}`,
        `{{name=Reroll}}`,
        `{{character_name=@{character_name}}}`,
        `{{reroll_dice=1}}`,
        `{{pool_size=[[1]]}}`,
        `{{roll=[[1d6>6]]}}`,
        ].join(" ");
button.sheet-hidden(name=`roll_rerollonly1`, type="roll", value=reroll1)
input(data-i18n-value="Reroll", name="attr_translation_luck", type="hidden", value="Reroll")

input(name="attr_sheet_version", type="hidden", value="1")

.tftl-wrapper
    .tftl-logo
        img(src="https://s3.amazonaws.com/files.d20.io/images/134821648/zsgtTwHGN6Ooki4IZQtc6g/max.png?1589569230")
    .tftl-leftcol
        .tftl-attributes.tftl-panel--alternate
            .tftl-panel__header(data-i18n="Attributes", class=`background-rand-${Math.floor(Math.random() * 10)+1}`) Attributes
            each attribute in ["Body","Tech","Heart","Mind"]
                -
                    const button_array = []
                    for (let i=0; i < 16; i++) button_array[i] = `{{reroll${i}=[@{translation_luck}](~@{character_id}|reroll[[@{${attribute.toLowerCase()}}+?{Bonus Dice|0}-@{upset}-@{scared}-@{exhausted}-@{injured}-@{broken}-${i}]])}}`;  
                    const roll = [...[
                        `&{template:tftl}`,
                        `{{name=${attribute}}}`,
                        `{{character_name=@{character_name}}}`,
                        `{{roll=[[[[@{${attribute.toLowerCase()}}+?{Bonus Dice|0}-@{upset}-@{scared}-@{exhausted}-@{injured}-@{broken}]]d6>6]]}}`,
                        `{{pool_size=[[@{${attribute.toLowerCase()}}+?{Bonus Dice|0}-@{upset}-@{scared}-@{exhausted}-@{injured}-@{broken}]]}}`,
                        `{{min1=[[1d6>6]]}}`,
                        `{{stat_value=@{${attribute.toLowerCase()}}}}`,
                        `{{stat_title=${attribute.toLowerCase()}}}`,
                        `{{bonus_dice=?{Bonus Dice|0}}}`,
                        `{{upset=[[@{upset}]]}}`,
                        `{{scared=[[@{scared}]]}}`,
                        `{{exhausted=[[@{exhausted}]]}}`,
                        `{{injured=[[@{injured}]]}}`,
                        `{{broken=[[@{broken}]]}}`,
                        `{{reroll_only1=[@{translation_luck}](~@{character_id}|rerollonly1)}}`,
                        ],...button_array].join(" ");
                .tftl-panel__row(class=`background-rand-${Math.floor(Math.random() * 10)+1}`)
                    button.tftl-panel__label--button(data-i18n=attribute, type="roll", value=roll)=attribute
                    input.tftl-panel__input--small(name=`attr_${attribute.toLowerCase()}`, type="number", value="0")
        .tftl-conditions.tftl-panel--alternate
            .tftl-panel__header(data-i18n="Conditions", class=`background-rand-${Math.floor(Math.random() * 10)+1}`) Conditions
            each condition in ["Upset","Scared","Exhausted","Injured","Broken"]
                .tftl-panel__row(class=`background-rand-${Math.floor(Math.random() * 10)+1}`)
                    strong.tftl-panel__label(data-i18n=condition)=condition
                    label.tftl-checkbox
                        input.tftl-checkbox__hide(name=`attr_${condition.toLowerCase()}`, type="checkbox", value="1")
                        span.tftl-checkbox__show
        .tftl-attributes.tftl-panel--alternate
            .tftl-panel__header(data-i18n="Skills", class=`background-rand-${Math.floor(Math.random() * 10)+1}`) Skills
            each skill in [{name:"Sneak", stat:"Body"},{name:"Force", stat:"Body"},{name:"Move", stat:"Body"},{name:"Tinker", stat:"Tech"},{name:"Program", stat:"Tech"},{name:"Calculate", stat:"Tech"},{name:"Contact", stat:"Heart"},{name:"Charm", stat:"Heart"},{name:"Lead", stat:"Heart"},{name:"Investigate", stat:"Mind"},{name:"Comprehend", stat:"Mind"},{name:"Empathize", stat:"Mind"}]
                -
                    const button_array = []
                    for (let i=0; i < 16; i++) button_array[i] = `{{reroll${i}=[@{translation_luck}](~@{character_id}|reroll[[@{${skill.stat.toLowerCase()}}+@{${skill.name.toLowerCase()}}+?{Bonus Dice|0}-@{upset}-@{scared}-@{exhausted}-@{injured}-@{broken}-${i}]])}}`;  
                    const roll = [...[
                        `&{template:tftl}`,
                        `{{name=${skill.name}}}`,
                        `{{character_name=@{character_name}}}`,
                        `{{roll=[[[[@{${skill.stat.toLowerCase()}}+@{${skill.name.toLowerCase()}}+?{Bonus Dice|0}-@{upset}-@{scared}-@{exhausted}-@{injured}-@{broken}]]d6>6]]}}`,
                        `{{pool_size=[[@{${skill.stat.toLowerCase()}}+@{${skill.name.toLowerCase()}}+?{Bonus Dice|0}-@{upset}-@{scared}-@{exhausted}-@{injured}-@{broken}]]}}`,
                        `{{min1=[[1d6>6]]}}`,
                        `{{stat_value=@{${skill.stat.toLowerCase()}}}}`,
                        `{{stat_title=${skill.stat.toLowerCase()}}}`,
                        `{{skill_value=@{${skill.name.toLowerCase()}}}}`,
                        `{{skill_title=${skill.name.toLowerCase()}}}`,
                        `{{bonus_dice=?{Bonus Dice|0}}}`,
                        `{{upset=[[@{upset}]]}}`,
                        `{{scared=[[@{scared}]]}}`,
                        `{{exhausted=[[@{exhausted}]]}}`,
                        `{{injured=[[@{injured}]]}}`,
                        `{{broken=[[@{broken}]]}}`,
                        `{{reroll=[@{translation_luck}](~@{character_id}|reroll)}}`
                        ],...button_array].join(" ");

                .tftl-panel__row(class=`background-rand-${Math.floor(Math.random() * 10)+1}`)
                    button.tftl-panel__label--button(data-i18n=`${skill.name} (${skill.stat})`, type="roll", value=roll)=`${skill.name} (${skill.stat})`
                    input.tftl-panel__input--small(name=`attr_${skill.name.toLowerCase()}`, type="number", value="0")
        .tftl-attributes.tftl-panel--alternate
            .tftl-panel__header(data-i18n="Experience", class=`background-rand-${Math.floor(Math.random() * 10)+1}`) Experience
            .tftl-panel__row.tftl-experience(class=`background-rand-${Math.floor(Math.random() * 10)+1}`) 
                each experience in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
                    label.tftl-checkbox
                        input.tftl-checkbox__hide(name=`attr_experience_${experience}`, type="checkbox")
                        span.tftl-checkbox__show

    .tftl-rightcol
        .tftl-panel--full.tftl-character
            each field in [{"name":"Name","type":"text"},{"name":"Type","type":"text"},{"name":"Age","type":"number"},{"name":"Luck","type":"luck"},{"name":"Drive","type":"text","span":2},{"name":"Problem","type":"text","span":2},{"name":"Pride","type":"pride","span":2},{"name":"Description","type":"text","span":2},{"name":"Favourite Song","type":"text"},{"name":"Anchor","type":"text"}]
                - const {name, type, span = "1"} = field;

                div(class=`tftl-panel__row--span${span} tftl-panel__row--${name.toLowerCase().replace(/ /g,"_")} background-rand-${Math.floor(Math.random() * 10)+1}`)
                    strong.tftl-panel__label--small.tftl-panel__label(data-i18n=name)=name
                    if (type === "luck")
                        input.tftl-panel__input--hide(name=`attr_luck_max`, type="number")
                        .tftl-checks
                            each luck in [1, 2, 3, 4, 5]
                                label.tftl-checkbox
                                    input.tftl-checkbox__hide(name=`attr_luck_${luck}`, type="checkbox")
                                    span.tftl-checkbox__show 
                    else if (type === "pride")
                        input.tftl-panel__input--hide(name=`attr_pride`, type="text")
                        label.tftl-checkbox
                            input.tftl-checkbox__hide(name=`attr_pride_check`, type="checkbox", value="1")
                            span.tftl-checkbox__show 
                    else
                        - const attr = (name === "Name") ? 'character_name' : name.toLowerCase().replace(/ /g,"_");
                        input.tftl-panel__input--hide(name=`attr_${attr}`, type=type)
        .tftl-panel--full
            .tftl-panel__header(data-i18n="Relationships" class=`background-rand-${Math.floor(Math.random() * 10)+1}`) Relationships
            fieldset(class=`repeating_relationships`)
                .tftl-panel__row--relationship(class=`background-rand-${Math.floor(Math.random() * 10)+1}`)
                    select.tftl-panel__label--select(name="attr_relationship_type")
                        option(data-i18n="PC") PC
                        option(data-i18n="NPC") NPC
                    input.tftl-panel__input--hide(name="attr_relationship", type="text")
        .tftl-panel
            .tftl-panel__header(class=`background-rand-${Math.floor(Math.random() * 10)+1}`)
                span.tftl-panel__left(data-i18n="Items") Items
                span.tftl-panel__right(data-i18n="Bonus") Bonus
            .tftl-panel__row--iconic(class=`background-rand-${Math.floor(Math.random() * 10)+1}`)
                span.tftl-panel__label--small(data-i18n="Iconic Item") Iconic Item
                input.tftl-panel__input--hide(name="attr_iconic_item", type="text")
                span.tftl-panel__label--value +2
            fieldset(class=`repeating_item`)
                .tftl-panel__row--item(class=`background-rand-${Math.floor(Math.random() * 10)+1}`)
                    input.tftl-panel__input--hide(name="attr_item_name", type="text")
                    span.tftl-panel__label--plus +
                    input.tftl-panel__input--item(name="attr_item_bonus", type="number", value="0")
        .tftl-panel--fullheight
            .tftl-panel__header(data-i18n="Hideout", class=`background-rand-${Math.floor(Math.random() * 10)+1}`) Hideout
            .tftl-panel__row--textarea(class=`background-rand-${Math.floor(Math.random() * 10)+1}`)
                textarea.tftl-panel__textarea--full(name="attr_hideout")
        .tftl-panel--full
            .tftl-panel__header(data-i18n="Notes", class=`background-rand-${Math.floor(Math.random() * 10)+1}`) Notes
            .tftl-panel__row--textarea(class=`background-rand-${Math.floor(Math.random() * 10)+1}`)
                textarea.tftl-panel__textarea--full(name="attr_notes")

include rolltemplates.pug

script(type="text/worker")

    include ../js/sheetworkers.js