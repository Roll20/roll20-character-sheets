include ../fields.pug

mixin skill(skillName, abilityName, opts)
  -
    opts = opts || {};
    var skillNameCap = skillName.charAt(0).toUpperCase() + skillName.slice(1);
    var abilityNameCap = abilityName.charAt(0).toUpperCase() + abilityName.slice(1);
    var attrName = skillName.replace(/( |\()/g, '_').replace(/(\*|ª|\))/g, '') + (opts.fillInTheBlank || '');

  .skill(style='width: 8.5in;')
    .inlineBlock(style='text-align: center; width: 0.25in;'): +input('checkbox', attrName + '_class')(value=1)
    .inlineBlock(style='width: 2.2in;')
      .name.blackBox: .rollButton
        span(data-i18n=opts.i18n) #{skillNameCap}
        +rollButton(attrName, attrName + '_notes')
        if(opts.fillInTheBlank)
          | (
          +labelledUnderlined('')(style='width: 1in;'): +input('text', attrName + '_subskill', { i18n: 'type-place' })(placeholder='type')
          | )
    .inlineBlock(style='width: 0.75in;')
      +labelledUnderlined(''): +readOnlyBox(attrName)
      .mathOperator =
    .inlineBlock(style='width: 0.75in;')
      +labelledUnderlined(abilityNameCap + ' mod', { i18n: abilityName + '-mod' }): +readOnlyBox(abilityName + '_mod')
      .mathOperator +
    .inlineBlock(style='width: 0.75in;')
      +labelledUnderlined('')(style='width: 0.5in;'): +input('number', attrName + '_ranks')(value=0)
      .mathOperator +
    .inlineBlock(style='width: 0.75in;')
      +labelledUnderlined('')(style='width: 0.5in;'): +input('number', attrName + '_misc')(value=0)
      .mathOperator +
    +labelledUnderlined('')(style='width: 2.5in;'): +input('text', attrName + '_notes')

.skillsTab
  +labelledBoxH('Armor Penalty', { i18n: 'armor-penalty' }): +input('number', 'armor_penalty')(value=0)
  .skillsHead
    label.inlineBlock(style='width: 0.6in;', data-i18n='class-skill-q') Class Skill?
    label.inlineBlock(style='width: 1.9in;')
    label.inlineBlock(style='width: 0.75in;', data-i18n='total') Total
    label.inlineBlock(style='width: 0.75in;')
    label.inlineBlock(style='width: 0.75in;', data-i18n='ranks') Ranks
    label.inlineBlock(style='width: 0.75in;', data-i18n='misc') Misc
    label.inlineBlock(style='width: 2in;', data-i18n='notes') Notes
  .skillsBody
    +skill('acrobaticsª', 'dex', { i18n: 'acrobatics' })
    +skill('appraise', 'int', { i18n: 'appraise' })
    +skill('bluff', 'cha', { i18n: 'bluff' })
    +skill('climbª', 'str', { i18n: 'climb' })
    +skill('craft', 'int', { i18n: 'craft', fillInTheBlank: 1 })
    +skill('craft', 'int', { i18n: 'craft', fillInTheBlank: 2 })
    +skill('craft', 'int', { i18n: 'craft', fillInTheBlank: 3 })
    +skill('craft', 'int', { i18n: 'craft', fillInTheBlank: 4 })
    +skill('craft', 'int', { i18n: 'craft', fillInTheBlank: 5 })
    +skill('diplomacy', 'cha', { i18n: 'diplomacy' })
    +skill('disable device*ª', 'dex', { i18n: 'disable-device' })
    +skill('disguise', 'cha', { i18n: 'disguise' })
    +skill('escape artistª', 'dex', { i18n: 'escape-artist' })
    +skill('flyª', 'dex', { i18n: 'fly' })
    +skill('handle animal*', 'cha', { i18n: 'handle-animal' })
    +skill('heal', 'wis', { i18n: 'heal' })
    +skill('intimidate', 'cha', { i18n: 'intimidate' })
    +skill('knowledge(arcana)*', 'int', { i18n: 'knowledge-arcana' })
    +skill('knowledge(dungeoneering)*', 'int', { i18n: 'knowledge-dungeoneering' })
    +skill('knowledge(engineering)*', 'int', { i18n: 'knowledge-engineering' })
    +skill('knowledge(geography)*', 'int', { i18n: 'knowledge-geography' })
    +skill('knowledge(history)*', 'int', { i18n: 'knowledge-history' })
    +skill('knowledge(local)*', 'int', { i18n: 'knowledge-local' })
    +skill('knowledge(nature)*', 'int', { i18n: 'knowledge-nature' })
    +skill('knowledge(nobility)*', 'int', { i18n: 'knowledge-nobility' })
    +skill('knowledge(planes)*', 'int', { i18n: 'knowledge-planes' })
    +skill('knowledge(religion)*', 'int', { i18n: 'knowledge-religion' })
    +skill('linguistics*', 'int', { i18n: 'linguistics' })
    +skill('perception', 'wis', { i18n: 'perception' })
    +skill('perform', 'cha', { i18n: 'perform', fillInTheBlank: 1 })
    +skill('perform', 'cha', { i18n: 'perform', fillInTheBlank: 2 })
    +skill('perform', 'cha', { i18n: 'perform', fillInTheBlank: 3 })
    +skill('perform', 'cha', { i18n: 'perform', fillInTheBlank: 4 })
    +skill('perform', 'cha', { i18n: 'perform', fillInTheBlank: 5 })
    +skill('profession*', 'wis', { i18n: 'profession', fillInTheBlank: 1 })
    +skill('profession*', 'wis', { i18n: 'profession', fillInTheBlank: 2 })
    +skill('profession*', 'wis', { i18n: 'profession', fillInTheBlank: 3 })
    +skill('profession*', 'wis', { i18n: 'profession', fillInTheBlank: 4 })
    +skill('profession*', 'wis', { i18n: 'profession', fillInTheBlank: 5 })
    +skill('rideª', 'dex', { i18n: 'ride' })
    +skill('sense motive', 'wis', { i18n: 'sense-motive' })
    +skill('sleight of hand*ª', 'dex', { i18n: 'sleight-of-hand' })
    +skill('spellcraft*', 'int', { i18n: 'spellcraft' })
    +skill('stealthª', 'dex', { i18n: 'stealth' })
    +skill('survival', 'wis', { i18n: 'survival' })
    +skill('swimª', 'str', { i18n: 'swim' })
    +skill('use magic device*', 'cha', { i18n: 'use-magic-device' })
  span(style='font-size: 0.8em;', data-i18n='trained-only-armor-penalty-legend') * Trained only, ª Armor penalty
