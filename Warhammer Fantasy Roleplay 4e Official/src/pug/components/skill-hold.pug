mixin skill(skill)
    - 
        const {name, characteristic, type, grouped, specialisations, forced} = skill;
        const attr = name.toLowerCase().replace(/ /g, "-");
        const classn = (attr === "evaluate") ? "eva1uate" : attr; // Roll20 hates the word "evaluate" in stylesheets.
        const char_attr = characteristic.toLowerCase().replace(/ /g, "_");
    .wfrp-skillwrapper    
        input(name=`attr_${attr}_settings`, type="hidden")
        .wfrp-skilltable__row        
            input(name=`attr_${attr}_characteristic`, type="hidden", value=char_attr)

            .wfrp-skilltable__cell--settingstoggle
                +display-toggle(`${attr}_settings`)

            .wfrp-skilltable__cell
                button(data-i18n=name, name=`roll_${attr}`, type="roll", value=rolls.skills[attr])

            .wfrp-skilltable__cell
                +characteristic-select(characteristic,`${attr}_characteristic`, true)

            each char in characteristics
                - const c_attr = char.name.toLowerCase().replace(/ /g, "_");
                .wfrp-skilltable__cell(class=`control__hide--${c_attr}`)
                    span.display(name=`attr_${c_attr}`)

            .wfrp-skilltable__cell
                input(name=`attr_${attr}_advances`, type="hidden", value="0")
                span.display(name=`attr_${attr}_advances`)

            .wfrp-skilltable__cell--last.wfrp-skilltable__cell--highlight
                input(name=`attr_${attr}`, type="hidden", value="0")
                span.display(name=`attr_${attr}`)

            .wfrp-skilltable_row.wfrp-settings(class=`control__hide--${classn}_settings`)
                    
                .wfrp-settings__row
                    .wfrp-settings__label(data-i18n=`Modifier`) 
                    span.display(name=`attr_${attr}_modifier`)
                    input(name=`attr_${attr}_modifier`, type="hidden", value="0")
                    
                .wfrp-settings__row
                    .wfrp-settings__label(data-i18n=`Bonus`) 
                    input.wfrp-settings__input(name=`attr_${attr}_bonus`, type="text")
            
                .wfrp-settings__row--span
                    .wfrp-settings__label(data-i18n=`Roll Notes`) 
                    input.wfrp-settings__input(name=`attr_${attr}_notes`, type="text") 


                if (grouped && specialisations && specialisations[0] !== 1)
                    h2(data-i18n="specialisation display")

                    each specialisation in specialisations
                        .wfrp-settings__row 
                            .wfrp-settings__label(data-i18n=specialisation)
                            input.wfrp-settings__checkbox(name=`attr_${specialisation.toLowerCase().replace(/ /g,"_")}_control`, type="checkbox")

    if (grouped && specialisations && specialisations[0] !== 1)
        each specialisation in specialisations
            .specialisation_wrapper
                -const attr = specialisation.toLowerCase().replace(/ /g,"_");
                input(name=`attr_${attr}_settings`, type="hidden")
                input(name=`attr_${attr}_control`, type="hidden")
                .wfrp-skilltable__row--specialisation(class=`control__hide--${attr}`)
                    input(name=`attr_${attr}_characteristic`, type="hidden", value=char_attr)

                    .wfrp-skilltable__cell--settingstoggle
                        +display-toggle(`${attr}_settings`)

                    .wfrp-skilltable__cell
                        button(data-i18n=specialisation, name=`roll_${attr}`, type="roll", value=rolls.skills[attr])

                    .wfrp-skilltable__cell
                        +characteristic-select(characteristic,`${attr}_characteristic`, true)

                    each characteristic in characteristics
                        - const c_attr = characteristic.name.toLowerCase().replace(/ /g, "_");
                        .wfrp-skilltable__cell(class=`control__hide--${c_attr}`)
                            span.display(name=`attr_${c_attr}`)
                            input(name=`attr_${c_attr}`, type="hidden", value="0")
                        
                    .wfrp-skilltable__cell
                        input(name=`attr_${attr}_advances`, type="hidden", value="0")
                        span.display(name=`attr_${attr}_advances`)

                    .wfrp-skilltable__cell--last.wfrp-skilltable__cell--highlight
                        span.display(name=`attr_${attr}`)

                    .wfrp-skilltable_row.wfrp-settings(class=`control__hide--${attr}_settings`)
                            
                        .wfrp-settings__row
                            .wfrp-settings__label(data-i18n=`Modifier`) 
                            span.display(name=`attr_${attr}_modifier`)
                            input(name=`attr_${attr}_modifier`, type="hidden", value="0")
                            
                        .wfrp-settings__row
                            .wfrp-settings__label(data-i18n=`Bonus`) 
                            input.wfrp-settings__input(name=`attr_${attr}_bonus`, type="text")
                    
                        .wfrp-settings__row--span
                            .wfrp-settings__label(data-i18n=`Roll Notes`) 
                            input.wfrp-settings__input(name=`attr_${attr}_notes`, type="text") 

    if (grouped && !specialisations || forced === 1)
        +repeating-section(attr.replace(/_/g,"-"), 'skill-row', characteristic)