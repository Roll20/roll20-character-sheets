mixin skill(skill)
    - 
        const {name, characteristic, type, grouped, specialisations, forced} = skill;
        const attr = name.toLowerCase().replace(/ /g, "-");
        const classn = (attr === "evaluate") ? "eva1uate" : attr; // Roll20 hates the word "evaluate" in stylesheets.
        const char_attr = characteristic.toLowerCase().replace(/ /g, "_");
    .wfrp-skillwrapper    
        input(name=`attr_${attr}_settings`, type="hidden")
        .wfrp-skilltable__row        
            input(name=`attr_${attr}_characteristic`, type="hidden", value=char_attr)

            .wfrp-skilltable__cell--settingstoggle
                +display-toggle(`${attr}_settings`)

            .wfrp-skilltable__cell
                button(data-i18n=name, name=`roll_${attr}`, type="roll", value=rolls.skills[attr])

            .wfrp-skilltable__cell
                +characteristic-select(characteristic,`${attr}_characteristic`, true)

            each char in characteristics
                - const c_attr = char.name.toLowerCase().replace(/ /g, "_");
                .wfrp-skilltable__cell(class=`control__hide--${c_attr}`)
                    span.display(name=`attr_${c_attr}`)

            .wfrp-skilltable__cell
                input(name=`attr_${attr}_advances`, type="hidden", value="0")
                span.display(name=`attr_${attr}_advances`)

            .wfrp-skilltable__cell--last.wfrp-skilltable__cell--highlight
                input(name=`attr_${attr}`, type="hidden", value="0")
                span.display(name=`attr_${attr}`)

            .wfrp-skilltable_row.wfrp-settings(class=`control__hide--${classn}_settings`)
                    
                .wfrp-settings__row
                    .wfrp-settings__label(data-i18n=`Modifier`) 
                    span.display(name=`attr_${attr}_modifier`)
                    input(name=`attr_${attr}_modifier`, type="hidden", value="0")
                    
                .wfrp-settings__row
                    .wfrp-settings__label(data-i18n=`Bonus`) 
                    input.wfrp-settings__input(name=`attr_${attr}_bonus`, type="text")
            
                .wfrp-settings__row--span
                    .wfrp-settings__label(data-i18n=`Roll Notes`) 
                    input.wfrp-settings__input(name=`attr_${attr}_notes`, type="text") 