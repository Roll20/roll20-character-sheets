include ../../data/assets
include ./asset-builder.pug

mixin combatTalentSummaryBuilder()
  input.asset-combat-talent.hide-element(type='checkbox' name='attr_assetcombat-talent')
  .combat-talent.showhide
    each asset, key in assets.combatTalents
      input(class=`hide-element ${key}` type='checkbox' name=`attr_assetcombattalentdiv${key}`)
      div(class=`hide-element ${key}`)
        +assetHeader(key)
        if asset.description
          .asset-description
            - var translationDesc = `asset-description-${key}`
            .asset-description-text(data-i18n=translationDesc)!=locals.translations[translationDesc]
        .flex-wrapper
          each number in [ 1, 2, 3 ]
            +summaryAbility(asset, number, key)

mixin companionSummaryBuilder()
  - var assetType = 'companion'
  input.asset-companion.hide-element(type='checkbox' name=`attr_asset${assetType}`)
  .companion.showhide
    each asset, key in assets.companions
      input(class=`hide-element ${key}` type='checkbox' name=`attr_asset${assetType}div${key}`)
      div(class=`hide-element ${key}`)
        +assetHeader(key)
        .flex-wrapper
          each ability in [ 1, 2, 3 ]
            +summaryAbility(asset, ability, key)
        .asset-track-wrapper
          - var healthValue = 0
          while healthValue <= asset.health
            - var value = healthValue++
            .asset-track-box
              if value == 0
                .asset-track-box-display=value
              else
                .asset-track-box-display=`+ ${value}`
              input(type='radio' name=`attr_assettrack_${key}` value=`${value}`)

mixin ritualSummaryBuilder()
  - var assetType = 'ritual'
  input.asset-ritual.hide-element(type='checkbox' name=`attr_asset${assetType}`)
  .ritual.showhide
    each asset, key in assets.rituals
      input(class=`hide-element ${key}` type='checkbox' name=`attr_asset${assetType}div${key}`)
      div(class=`hide-element ${key}`)
        +assetHeader(key)
        .flex-wrapper
          each ability in [ 1, 2, 3 ]
            +summaryAbility(asset, ability, key)
        if asset.track
          +track(asset.track, key)

mixin pathSummaryBuilder()
  - var assetType = 'path'
  input.asset-path.hide-element(type='checkbox' name=`attr_asset${assetType}`)
  .path.showhide
    each asset, key in assets.paths
      input(class=`hide-element ${key}` type='checkbox' name=`attr_asset${assetType}div${key}`)
      div(class=`hide-element ${key}`)
        +assetHeader(key)
        .flex-wrapper
          each ability in [ 1, 2, 3 ]
            +summaryAbility(asset, ability, key)
        if asset.track
          +track(asset.track, key)

mixin summaryAbility(asset, number, key)
  if asset.firstAbilityChecked && number == 1
    input.asset-summary-ability-toggle.hide-element(
      type='checkbox'
      name=`attr_assetcheckbox_${asset.abilityId}${number}`
      checked
    )
  else
    input.asset-summary-ability-toggle.hide-element(
      type='checkbox'
      name=`attr_assetcheckbox_${asset.abilityId}${number}`
    )
  .flex-container.hide-element
    //- note: disabled inputs are not updated by setAttrs, so this one cannot be used as an attr, it's just cosmetic
    input.asset-ability(
      type='checkbox'
      checked
      disabled
    )
    - var translationAbility = `asset-${key}-ability-${number}`
    .asset-ability
      p(data-i18n=translationAbility)!=locals.translations[translationAbility]
      if asset.abilityWriteIn
        if asset.abilityWriteIn.number == number
          - var translationAbilityWriteIn = `asset-${key}-ability-${number}-write-in`
          .asset-ability-write-in(data-i18n=translationAbilityWriteIn)!=locals.translations[translationAbilityWriteIn]
          input.border-bottom.no-border(type='text' name=`attr_asset${asset.abilityWriteIn.name}` value='' readonly)
      if asset.list && number == asset.list.ability
        - var currentListItem = 1
        ul
          while currentListItem <= asset.list.number
            - var translationId = `asset-${key}-ability-${number}-list-${currentListItem++}`
            li(data-i18n=translationId)!=locals.translations[translationId]

mixin assetHeader(key)
  .asset-summary-header(data-i18n=`asset-title-${key}`)=locals.translations[`asset-title-${key}`]
