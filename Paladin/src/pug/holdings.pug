.holdings.grid
  .col
    .row
      img.knight(alt="King Arthut Pendragon Knight's Character Sheet" src="https://raw.githubusercontent.com/clevett/roll20-character-sheets/pendragonv1/Pendragon5thEdition/src/pendragonlogo.png")
      img.woman(alt="King Arthut Pendragon Woman's Character Sheet" src="https://raw.githubusercontent.com/clevett/roll20-character-sheets/pendragonv1/Pendragon5thEdition/src/womenlogo.png")
    .annual-glory
      .header
        h1(data-i18n='annual glory rewards')
      each val in ['traits', 'chivalry', 'holdings', 'passions', 'religion', 'total']
        - const classNotation = val === 'chivalry' ? "knight"  : "";
        .row.2autocolumn(class=classNotation)
          h2(data-i18n=val)
          +textInput(`annual glory rewards ${val}`)
    .holdings-row
      .header
        h1(data-i18n='holdings')
      .row
        textarea(name='attr_holdings')
    .equipment-at-home
      .header
        h1(data-i18n='equipment at home')
      .row.2autocolumn
        h2(data-i18n='denarii')
        +textInput(`denarii`)
      .row.2autocolumn
        h2(data-i18n='shilling')
        +textInput(`shilling`)
      .row.2autocolumn
        h2(data-i18n='libra')
        +textInput(`libra`)
      .row
        textarea(name='attr_equipment_at_home')
    .army.knight
      .header
        h1(data-i18n='army')
      each val in ['old knights', 'middle aged knights', 'young knights', 'total family knights', 'vassal knights', 'other lineage men', 'levy']
        .row.2autocolumn
          h2(data-i18n=val)
          if val != "total family knights"
            +numberInput(val)
          else
            span.text-center.display(name='attr_total_family_knights')
      .row
        textarea(name='attr_army_notes')
    .household-treasures.woman
      .header
        h1(data-i18n='household treasures')
      .row
        textarea(data-i18n-placeholder='household treasures' name='attr_household_treasures')

  .col.gold-left-border
    .family-history
      .row.gold-bottom-border
        h1(data-i18n='family history and events')
      .row.grid.col-4
        each val in ['born', 'squired', 'knighted']
          - const classNotation = val === 'squired' || val === 'knighted' ? "knight"  : "";
          .col.2autocolumn(class=classNotation)
            h2(data-i18n=val)
            +textInput(val)
      .row.grid.knight
          .col.2autocolumn
            h2(data-i18n='member of the round table')
            +textInput('member of the round table')
      .row.grid.col-4
        each val in ['landed', 'titled', 'wed', 'died']
          .col.2autocolumn
            h2(data-i18n=val)
            +textInput(val)
      .row.grid.col-3
        each val in ['father name', 'class', 'glory to sons']
          .col.2autocolumn
            h2(data-i18n=val)
            +textInput(val)
      .row
        each val in ['family characteristic', 'spouse', 'lover', 'children', 'will']
          .col.2autocolumn
              h2(data-i18n=val)
              +textInput(val)

    .character-history
      .row.gold-bottom-border
        h1(data-i18n='character history')
        h1(data-i18n='glory')
      .row.events
        h2(data-i18n='date')
        h2(data-i18n='important event')
        h2(data-i18n='new')
        h2(data-i18n='total')
      .repeating-container
        fieldset(class='repeating_events')
          .row.events
            +textInput('date')
            +textInput('event')
            +numberInput('new glory')
            +numberInput('total glory')
